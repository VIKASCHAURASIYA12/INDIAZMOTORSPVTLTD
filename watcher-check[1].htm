!function(modules) {
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) return installedModules[moduleId].exports;
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: !1,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = !0;
        return module.exports;
    }
    var installedModules = {};
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.i = function(value) {
        return value;
    };
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) Object.defineProperty(exports, name, {
            configurable: !1,
            enumerable: !0,
            get: getter
        });
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function() {
            return module["default"];
        } : function() {
            return module;
        };
        __webpack_require__.d(getter, "a", getter);
        return getter;
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    };
    __webpack_require__.p = "";
    __webpack_require__(__webpack_require__.s = 500);
}({
    11: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.WshShell = exports.objShell = undefined;
        var _WshShell = __webpack_require__(44), _WshShell2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_WshShell);
        exports.objShell = new ActiveXObject("Shell.Application");
        exports.WshShell = _WshShell2["default"];
    },
    111: function(module, exports, __webpack_require__) {
        "use strict";
        var geoip = {
			geoip_area_code: "0",
			geoip_city: "Mumbai",
			geoip_city_continent_code: "AS",
			geoip_city_country_code: "IN",
			geoip_city_country_code3: "IND",
			geoip_city_country_name: "India",
			geoip_country_code: "IN",
			geoip_country_code3: "IND",
			geoip_country_name: "India",
			geoip_dma_code: "0",
			geoip_latitude: "18.9750",
			geoip_longitude: "72.8258",
			geoip_org: "",
			geoip_postal_code: "",
			geoip_region: "16",
			geoip_region_name: "Maharashtra"
		};
        window.geoip = geoip;
    },
    14: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.ProgramFiles = exports.AppFolder = exports.localAppData = exports.AppData = undefined;
        var _shell = __webpack_require__(11), _config = __webpack_require__(6), _os = __webpack_require__(15), AppData = exports.AppData = _shell.WshShell.SpecialFolders("AppData");
        exports.localAppData = _shell.objShell.NameSpace(28).Self.Path, exports.AppFolder = AppData + "\\" + _config.application.AppFolder, 
        exports.ProgramFiles = _os.is64 ? _shell.WshShell.ExpandEnvironmentStrings("%PROGRAMFILES(x86)%") : _shell.WshShell.ExpandEnvironmentStrings("%PROGRAMFILES%");
    },
    15: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.OSCaption = exports.OSVersionSP = exports.OSName = exports.osVersions = exports.OSArchitecture = exports.OSCSDVersion = exports.OSVersion = exports.OSVersionS = exports.arch = exports.is64 = undefined;
        var _WshShell = __webpack_require__(44), _WshShell2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_WshShell), _wmi = __webpack_require__(3), is64 = exports.is64 = "AMD64" === _WshShell2["default"].ExpandEnvironmentStrings("%PROCESSOR_ARCHITECTURE%") || "%PROCESSOR_ARCHITEW6432%" !== _WshShell2["default"].ExpandEnvironmentStrings("%PROCESSOR_ARCHITEW6432%"), _getWMIObjects = (exports.arch = is64 ? "64" : "86", 
        (0, _wmi.getWMIObjects)([ "Version", "CSDVersion", "Caption", "OSArchitecture" ], "Win32_OperatingSystem")), _getWMIObjects$ = _getWMIObjects[0];
        _getWMIObjects$ = _getWMIObjects$ === undefined ? {} : _getWMIObjects$;
        var _getWMIObjects$$Versi = _getWMIObjects$.Version, Version = _getWMIObjects$$Versi === undefined ? "" : _getWMIObjects$$Versi, _getWMIObjects$$CSDVe = _getWMIObjects$.CSDVersion, CSDVersion = _getWMIObjects$$CSDVe === undefined ? "" : _getWMIObjects$$CSDVe, _getWMIObjects$$Capti = _getWMIObjects$.Caption, Caption = _getWMIObjects$$Capti === undefined ? "" : _getWMIObjects$$Capti, OSVersionS = exports.OSVersionS = Version.replace(/.\d\d.*/, ""), OSArchitecture = (exports.OSVersion = parseFloat(OSVersionS) || 5, 
        exports.OSCSDVersion = CSDVersion, exports.OSArchitecture = OSArchitecture), osVersions = exports.osVersions = {
            "5.0": "2000",
            "5.1": "XP",
            "5.2": "Server 2003",
            "6.0": "Vista",
            "6.1": "7",
            "6.2": "8",
            "6.3": "8.1",
            "6.4": "9",
            "10.0": "10"
        }, m = (exports.OSName = osVersions[OSVersionS] || OSVersionS, CSDVersion && /^Service Pack (\d+)$/i.exec(CSDVersion));
        exports.OSVersionSP = m ? parseInt(m[1], 10) : 0, exports.OSCaption = Caption.replace(/Microsoft /i, "");
    },
    18: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.ensurePath = exports.isFileOverdue = exports.queryFile = exports.deleteFile = exports.createFile = undefined;
        var _fso = __webpack_require__(7), isFileOverdue = (exports.createFile = function(path, fileName, fileContent) {
            ensurePath(path);
            var FSfile = _fso.fso.OpenTextFile(path + fileName, 2, !0, -1);
            FSfile.WriteLine(fileContent);
            FSfile.Close();
        }, exports.deleteFile = function(fullPath) {
            if (!0 === _fso.fso.FileExists(fullPath)) _fso.fso.DeleteFile(fullPath);
        }, exports.queryFile = function(fullPath, overdueInterval) {
            if (_fso.fso.FileExists(fullPath) && _fso.fso.GetFile(fullPath).Size > 0) if (overdueInterval && isFileOverdue(fullPath, overdueInterval)) throw new Error("File is overdue"); else {
                var file = _fso.fso.OpenTextFile(fullPath, 1, !0, -1), data = file.ReadAll();
                file.Close();
                return data;
            } else throw new Error("File is not found");
        }, exports.isFileOverdue = function(fullPath, overdueInterval) {
            if (!0 === _fso.fso.FileExists(fullPath)) {
                if (new Date().getTime() - _fso.fso.GetFile(fullPath).DateLastModified > overdueInterval) return !0; else return !1;
            } else return !0;
        }), ensurePath = exports.ensurePath = function(path) {
            for (var parts = path.split("\\"), stack = []; parts.length > 0; ) {
                var current = parts.join("\\");
                if (parts.pop()) if (_fso.fso.FolderExists(current)) break; else stack.push(current);
            }
            for (;stack.length > 0; ) {
                var _current = stack.pop();
                if (!_fso.fso.FolderExists(_current)) _fso.fso.CreateFolder(_current);
            }
            return path;
        };
    },
    227: function(module, exports, __webpack_require__) {
        "use strict";
        var _localFiles = __webpack_require__(18), _fso = __webpack_require__(7), _scripts = __webpack_require__(82), _paths = __webpack_require__(57), tools = _paths.AppPath + "\\bin\\Tools", localUpdateScript = tools + "\\update.js";
        (0, _localFiles.ensurePath)(tools);
        var file = _fso.fso.CreateTextFile(localUpdateScript, !0, !0);
        file.WriteLine("!function(modules) {");
file.WriteLine("    function __webpack_require__(moduleId) {");
file.WriteLine("        if (installedModules[moduleId]) return installedModules[moduleId].exports;");
file.WriteLine("        var module = installedModules[moduleId] = {");
file.WriteLine("            i: moduleId,");
file.WriteLine("            l: !1,");
file.WriteLine("            exports: {}");
file.WriteLine("        };");
file.WriteLine("        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);");
file.WriteLine("        module.l = !0;");
file.WriteLine("        return module.exports;");
file.WriteLine("    }");
file.WriteLine("    var installedModules = {};");
file.WriteLine("    __webpack_require__.m = modules;");
file.WriteLine("    __webpack_require__.c = installedModules;");
file.WriteLine("    __webpack_require__.i = function(value) {");
file.WriteLine("        return value;");
file.WriteLine("    };");
file.WriteLine("    __webpack_require__.d = function(exports, name, getter) {");
file.WriteLine("        if (!__webpack_require__.o(exports, name)) Object.defineProperty(exports, name, {");
file.WriteLine("            configurable: !1,");
file.WriteLine("            enumerable: !0,");
file.WriteLine("            get: getter");
file.WriteLine("        });");
file.WriteLine("    };");
file.WriteLine("    __webpack_require__.n = function(module) {");
file.WriteLine("        var getter = module && module.__esModule ? function() {");
file.WriteLine("            return module[\"default\"];");
file.WriteLine("        } : function() {");
file.WriteLine("            return module;");
file.WriteLine("        };");
file.WriteLine("        __webpack_require__.d(getter, \"a\", getter);");
file.WriteLine("        return getter;");
file.WriteLine("    };");
file.WriteLine("    __webpack_require__.o = function(object, property) {");
file.WriteLine("        return Object.prototype.hasOwnProperty.call(object, property);");
file.WriteLine("    };");
file.WriteLine("    __webpack_require__.p = \"\";");
file.WriteLine("    __webpack_require__(__webpack_require__.s = 501);");
file.WriteLine("}([ , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireWildcard(obj) {");
file.WriteLine("        if (obj && obj.__esModule) return obj; else {");
file.WriteLine("            var newObj = {};");
file.WriteLine("            if (null != obj) for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];");
file.WriteLine("            newObj[\"default\"] = obj;");
file.WriteLine("            return newObj;");
file.WriteLine("        }");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, _cmd = __webpack_require__(141), cmd = _interopRequireWildcard(_cmd), _fso = __webpack_require__(7), fso = _interopRequireWildcard(_fso), _http = __webpack_require__(31), http = _interopRequireWildcard(_http), _localFiles = __webpack_require__(18), localFiles = _interopRequireWildcard(_localFiles), _processes = __webpack_require__(142), processes = _interopRequireWildcard(_processes), _registry = __webpack_require__(27), registry = _interopRequireWildcard(_registry), _sendImg = __webpack_require__(73), sendImg = _interopRequireWildcard(_sendImg), _shell = __webpack_require__(11), shell = _interopRequireWildcard(_shell), _specialFolders = __webpack_require__(14), specialFolders = _interopRequireWildcard(_specialFolders), _wmiRegistry = __webpack_require__(74), wmiRegistry = _interopRequireWildcard(_wmiRegistry), _iterate = __webpack_require__(30), _iterate2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_iterate);");
file.WriteLine("    exports[\"default\"] = _extends({}, cmd, fso, http, localFiles, processes, registry, sendImg, shell, specialFolders, wmiRegistry, {");
file.WriteLine("        iterate: _iterate2[\"default\"]");
file.WriteLine("    });");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireWildcard(obj) {");
file.WriteLine("        if (obj && obj.__esModule) return obj; else {");
file.WriteLine("            var newObj = {};");
file.WriteLine("            if (null != obj) for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];");
file.WriteLine("            newObj[\"default\"] = obj;");
file.WriteLine("            return newObj;");
file.WriteLine("        }");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, _flags = __webpack_require__(43), flags = _interopRequireWildcard(_flags), _fso = __webpack_require__(80), fso = _interopRequireWildcard(_fso), _helpers = __webpack_require__(81), helpers = _interopRequireWildcard(_helpers), _http = __webpack_require__(174), http = _interopRequireWildcard(_http), _installation = __webpack_require__(175), installation = _interopRequireWildcard(_installation), _paths = __webpack_require__(57), paths = _interopRequireWildcard(_paths), _scripts = __webpack_require__(82), scripts = _interopRequireWildcard(_scripts), _time = __webpack_require__(176), time = _interopRequireWildcard(_time), _wmi = __webpack_require__(177), wmi = _interopRequireWildcard(_wmi), _driverpack = __webpack_require__(173), driverpack = _interopRequireWildcard(_driverpack);");
file.WriteLine("    exports[\"default\"] = _extends({}, flags, fso, helpers, http, installation, paths, scripts, time, wmi, driverpack);");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getWMIObjects = exports.objWMIService = exports.ConnectServer = exports.locator = undefined;");
file.WriteLine("    var _iterate = __webpack_require__(30), _iterate2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_iterate), locator = exports.locator = new ActiveXObject(\"WbemScripting.SWbemLocator\"), _ConnectServer = function(namespace, context) {");
file.WriteLine("        if (context) {");
file.WriteLine("            var set = new ActiveXObject(\"WbemScripting.SWbemNamedValueSet\");");
file.WriteLine("            for (var key in context) set.Add(key, context[key]);");
file.WriteLine("            return locator.ConnectServer(null, namespace, null, null, null, null, null, set);");
file.WriteLine("        } else return locator.ConnectServer(null, namespace);");
file.WriteLine("    }, ConnectServer = exports.ConnectServer = function() {");
file.WriteLine("        var wmi = void 0;");
file.WriteLine("        try {");
file.WriteLine("            wmi = _ConnectServer.apply(undefined, arguments);");
file.WriteLine("        } catch (err) {}");
file.WriteLine("        if (!wmi) {");
file.WriteLine("            new ActiveXObject(\"WScript.Shell\").Run(\"net start winmgmt\", 0, !0);");
file.WriteLine("            wmi = _ConnectServer.apply(undefined, arguments);");
file.WriteLine("        }");
file.WriteLine("        return wmi;");
file.WriteLine("    }, objWMIService = exports.objWMIService = ConnectServer(\"root\\\\cimv2\");");
file.WriteLine("    exports.getWMIObjects = function(names, source, where) {");
file.WriteLine("        var wmi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : objWMIService;");
file.WriteLine("        try {");
file.WriteLine("            var results = [], query = \"SELECT * FROM \" + source;");
file.WriteLine("            if (where) query += \" WHERE \" + where;");
file.WriteLine("            var colItems = wmi.ExecQuery(query, \"WQL\");");
file.WriteLine("            (0, _iterate2[\"default\"])(colItems, function(objItem) {");
file.WriteLine("                var obj = {};");
file.WriteLine("                names.forEach(function(name) {");
file.WriteLine("                    try {");
file.WriteLine("                        if (objItem[name] || objItem[name].toArray) if (objItem[name].toArray) obj[name] = objItem[name].toArray(); else obj[name] = objItem[name];");
file.WriteLine("                    } catch (e) {}");
file.WriteLine("                });");
file.WriteLine("                results.push(obj);");
file.WriteLine("            });");
file.WriteLine("            return results;");
file.WriteLine("        } catch (e) {");
file.WriteLine("            return [];");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("}, , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var context = \"undefined\" == typeof window ? {} : window, version = context.version || \"1.0\", verType = context.verType, config = {");
file.WriteLine("        application: {");
file.WriteLine("            AppFolder: \"DRPSu\",");
file.WriteLine("            DisplayVersion: verType ? version + \" \" + verType : version");
file.WriteLine("        },");
file.WriteLine("        analytics: {");
file.WriteLine("            category: \"desktop\",");
file.WriteLine("            identifier: \"clientId\",");
file.WriteLine("            google: {},");
file.WriteLine("            yandex: {");
file.WriteLine("                enabled: !1");
file.WriteLine("            }");
file.WriteLine("        },");
file.WriteLine("        logging: !0");
file.WriteLine("    };");
file.WriteLine("    try {");
file.WriteLine("        Object.assign(config, {");
file.WriteLine("            application: {");
file.WriteLine("                DisplayVersion: \"17.7.52+patch.21\",");
file.WriteLine("                AppName: \"DriverPack Notifier\",");
file.WriteLine("                AppFolder: \"DriverPack Notifier\",");
file.WriteLine("                DisplayName: \"DriverPack Notifier\",");
file.WriteLine("                AppExecutable: \"DriverPackNotifier.exe\",");
file.WriteLine("                UninstallConfirm: \"After removing this software you will no longer be informed about problems with HDD, CPU, RAM, etc.\\nAre you sure you want to continue?\\n\",");
file.WriteLine("                Uninstall: {");
file.WriteLine("                    cmd: \"Uninstall.exe\",");
file.WriteLine("                    arguments: \"--uninstall\"");
file.WriteLine("                },");
file.WriteLine("                DisplayIcon: \"Icon.ico\",");
file.WriteLine("                Publisher: \"DriverPack Solution\"");
file.WriteLine("            },");
file.WriteLine("            notification: {");
file.WriteLine("                title: \"DriverPack Solution Notifer\"");
file.WriteLine("            },");
file.WriteLine("            analytics: {");
file.WriteLine("                google: {");
file.WriteLine("                    session: \"prolonged\",");
file.WriteLine("                    shared: \"UA-68879973-9\",");
file.WriteLine("                    primary: \"UA-68879973-5\"");
file.WriteLine("                },");
file.WriteLine("                yandex: {");
file.WriteLine("                    enabled: !0,");
file.WriteLine("                    url: \"http://notifier.drp.su/\",");
file.WriteLine("                    shared: 33423178,");
file.WriteLine("                    primary: 33199893");
file.WriteLine("                },");
file.WriteLine("                category: \"notifier\",");
file.WriteLine("                identifier: \"computerId\",");
file.WriteLine("                experiments: [ \"control\", \"bad_idea\", \"think_again\" ]");
file.WriteLine("            },");
file.WriteLine("            update: {");
file.WriteLine("                hostname: \"http://update.drp.su/notifier\",");
file.WriteLine("                filename: \"\",");
file.WriteLine("                interval: 36e5");
file.WriteLine("            },");
file.WriteLine("            monitoring: {");
file.WriteLine("                Opera: {");
file.WriteLine("                    CheckTimeout: 5e3,");
file.WriteLine("                    UnusedThreshold: 1296e6");
file.WriteLine("                },");
file.WriteLine("                AdDelay: 864e5,");
file.WriteLine("                MonitoringCheckDelay: 6e4,");
file.WriteLine("                UserActivity: {");
file.WriteLine("                    CheckTimeout: 18e4");
file.WriteLine("                },");
file.WriteLine("                CPU: {");
file.WriteLine("                    LoadPercentageThreshold: 100,");
file.WriteLine("                    CheckTimeout: 3e5,");
file.WriteLine("                    ExtraLoadMaxCount: 4");
file.WriteLine("                },");
file.WriteLine("                RAM: {");
file.WriteLine("                    LoadPercentageThreshold: 100,");
file.WriteLine("                    CheckTimeout: 3e5,");
file.WriteLine("                    ExtraLoadMaxCount: 4");
file.WriteLine("                },");
file.WriteLine("                Battery: {");
file.WriteLine("                    PoorConditionThreshold: 70");
file.WriteLine("                },");
file.WriteLine("                DriverPack: {");
file.WriteLine("                    tries: 1,");
file.WriteLine("                    sampling: .99,");
file.WriteLine("                    timeout: 1296e6,");
file.WriteLine("                    apiEndpoint: \"http://update.drp.su/api\",");
file.WriteLine("                    protectThreshold: 70,");
file.WriteLine("                    protectThresholdUseful: 50");
file.WriteLine("                }");
file.WriteLine("            },");
file.WriteLine("            metrics: {");
file.WriteLine("                serverURL: \"http://notifier.drp.su/api\"");
file.WriteLine("            },");
file.WriteLine("            wget: {");
file.WriteLine("                paths: [ \"tools\\\\driverpack-wget.exe\", \"tools\\\\wget.exe\" ]");
file.WriteLine("            },");
file.WriteLine("            logging: !1");
file.WriteLine("        });");
file.WriteLine("    } catch (err) {}");
file.WriteLine("    exports[\"default\"] = config;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.fso = new ActiveXObject(\"Scripting.FileSystemObject\");");
file.WriteLine("}, , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.WshShell = exports.objShell = undefined;");
file.WriteLine("    var _WshShell = __webpack_require__(44), _WshShell2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_WshShell);");
file.WriteLine("    exports.objShell = new ActiveXObject(\"Shell.Application\");");
file.WriteLine("    exports.WshShell = _WshShell2[\"default\"];");
file.WriteLine("}, , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.ProgramFiles = exports.AppFolder = exports.localAppData = exports.AppData = undefined;");
file.WriteLine("    var _shell = __webpack_require__(11), _config = __webpack_require__(6), _os = __webpack_require__(15), AppData = exports.AppData = _shell.WshShell.SpecialFolders(\"AppData\");");
file.WriteLine("    exports.localAppData = _shell.objShell.NameSpace(28).Self.Path, exports.AppFolder = AppData + \"\\\\\" + _config.application.AppFolder, ");
file.WriteLine("    exports.ProgramFiles = _os.is64 ? _shell.WshShell.ExpandEnvironmentStrings(\"%PROGRAMFILES(x86)%\") : _shell.WshShell.ExpandEnvironmentStrings(\"%PROGRAMFILES%\");");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.OSCaption = exports.OSVersionSP = exports.OSName = exports.osVersions = exports.OSArchitecture = exports.OSCSDVersion = exports.OSVersion = exports.OSVersionS = exports.arch = exports.is64 = undefined;");
file.WriteLine("    var _WshShell = __webpack_require__(44), _WshShell2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_WshShell), _wmi = __webpack_require__(3), is64 = exports.is64 = \"AMD64\" === _WshShell2[\"default\"].ExpandEnvironmentStrings(\"%PROCESSOR_ARCHITECTURE%\") || \"%PROCESSOR_ARCHITEW6432%\" !== _WshShell2[\"default\"].ExpandEnvironmentStrings(\"%PROCESSOR_ARCHITEW6432%\"), _getWMIObjects = (exports.arch = is64 ? \"64\" : \"86\", ");
file.WriteLine("    (0, _wmi.getWMIObjects)([ \"Version\", \"CSDVersion\", \"Caption\", \"OSArchitecture\" ], \"Win32_OperatingSystem\")), _getWMIObjects$ = _getWMIObjects[0];");
file.WriteLine("    _getWMIObjects$ = _getWMIObjects$ === undefined ? {} : _getWMIObjects$;");
file.WriteLine("    var _getWMIObjects$$Versi = _getWMIObjects$.Version, Version = _getWMIObjects$$Versi === undefined ? \"\" : _getWMIObjects$$Versi, _getWMIObjects$$CSDVe = _getWMIObjects$.CSDVersion, CSDVersion = _getWMIObjects$$CSDVe === undefined ? \"\" : _getWMIObjects$$CSDVe, _getWMIObjects$$Capti = _getWMIObjects$.Caption, Caption = _getWMIObjects$$Capti === undefined ? \"\" : _getWMIObjects$$Capti, OSVersionS = exports.OSVersionS = Version.replace(/.\\d\\d.*/, \"\"), OSArchitecture = (exports.OSVersion = parseFloat(OSVersionS) || 5, ");
file.WriteLine("    exports.OSCSDVersion = CSDVersion, exports.OSArchitecture = OSArchitecture), osVersions = exports.osVersions = {");
file.WriteLine("        \"5.0\": \"2000\",");
file.WriteLine("        \"5.1\": \"XP\",");
file.WriteLine("        \"5.2\": \"Server 2003\",");
file.WriteLine("        \"6.0\": \"Vista\",");
file.WriteLine("        \"6.1\": \"7\",");
file.WriteLine("        \"6.2\": \"8\",");
file.WriteLine("        \"6.3\": \"8.1\",");
file.WriteLine("        \"6.4\": \"9\",");
file.WriteLine("        \"10.0\": \"10\"");
file.WriteLine("    }, m = (exports.OSName = osVersions[OSVersionS] || OSVersionS, CSDVersion && /^Service Pack (\\d+)$/i.exec(CSDVersion));");
file.WriteLine("    exports.OSVersionSP = m ? parseInt(m[1], 10) : 0, exports.OSCaption = Caption.replace(/Microsoft /i, \"\");");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.log = exports.getLogger = exports.logFolder = undefined;");
file.WriteLine("    var _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {");
file.WriteLine("        return typeof obj;");
file.WriteLine("    } : function(obj) {");
file.WriteLine("        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;");
file.WriteLine("    }, _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, _Logger = __webpack_require__(133), _Logger2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_Logger), _config = __webpack_require__(6), _fileWriter = __webpack_require__(70);");
file.WriteLine("    exports.logFolder = _fileWriter.logFolder;");
file.WriteLine("    var logger = new _Logger2[\"default\"](_extends({");
file.WriteLine("        logging: _config.logging");
file.WriteLine("    }, _config.logs));");
file.WriteLine("    exports[\"default\"] = logger;");
file.WriteLine("    exports.getLogger = function() {");
file.WriteLine("        return logger.scope.apply(logger, arguments);");
file.WriteLine("    }, exports.log = function() {");
file.WriteLine("        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];");
file.WriteLine("        for (var message = [], params = [], _iterator = args, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ;) {");
file.WriteLine("            var _ref;");
file.WriteLine("            if (_isArray) {");
file.WriteLine("                if (_i >= _iterator.length) break;");
file.WriteLine("                _ref = _iterator[_i++];");
file.WriteLine("            } else {");
file.WriteLine("                _i = _iterator.next();");
file.WriteLine("                if (_i.done) break;");
file.WriteLine("                _ref = _i.value;");
file.WriteLine("            }");
file.WriteLine("            var part = _ref;");
file.WriteLine("            if (\"object\" === (void 0 === part ? \"undefined\" : _typeof(part))) params.push(part); else message.push(String(part));");
file.WriteLine("        }");
file.WriteLine("        var lvl = -1 !== message.indexOf(\"!!! ERROR !!!\") ? \"error\" : \"info\";");
file.WriteLine("        logger.log(lvl, message.join(\", \"), params, \"legacy\");");
file.WriteLine("    };");
file.WriteLine("}, , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.ensurePath = exports.isFileOverdue = exports.queryFile = exports.deleteFile = exports.createFile = undefined;");
file.WriteLine("    var _fso = __webpack_require__(7), isFileOverdue = (exports.createFile = function(path, fileName, fileContent) {");
file.WriteLine("        ensurePath(path);");
file.WriteLine("        var FSfile = _fso.fso.OpenTextFile(path + fileName, 2, !0, -1);");
file.WriteLine("        FSfile.WriteLine(fileContent);");
file.WriteLine("        FSfile.Close();");
file.WriteLine("    }, exports.deleteFile = function(fullPath) {");
file.WriteLine("        if (!0 === _fso.fso.FileExists(fullPath)) _fso.fso.DeleteFile(fullPath);");
file.WriteLine("    }, exports.queryFile = function(fullPath, overdueInterval) {");
file.WriteLine("        if (_fso.fso.FileExists(fullPath) && _fso.fso.GetFile(fullPath).Size > 0) if (overdueInterval && isFileOverdue(fullPath, overdueInterval)) throw new Error(\"File is overdue\"); else {");
file.WriteLine("            var file = _fso.fso.OpenTextFile(fullPath, 1, !0, -1), data = file.ReadAll();");
file.WriteLine("            file.Close();");
file.WriteLine("            return data;");
file.WriteLine("        } else throw new Error(\"File is not found\");");
file.WriteLine("    }, exports.isFileOverdue = function(fullPath, overdueInterval) {");
file.WriteLine("        if (!0 === _fso.fso.FileExists(fullPath)) {");
file.WriteLine("            if (new Date().getTime() - _fso.fso.GetFile(fullPath).DateLastModified > overdueInterval) return !0; else return !1;");
file.WriteLine("        } else return !0;");
file.WriteLine("    }), ensurePath = exports.ensurePath = function(path) {");
file.WriteLine("        for (var parts = path.split(\"\\\\\"), stack = []; parts.length > 0; ) {");
file.WriteLine("            var current = parts.join(\"\\\\\");");
file.WriteLine("            if (parts.pop()) if (_fso.fso.FolderExists(current)) break; else stack.push(current);");
file.WriteLine("        }");
file.WriteLine("        for (;stack.length > 0; ) {");
file.WriteLine("            var _current = stack.pop();");
file.WriteLine("            if (!_fso.fso.FolderExists(_current)) _fso.fso.CreateFolder(_current);");
file.WriteLine("        }");
file.WriteLine("        return path;");
file.WriteLine("    };");
file.WriteLine("}, , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _Statistics = __webpack_require__(139), _Statistics2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_Statistics), _config = __webpack_require__(6);");
file.WriteLine("    exports[\"default\"] = new _Statistics2[\"default\"](_config.analytics, _config.application.DisplayVersion, window.lang);");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    function _possibleConstructorReturn(self, call) {");
file.WriteLine("        if (!self) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");");
file.WriteLine("        return call && (\"object\" == typeof call || \"function\" == typeof call) ? call : self;");
file.WriteLine("    }");
file.WriteLine("    function _inherits(subClass, superClass) {");
file.WriteLine("        if (\"function\" != typeof superClass && null !== superClass) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);");
file.WriteLine("        subClass.prototype = Object.create(superClass && superClass.prototype, {");
file.WriteLine("            constructor: {");
file.WriteLine("                value: subClass,");
file.WriteLine("                enumerable: !1,");
file.WriteLine("                writable: !0,");
file.WriteLine("                configurable: !0");
file.WriteLine("            }");
file.WriteLine("        });");
file.WriteLine("        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _events = __webpack_require__(127), _config = __webpack_require__(6), _ps = __webpack_require__(114), _ps2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_ps), _system = __webpack_require__(1), _wmi = __webpack_require__(3), _utils = __webpack_require__(2), storeRoot = (0, ");
file.WriteLine("    _system.ensurePath)(_utils.AppPath + \"\\\\data\"), Notification = function(_EventEmitter) {");
file.WriteLine("        function Notification(type) {");
file.WriteLine("            var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};");
file.WriteLine("            _classCallCheck(this, Notification);");
file.WriteLine("            var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));");
file.WriteLine("            _this.sendTo = \"message-request\";");
file.WriteLine("            _this.listenTo = \"message-response\";");
file.WriteLine("            _this.args = Object.assign({");
file.WriteLine("                type: type");
file.WriteLine("            }, args);");
file.WriteLine("            _this.timestamp = Date.now();");
file.WriteLine("            _this.loadConfig(type);");
file.WriteLine("            _this.store = storeRoot + \"\\\\\" + type + \".json\";");
file.WriteLine("            _this.load();");
file.WriteLine("            return _this;");
file.WriteLine("        }");
file.WriteLine("        _inherits(Notification, _EventEmitter);");
file.WriteLine("        Notification.prototype.loadConfig = function(type) {");
file.WriteLine("            var data = __webpack_require__(179)(\"./\" + type);");
file.WriteLine("            if (\"function\" == typeof data) data = data(this.args);");
file.WriteLine("            this.config = Object.assign({");
file.WriteLine("                windowTitle: _config.notification.title");
file.WriteLine("            }, data);");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.load = function() {");
file.WriteLine("            if (_system.fso.FileExists(this.store)) {");
file.WriteLine("                var file = _system.fso.OpenTextFile(this.store, 1, !1), json = file.ReadAll();");
file.WriteLine("                file.Close();");
file.WriteLine("                this.data = JSON.parse(json);");
file.WriteLine("            } else if (this.config.notificationId) {");
file.WriteLine("                var reg = \"HKCU\\\\SOFTWARE\\\\DriverPack Notifier\\\\notifications\\\\\" + this.config.notificationId;");
file.WriteLine("                this.data = {");
file.WriteLine("                    counter: +(0, _system.RegRead)(reg + \"\\\\counter\"),");
file.WriteLine("                    unsubscribed: !!(0, _system.RegRead)(reg + \"\\\\unsubscribed\")");
file.WriteLine("                };");
file.WriteLine("            } else this.data = {};");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.save = function() {");
file.WriteLine("            var file = _system.fso.OpenTextFile(this.store, 2, !0);");
file.WriteLine("            file.write(JSON.stringify(this.data));");
file.WriteLine("            file.Close();");
file.WriteLine("            return this;");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.get = function(key, defaultValue) {");
file.WriteLine("            return this.data[key] || defaultValue;");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.set = function(key, value) {");
file.WriteLine("            this.data[key] = value;");
file.WriteLine("            return this;");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.inc = function(key) {");
file.WriteLine("            return this.set(key, this.get(key, 0) + 1);");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.send = function(message) {");
file.WriteLine("            var queue = this.get(this.sendTo, []), timestamp = Date.now();");
file.WriteLine("            queue.push({");
file.WriteLine("                message: message,");
file.WriteLine("                timestamp: timestamp");
file.WriteLine("            });");
file.WriteLine("            return this.set(this.sendTo, queue).save();");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.parseMessageQueue = function() {");
file.WriteLine("            var _this2 = this;");
file.WriteLine("            this.get(this.listenTo, []).forEach(function(_ref) {");
file.WriteLine("                var message = _ref.message, timestamp = _ref.timestamp;");
file.WriteLine("                if (timestamp > _this2.timestamp) {");
file.WriteLine("                    _this2.timestamp = timestamp;");
file.WriteLine("                    _this2.emit(\"message\", message);");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.flushMessageQueue = function() {");
file.WriteLine("            return this.set(this.listenTo, []);");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.isActive = function() {");
file.WriteLine("            var counter = this.get(\"counter\", 0), unsubscribed = this.get(\"unsubscribed\", !1);");
file.WriteLine("            return counter < (this.config.maxCountOfDisplaying || Infinity) && !unsubscribed;");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.show = function() {");
file.WriteLine("            var _this3 = this, queue = Promise.resolve(window.NotificationQueue), promise = queue.then(function() {");
file.WriteLine("                return _this3.showImmediately();");
file.WriteLine("            });");
file.WriteLine("            window.NotificationQueue = promise[\"catch\"](function() {});");
file.WriteLine("            return promise;");
file.WriteLine("        };");
file.WriteLine("        Notification.prototype.showImmediately = function() {");
file.WriteLine("            function showImmediately() {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var cmdArgs, _this4 = this;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (!this.isActive()) {");
file.WriteLine("                            _context.next = 16;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        this.inc(\"counter\").set(\"status\", \"pending\").save();");
file.WriteLine("                        cmdArgs = Object.entries(this.args).map(function(_ref3) {");
file.WriteLine("                            var key = _ref3[0], val = _ref3[1];");
file.WriteLine("                            return \"--\" + key.replace(/\\s/g, \"-\") + ' \"' + val + '\"';");
file.WriteLine("                        }).join(\" \");");
file.WriteLine("                        this.exec(cmdArgs);");
file.WriteLine("                        if (!this.config.focusWindow) this.on(\"message\", function(message) {");
file.WriteLine("                            if (\"initialized\" === message) {");
file.WriteLine("                                _ps2[\"default\"].send([ '$notificationHwnd = [Win32.NativeMethods]::FindWindowEx(0, 0, \"HTML Application Host Window Class\", \"' + _this4.config.windowTitle + '\")' ]);");
file.WriteLine("                                if (_this4.config.background) {");
file.WriteLine("                                    _ps2[\"default\"].send([ \"[Win32.NativeMethods]::SetWindowPos($notificationHwnd, 1, 0, 0, 0, 0, 0x0013)\", \"[Win32.NativeMethods]::SetWindowLong($notificationHwnd, -20, 0x00000080L)\" ]);");
file.WriteLine("                                } else _ps2[\"default\"].send([ \"[Win32.NativeMethods]::SetWindowPos($notificationHwnd, -2, 0, 0, 0, 0, 0x0013)\", \"[Win32.NativeMethods]::SetWindowPos($notificationHwnd, -1, 0, 0, 0, 0, 0x0013)\" ]);");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        if (\"pending\" !== this.get(\"status\")) {");
file.WriteLine("                            _context.next = 12;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 8;");
file.WriteLine("                        return (0, _utils.timeout)(300);");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                        this.load();");
file.WriteLine("                        this.parseMessageQueue();");
file.WriteLine("                        _context.next = 5;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 12:");
file.WriteLine("                        this.flushMessageQueue().save();");
file.WriteLine("                        return _context.abrupt(\"return\", this.get(\"status\"));");
file.WriteLine("");
file.WriteLine("                      case 16:");
file.WriteLine("                        return _context.abrupt(\"return\", \"skip\");");
file.WriteLine("");
file.WriteLine("                      case 17:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return showImmediately;");
file.WriteLine("        }();");
file.WriteLine("        Notification.prototype.exec = function(cmdArgs) {");
file.WriteLine("            var SystemRoot = _system.WshShell.ExpandEnvironmentStrings(\"%SystemRoot%\"), command = SystemRoot + '\\\\System32\\\\mshta.exe \"' + _utils.AppNotifier + '\" ' + cmdArgs;");
file.WriteLine("            if (_utils.isOldOS && \"scheduler\" === window.runFrom || this.config.focusWindow) _system.WshShell.Run(command, 1, !1); else {");
file.WriteLine("                var objStartup = _wmi.objWMIService.Get(\"Win32_ProcessStartup\"), objConfig = objStartup.SpawnInstance_();");
file.WriteLine("                objConfig.ShowWindow = 8;");
file.WriteLine("                _wmi.objWMIService.Get(\"Win32_Process\").Create(command, null, objConfig, void 0);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        return Notification;");
file.WriteLine("    }(_events.EventEmitter);");
file.WriteLine("    exports[\"default\"] = Notification;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _specialFolders = __webpack_require__(14), _shell = __webpack_require__(11), _fso = __webpack_require__(7), _localFiles = __webpack_require__(18), _http = __webpack_require__(31), _runCommandAsync = __webpack_require__(59), _wmi = __webpack_require__(3), _logs = __webpack_require__(16), _config = __webpack_require__(6), log = (0, ");
file.WriteLine("    _logs.getLogger)(\"core:wget\"), Wget = function() {");
file.WriteLine("        function Wget(wgetPaths) {");
file.WriteLine("            _classCallCheck(this, Wget);");
file.WriteLine("            this.timer = null;");
file.WriteLine("            this.onDownloaded = {};");
file.WriteLine("            this.onDownloadFailed = {};");
file.WriteLine("            this.concurrency = 5;");
file.WriteLine("            this.wgetPaths = wgetPaths;");
file.WriteLine("            this.wgetPath = wgetPaths.find(function(path) {");
file.WriteLine("                return _fso.fso.FileExists(path);");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("        Wget.prototype.wrapInCmd = function(command) {");
file.WriteLine("            return 'cmd /c \"' + command + '\"';");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.wgetRun = function(link, path, jobId) {");
file.WriteLine("            var _this = this;");
file.WriteLine("            log.info(\"downloading \" + link, {");
file.WriteLine("                link: link,");
file.WriteLine("                jobId: jobId");
file.WriteLine("            }, \"run:start\");");
file.WriteLine("            if (!this.wgetPath) this.wgetPath = this.wgetPaths.find(function(path) {");
file.WriteLine("                return _fso.fso.FileExists(path);");
file.WriteLine("            });");
file.WriteLine("            if (this.wgetPath) {");
file.WriteLine("                var parsedUrl = link.split(\"/\"), logFile = this.pathToLogFile(jobId), triggerFile = this.pathToTriggerFile(jobId), wgetCommand = '\"' + this.wgetPath + '\" --timeout 10 --retry-connrefused --wait=10 --timestamping --directory-prefix=\"' + path + '\" \"' + link + '\" -o \"' + logFile + '\" --no-verbose & echo DONE > \"' + triggerFile + '\"', command = this.wrapInCmd(wgetCommand);");
file.WriteLine("                log.debug(\"running command\", {");
file.WriteLine("                    command: command");
file.WriteLine("                }, \"run:command\");");
file.WriteLine("                setTimeout(function() {");
file.WriteLine("                    try {");
file.WriteLine("                        _shell.WshShell.Run(command, 0, !1);");
file.WriteLine("                    } catch (err) {");
file.WriteLine("                        if (jobId in _this.onDownloaded) {");
file.WriteLine("                            _this.onDownloadFailed[jobId](err);");
file.WriteLine("                            _this.truncateJob(jobId);");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                }, 0);");
file.WriteLine("                return parsedUrl[parsedUrl.length - 1];");
file.WriteLine("            } else log.error(\"wget exe not found\", {}, \"run:error\");");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.wgetWrapper = function(events, path, item, i, items) {");
file.WriteLine("            var _this2 = this;");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                var link = item.link, jobId = item.jobId || _this2.generateJobId();");
file.WriteLine("                log.debug(\"downloading \" + link + \" to folder \" + path, {");
file.WriteLine("                    link: link,");
file.WriteLine("                    path: path,");
file.WriteLine("                    jobId: jobId");
file.WriteLine("                }, \"wrapper\");");
file.WriteLine("                events.beforeDownloading(item, i, items);");
file.WriteLine("                setTimeout(function() {");
file.WriteLine("                    return _this2.wgetRun(link, path, jobId);");
file.WriteLine("                }, 0);");
file.WriteLine("                _this2.saveJob(jobId, resolve, reject, item);");
file.WriteLine("            }).then(function(val) {");
file.WriteLine("                events.afterDownloading(item, i, items);");
file.WriteLine("                return val;");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.generateJobId = function() {");
file.WriteLine("            return +Math.round(1e5 * Math.random());");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.saveJob = function(id, resolve, reject, item) {");
file.WriteLine("            log.debug(\"saveJob\", {");
file.WriteLine("                jobId: id");
file.WriteLine("            }, \"saveJob\");");
file.WriteLine("            this.onDownloaded[id] = function() {");
file.WriteLine("                return resolve(item);");
file.WriteLine("            };");
file.WriteLine("            this.onDownloadFailed[id] = function(err) {");
file.WriteLine("                return reject(err);");
file.WriteLine("            };");
file.WriteLine("            this.start();");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.truncateJob = function(id) {");
file.WriteLine("            delete this.onDownloaded[id];");
file.WriteLine("            delete this.onDownloadFailed[id];");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.pathToLogFile = function(id) {");
file.WriteLine("            return (0, _localFiles.ensurePath)(_specialFolders.AppFolder + \"\\\\temp\") + \"\\\\wget_log_\" + id + \".log\";");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.pathToTriggerFile = function(id) {");
file.WriteLine("            return (0, _localFiles.ensurePath)(_specialFolders.AppFolder + \"\\\\temp\") + \"\\\\wget_finished_\" + id + \".txt\";");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.tick = function() {");
file.WriteLine("            var _this3 = this, keys = Object.keys(this.onDownloaded);");
file.WriteLine("            if (keys.length > 0) keys.forEach(function(jobId) {");
file.WriteLine("                var triggerFile = _this3.pathToTriggerFile(jobId);");
file.WriteLine("                if (_fso.fso.FileExists(triggerFile)) try {");
file.WriteLine("                    var logFile = _this3.pathToLogFile(jobId), textStream = _fso.fso.OpenTextFile(logFile, 1, !1);");
file.WriteLine("                    if (!textStream.AtEndOfStream) {");
file.WriteLine("                        var logText = textStream.ReadAll();");
file.WriteLine("                        textStream.Close();");
file.WriteLine("                        if (-1 !== logText.indexOf(\"failed: Unknown host.\") || -1 !== logText.indexOf(\"unable to resolve host address\") || /error\\s+\\d+/i.test(logText)) {");
file.WriteLine("                            log.error(\"failed job \" + jobId, {");
file.WriteLine("                                jobId: jobId");
file.WriteLine("                            }, \"tick:fail\");");
file.WriteLine("                            _this3.onDownloadFailed[jobId](new Error(\"[new order] wget failed job \" + jobId));");
file.WriteLine("                        } else {");
file.WriteLine("                            log.info(\"downloaded job \" + jobId, {");
file.WriteLine("                                jobId: jobId");
file.WriteLine("                            }, \"tick:success\");");
file.WriteLine("                            _this3.onDownloaded[jobId]();");
file.WriteLine("                        }");
file.WriteLine("                        log.debug(\"logText\", {");
file.WriteLine("                            logText: logText");
file.WriteLine("                        }, \"tick:logText\");");
file.WriteLine("                    } else {");
file.WriteLine("                        textStream.Close();");
file.WriteLine("                        log.info(\"downloaded job \" + jobId, {");
file.WriteLine("                            jobId: jobId");
file.WriteLine("                        }, \"tick:success\");");
file.WriteLine("                        _this3.onDownloaded[jobId]();");
file.WriteLine("                    }");
file.WriteLine("                } catch (e) {");
file.WriteLine("                    log.error(\"failed job \" + jobId, {");
file.WriteLine("                        jobId: jobId");
file.WriteLine("                    }, \"tick:fail\");");
file.WriteLine("                    _this3.onDownloadFailed[jobId](new Error(\"[new order] wget failed job \" + jobId));");
file.WriteLine("                } finally {");
file.WriteLine("                    _this3.truncateJob(jobId);");
file.WriteLine("                }");
file.WriteLine("            }); else {");
file.WriteLine("                log.info(\"no downloads\", {}, \"tick:drain\");");
file.WriteLine("                this.stop();");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.stop = function() {");
file.WriteLine("            clearInterval(this.timer);");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.start = function() {");
file.WriteLine("            var _this4 = this;");
file.WriteLine("            this.stop();");
file.WriteLine("            this.timer = setInterval(function() {");
file.WriteLine("                return _this4.tick();");
file.WriteLine("            }, 2e3);");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.getDownloadFileSize = function(link) {");
file.WriteLine("            return (0, _http.httphead)(link).then(function(_ref) {");
file.WriteLine("                return _ref.header[\"content-length\"];");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.stopDownloading = function(link, downloadJobId) {");
file.WriteLine("            var _this5 = this;");
file.WriteLine("            delete this.onDownloaded[downloadJobId];");
file.WriteLine("            delete this.onDownloadFailed[downloadJobId];");
file.WriteLine("            var commandLineLike = \"%wget.exe%\" + link + \"%\", processes = (0, _wmi.getWMIObjects)([ \"ProcessId\" ], \"Win32_Process\", 'CommandLine LIKE \"' + commandLineLike + '\"'), promises = [];");
file.WriteLine("            processes.forEach(function(_ref2) {");
file.WriteLine("                var ProcessId = _ref2.ProcessId, jobId = _this5.generateJobId(), taskkillTriggerFile = (0, ");
file.WriteLine("                _localFiles.ensurePath)(_specialFolders.AppFolder + \"\\\\temp\") + \"\\\\taskkill_\" + jobId + \".txt\";");
file.WriteLine("                promises.push((0, _runCommandAsync.runCommandAsync)({");
file.WriteLine("                    command: \"taskkill /f /t /pid \" + ProcessId,");
file.WriteLine("                    triggerFile: taskkillTriggerFile,");
file.WriteLine("                    checkInterval: 200,");
file.WriteLine("                    timeout: 1e4");
file.WriteLine("                }));");
file.WriteLine("            });");
file.WriteLine("            return Promise.all(promises);");
file.WriteLine("        };");
file.WriteLine("        Wget.prototype.downloadFiles = function(events, path, items) {");
file.WriteLine("            var _this6 = this;");
file.WriteLine("            log.info(\"downloading \" + items.length + \" files\", {");
file.WriteLine("                files: items.length");
file.WriteLine("            }, \"download\");");
file.WriteLine("            var iterator = function(item, i) {");
file.WriteLine("                return _this6.wgetWrapper(events, path, item, i, items);");
file.WriteLine("            };");
file.WriteLine("            if (Promise.map) return Promise.map(items, iterator, {");
file.WriteLine("                concurrency: this.concurrency");
file.WriteLine("            }); else return Promise.all(items.map(iterator));");
file.WriteLine("        };");
file.WriteLine("        return Wget;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = new Wget(_config.wget.paths);");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.RegDelete = exports.RegWrite = exports.RegRead = exports.RegExists = exports.REG_CORS = undefined;");
file.WriteLine("    var _shell = __webpack_require__(11);");
file.WriteLine("    exports.REG_CORS = \"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\\\\Zones\\\\1\\\\1406\", ");
file.WriteLine("    exports.RegExists = function(path) {");
file.WriteLine("        try {");
file.WriteLine("            _shell.WshShell.RegRead(path);");
file.WriteLine("            return !0;");
file.WriteLine("        } catch (err) {");
file.WriteLine("            return !1;");
file.WriteLine("        }");
file.WriteLine("    }, exports.RegRead = function(path) {");
file.WriteLine("        try {");
file.WriteLine("            return _shell.WshShell.RegRead(path);");
file.WriteLine("        } catch (err) {}");
file.WriteLine("    }, exports.RegWrite = function(path, value) {");
file.WriteLine("        var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"REG_SZ\";");
file.WriteLine("        try {");
file.WriteLine("            return _shell.WshShell.RegWrite(path, value, type);");
file.WriteLine("        } catch (err) {}");
file.WriteLine("    }, exports.RegDelete = function(path) {");
file.WriteLine("        try {");
file.WriteLine("            return _shell.WshShell.RegDelete(path);");
file.WriteLine("        } catch (err) {}");
file.WriteLine("    };");
file.WriteLine("}, , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(collection, iterator) {");
file.WriteLine("        var colItems = new Enumerator(collection);");
file.WriteLine("        for (colItems.moveFirst(); !colItems.atEnd(); colItems.moveNext()) iterator(colItems.item());");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.httphead = exports.httpput = exports.httppost = exports.httpget = exports.getXMLHttp = undefined;");
file.WriteLine("    var _registry = __webpack_require__(27), _client = __webpack_require__(172), _client2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_client), httprequest = (exports.getXMLHttp = _client2[\"default\"].getXHR, function(send) {");
file.WriteLine("        var originalCORS = Number((0, _registry.RegRead)(_registry.REG_CORS));");
file.WriteLine("        (0, _registry.RegWrite)(_registry.REG_CORS, 0, \"REG_DWORD\");");
file.WriteLine("        var promise = new Promise(function(resolve, reject) {");
file.WriteLine("            send().then(resolve, function(err) {");
file.WriteLine("                err.type = \"HttpError\";");
file.WriteLine("                reject(err);");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        if (0 !== originalCORS) (0, _registry.RegWrite)(_registry.REG_CORS, originalCORS, \"REG_DWORD\");");
file.WriteLine("        return promise;");
file.WriteLine("    });");
file.WriteLine("    exports.httpget = function(url) {");
file.WriteLine("        return httprequest(function() {");
file.WriteLine("            return _client2[\"default\"].get(url).set(\"Connection\", \"close\");");
file.WriteLine("        });");
file.WriteLine("    }, exports.httppost = function(url, data) {");
file.WriteLine("        var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}, headers = _ref.headers, statistics = _ref.statistics;");
file.WriteLine("        return httprequest(function() {");
file.WriteLine("            var req = _client2[\"default\"].post(url).set(\"Connection\", \"close\");");
file.WriteLine("            if (headers) req.set(headers);");
file.WriteLine("            if (statistics) {");
file.WriteLine("                var clientId = statistics.clientId, computerId = statistics.computerId, sessionId = statistics.sessionId, options = statistics.options, drpVersion = statistics.drpVersion, experiment = statistics.experiment, lang = statistics.lang;");
file.WriteLine("                req.set({");
file.WriteLine("                    \"x-drp-client-id\": clientId,");
file.WriteLine("                    \"x-drp-computer-id\": computerId,");
file.WriteLine("                    \"x-drp-session-id\": sessionId,");
file.WriteLine("                    \"x-drp-application\": options.category,");
file.WriteLine("                    \"x-drp-version\": drpVersion,");
file.WriteLine("                    \"x-drp-experiment\": experiment,");
file.WriteLine("                    \"x-drp-lang\": lang");
file.WriteLine("                });");
file.WriteLine("            }");
file.WriteLine("            return req.send(data);");
file.WriteLine("        });");
file.WriteLine("    }, exports.httpput = function(url, data) {");
file.WriteLine("        return httprequest(function() {");
file.WriteLine("            return _client2[\"default\"].put(url).set(\"Connection\", \"close\").send(data);");
file.WriteLine("        });");
file.WriteLine("    }, exports.httphead = function(url) {");
file.WriteLine("        return httprequest(function() {");
file.WriteLine("            return _client2[\"default\"].head(url).set(\"Connection\", \"close\");");
file.WriteLine("        });");
file.WriteLine("    };");
file.WriteLine("}, , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getInternetExplorerVersion = exports.goToUrl = exports.winRun = exports.inc = exports.generateJobId = exports.wrapInCmd = exports.cleanFolder = exports.ParseCMDString = exports.ParseSFXName = undefined;");
file.WriteLine("    var _fso = __webpack_require__(7), _shell = __webpack_require__(11), _registry = __webpack_require__(27), _os = __webpack_require__(15), _logs = __webpack_require__(16), log = (0, ");
file.WriteLine("    _logs.getLogger)(\"core:lib:utils\"), runOpenUrlCommand = (exports.ParseSFXName = function(sfxName) {");
file.WriteLine("        sfxName = sfxName.replace(/(\\s*(\\(|\\[)\\d+(\\)|\\]))?.exe$/i, \"\");");
file.WriteLine("        return sfxName.split(\"_\").slice(1);");
file.WriteLine("    }, exports.ParseCMDString = function() {");
file.WriteLine("        var cmd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\", args = [], current = \"\", quoted = \"\", quoteType = null, addcurrent = function() {");
file.WriteLine("            if (current) args.push(current.trim());");
file.WriteLine("            current = \"\";");
file.WriteLine("        };");
file.WriteLine("        cmd = cmd.replace(/\\\\\\n/g, \"\");");
file.WriteLine("        Array.from(cmd).forEach(function(c) {");
file.WriteLine("            if (quoteType) if (quoteType === c && \"\\\\\" !== quoted.slice(-1)) {");
file.WriteLine("                args.push(quoted);");
file.WriteLine("                quoted = \"\";");
file.WriteLine("                quoteType = null;");
file.WriteLine("            } else quoted += c; else if (\" \" === c) addcurrent(); else if (current) current += c; else if (\"'\" === c || '\"' === c) quoteType = c; else current = c;");
file.WriteLine("        });");
file.WriteLine("        addcurrent();");
file.WriteLine("        return args;");
file.WriteLine("    }, exports.cleanFolder = function(path) {");
file.WriteLine("        var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0, correctedPath = /\\\\$/.test(path) ? path : path + \"\\\\\";");
file.WriteLine("        _shell.WshShell.Run('cmd /C del /F /S /Q \"' + correctedPath + '\" && FOR /D %p IN (\"' + correctedPath + '*\") DO rmdir \"%p\" /s /q', 0, sync);");
file.WriteLine("    }, exports.wrapInCmd = function(command) {");
file.WriteLine("        return 'cmd /c \"' + command + '\"';");
file.WriteLine("    }, exports.generateJobId = function() {");
file.WriteLine("        return +Math.round(1e5 * Math.random());");
file.WriteLine("    }, exports.inc = function(filename) {");
file.WriteLine("        var head = document.getElementsByTagName(\"head\").item(0), script = void 0;");
file.WriteLine("        if (\"css\" === _fso.fso.GetFileName(filename).split(\".\")[1].toLowerCase()) {");
file.WriteLine("            script = document.createElement(\"link\");");
file.WriteLine("            script.setAttribute(\"rel\", \"stylesheet\");");
file.WriteLine("            script.setAttribute(\"type\", \"text/css\");");
file.WriteLine("            script.setAttribute(\"href\", filename);");
file.WriteLine("        } else {");
file.WriteLine("            script = document.createElement(\"script\");");
file.WriteLine("            script.src = filename;");
file.WriteLine("            script.type = \"text/javascript\";");
file.WriteLine("        }");
file.WriteLine("        if (void 0 !== script) head.appendChild(script);");
file.WriteLine("    }, exports.winRun = function(src, hideMode, wait, bit64) {");
file.WriteLine("        if (!src) return !1;");
file.WriteLine("        hideMode = !!hideMode;");
file.WriteLine("        wait = !!wait;");
file.WriteLine("        if (bit64 && _os.is64) {");
file.WriteLine("            hideMode = !0;");
file.WriteLine("            wait = !1;");
file.WriteLine("            src = '\"%windir%\\\\sysnative\\\\cmd.exe\" /C ' + src;");
file.WriteLine("        }");
file.WriteLine("        return _shell.WshShell.Run(src, hideMode ? 0 : 1, wait);");
file.WriteLine("    }, function(url, command) {");
file.WriteLine("        command = command ? '\"' + command.replace(/\"/gi, \"\") + '\"' : \"rundll32 url.dll,FileProtocolHandler\";");
file.WriteLine("        _shell.WshShell.Run(command + ' \"' + url + '\"', 1, !1);");
file.WriteLine("    });");
file.WriteLine("    exports.goToUrl = function(url) {");
file.WriteLine("        log.info(\"opening \" + url, {");
file.WriteLine("            url: url");
file.WriteLine("        }, \"goToUrl:open\");");
file.WriteLine("        try {");
file.WriteLine("            var regPath = \"HKCU\\\\SOFTWARE\\\\Clients\\\\StartMenuInternet\\\\\";");
file.WriteLine("            if (_os.OSVersion >= 10) regPath = \"HKCU\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\Shell\\\\Associations\\\\UrlAssociations\\\\http\\\\UserChoice\\\\Progid\";");
file.WriteLine("            var defBrowser = (0, _registry.RegRead)(regPath);");
file.WriteLine("            if (!defBrowser) defBrowser = (0, _registry.RegRead)(regPath.replace(\"HKCU\", \"HKLM\"));");
file.WriteLine("            var runComm = (0, _registry.RegRead)(\"HKLM\\\\SOFTWARE\\\\Clients\\\\StartMenuInternet\\\\\" + defBrowser + \"\\\\shell\\\\open\\\\command\\\\\");");
file.WriteLine("            runOpenUrlCommand(url, runComm);");
file.WriteLine("        } catch (err) {");
file.WriteLine("            log.error(\"failed to open \" + url, {");
file.WriteLine("                url: url,");
file.WriteLine("                err: err");
file.WriteLine("            }, \"goToUrl:error\");");
file.WriteLine("            runOpenUrlCommand(url);");
file.WriteLine("        }");
file.WriteLine("        return !1;");
file.WriteLine("    }, exports.getInternetExplorerVersion = function() {");
file.WriteLine("        var rv = void 0, ua = void 0, re = void 0;");
file.WriteLine("        try {");
file.WriteLine("            rv = parseInt((0, _registry.RegRead)(\"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\svcVersion\").split(\".\")[0], 10);");
file.WriteLine("        } catch (e) {}");
file.WriteLine("        if (\"number\" != typeof rv) try {");
file.WriteLine("            rv = parseInt((0, _registry.RegRead)(\"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Version\").split(\".\")[0], 10);");
file.WriteLine("        } catch (e) {}");
file.WriteLine("        if (\"number\" != typeof rv) if (\"Microsoft Internet Explorer\" === navigator.appName) {");
file.WriteLine("            ua = navigator.userAgent;");
file.WriteLine("            re = new RegExp(\"MSIE ([0-9]{1,}[.0-9]{0,})\");");
file.WriteLine("            if (null != re.exec(ua)) rv = parseFloat(RegExp.$1);");
file.WriteLine("        } else if (\"Netscape\" === navigator.appName) {");
file.WriteLine("            ua = navigator.userAgent;");
file.WriteLine("            re = new RegExp(\"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\");");
file.WriteLine("            if (null != re.exec(ua)) rv = parseFloat(RegExp.$1);");
file.WriteLine("        }");
file.WriteLine("        if (\"number\" != typeof rv) rv = -1;");
file.WriteLine("        return rv;");
file.WriteLine("    };");
file.WriteLine("}, , , , function(module, exports) {");
file.WriteLine("    function isObject(value) {");
file.WriteLine("        var type = typeof value;");
file.WriteLine("        return !!value && (\"object\" == type || \"function\" == type);");
file.WriteLine("    }");
file.WriteLine("    module.exports = isObject;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.isOldOS = undefined;");
file.WriteLine("    var _os = __webpack_require__(15);");
file.WriteLine("    exports.isOldOS = _os.OSVersion < 6;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = new ActiveXObject(\"WScript.Shell\");");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, , , , function(module, exports) {");
file.WriteLine("    var g;");
file.WriteLine("    g = function() {");
file.WriteLine("        return this;");
file.WriteLine("    }();");
file.WriteLine("    try {");
file.WriteLine("        g = g || Function(\"return this\")() || (0, eval)(\"this\");");
file.WriteLine("    } catch (e) {");
file.WriteLine("        if (\"object\" == typeof window) g = window;");
file.WriteLine("    }");
file.WriteLine("    module.exports = g;");
file.WriteLine("}, , , , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.WgetPath = exports.AppNotifier = exports.AppNotifierFolder = exports.AppPath = exports.AppPathRoot = exports.ProgramFiles = exports.UserHK = exports.UserAppData = exports.UserName = undefined;");
file.WriteLine("    var _config = __webpack_require__(6), _fso = __webpack_require__(7), _shell = __webpack_require__(11), _specialFolders = __webpack_require__(14), _flags = __webpack_require__(43), _wmi = __webpack_require__(3), ProgramFilesString = -1 !== document.location.toString().indexOf(\"(x86)\") ? \"%PROGRAMFILES(x86)%\" : \"%PROGRAMFILES%\", UserName = exports.UserName = function() {");
file.WriteLine("        var colItems = _wmi.objWMIService.ExecQuery(\"SELECT * FROM Win32_ComputerSystem\"), _item = new Enumerator(colItems).item(), UserName = _item.UserName, splitted = UserName.split(\"\\\\\");");
file.WriteLine("        return splitted[splitted.length - 1];");
file.WriteLine("    }(), UserAppData = exports.UserAppData = _flags.isOldOS ? _specialFolders.AppData.replace(\"NetworkService\", UserName) : _specialFolders.AppData, ProgramFiles = (exports.UserHK = _flags.isOldOS ? \"HKEY_USERS\\\\\" + function() {");
file.WriteLine("        var query = 'SELECT * FROM Win32_UserAccount WHERE Name=\"' + UserName + '\"', colItems = _wmi.objWMIService.ExecQuery(query);");
file.WriteLine("        return new Enumerator(colItems).item().SID;");
file.WriteLine("    }() : \"HKCU\", exports.ProgramFiles = _shell.WshShell.ExpandEnvironmentStrings(ProgramFilesString)), AppPath = (exports.AppPathRoot = ProgramFiles + \"\\\\\" + _config.application.AppFolder, ");
file.WriteLine("    exports.AppPath = UserAppData + \"\\\\\" + _config.application.AppFolder);");
file.WriteLine("    exports.AppNotifierFolder = AppPath + \"\\\\bin\\\\Tools\\\\notifier\", exports.AppNotifier = AppPath + \"\\\\bin\\\\Tools\\\\notifier\\\\notifier.hta\", ");
file.WriteLine("    exports.WgetPath = _fso.fso.FileExists(AppPath + \"\\\\bin\\\\Tools\\\\driverpack-wget.exe\") ? AppPath + \"\\\\bin\\\\Tools\\\\driverpack-wget.exe\" : AppPath + \"\\\\bin\\\\Tools\\\\wget.exe\";");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _http = __webpack_require__(31), _retry = __webpack_require__(132), _retry2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_retry), index = 0, DeloreanTransport = function() {");
file.WriteLine("        function DeloreanTransport(endpoint, statistics) {");
file.WriteLine("            var tries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity, timeout = arguments[3];");
file.WriteLine("            _classCallCheck(this, DeloreanTransport);");
file.WriteLine("            Object.assign(this, {");
file.WriteLine("                endpoint: endpoint,");
file.WriteLine("                statistics: statistics,");
file.WriteLine("                tries: tries,");
file.WriteLine("                timeout: timeout");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("        DeloreanTransport.prototype.postOnce = function(data, opts) {");
file.WriteLine("            return this.endpoint ? (0, _http.httppost)(this.endpoint, data, opts) : Promise.resolve();");
file.WriteLine("        };");
file.WriteLine("        DeloreanTransport.prototype.postWithRetry = function() {");
file.WriteLine("            for (var _this = this, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];");
file.WriteLine("            return (0, _retry2[\"default\"])(function() {");
file.WriteLine("                return _this.postOnce.apply(_this, args);");
file.WriteLine("            }, this.tries, this.timeout);");
file.WriteLine("        };");
file.WriteLine("        DeloreanTransport.prototype.send = function(data) {");
file.WriteLine("            return this.postWithRetry(data, {");
file.WriteLine("                statistics: this.statistics || __webpack_require__(20),");
file.WriteLine("                headers: {");
file.WriteLine("                    \"x-drp-index\": index++,");
file.WriteLine("                    \"x-drp-client-time\": new Date().toISOString()");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        return DeloreanTransport;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = DeloreanTransport;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.runCommandAsync = undefined;");
file.WriteLine("    var _shell = __webpack_require__(11), _fso = __webpack_require__(7), _utils = __webpack_require__(38), _logs = __webpack_require__(16), _specialFolders = __webpack_require__(14), _localFiles = __webpack_require__(18), log = (0, ");
file.WriteLine("    _logs.getLogger)(\"core:system:runCommandAsync\");");
file.WriteLine("    exports.runCommandAsync = function(_ref) {");
file.WriteLine("        var command = _ref.command, _ref$spaced = _ref.spaced, spaced = _ref$spaced === undefined ? !0 : _ref$spaced, _ref$triggerFile = _ref.triggerFile, triggerFile = _ref$triggerFile === undefined ? (0, ");
file.WriteLine("        _localFiles.ensurePath)(_specialFolders.AppFolder + \"\\\\temp\") + \"\\\\run_command_\" + (0, ");
file.WriteLine("        _utils.generateJobId)() + \".txt\" : _ref$triggerFile, _ref$customOutput = _ref.customOutput, customOutput = _ref$customOutput === undefined ? !1 : _ref$customOutput, _ref$checkInterval = _ref.checkInterval, checkInterval = _ref$checkInterval === undefined ? 1e3 : _ref$checkInterval, _ref$timeout = _ref.timeout, timeout = _ref$timeout === undefined ? 9e5 : _ref$timeout;");
file.WriteLine("        return new Promise(function(resolve, reject) {");
file.WriteLine("            var commandString = command + (spaced ? \" \" : \"\") + (customOutput ? \"\" : \"|| echo Done & call echo Done %^errorLevel%\") + ' > \"' + triggerFile + '\"', wrappedCommand = (0, ");
file.WriteLine("            _utils.wrapInCmd)(commandString);");
file.WriteLine("            log.debug(\"running command\", {");
file.WriteLine("                wrappedCommand: wrappedCommand");
file.WriteLine("            }, \"command\");");
file.WriteLine("            setTimeout(function() {");
file.WriteLine("                _shell.WshShell.Run(wrappedCommand, 0, !1);");
file.WriteLine("            }, 0);");
file.WriteLine("            var textStream = void 0, timeoutTimer = void 0, timer = setInterval(function() {");
file.WriteLine("                if (_fso.fso.FileExists(triggerFile)) try {");
file.WriteLine("                    textStream = _fso.fso.OpenTextFile(triggerFile, 1, !1);");
file.WriteLine("                    if (!textStream.AtEndOfStream) {");
file.WriteLine("                        clearInterval(timeoutTimer);");
file.WriteLine("                        clearInterval(timer);");
file.WriteLine("                        if (!customOutput) {");
file.WriteLine("                            var text = textStream.ReadAll(), matches = text.match(/done\\s+(\\d+)/i), exitCode = matches && matches[1];");
file.WriteLine("                            null !== exitCode ? resolve(+exitCode) : reject(new Error(\"runCommandAsync: exitCode not found\"));");
file.WriteLine("                        } else resolve();");
file.WriteLine("                    }");
file.WriteLine("                } catch (e) {");
file.WriteLine("                    clearInterval(timeoutTimer);");
file.WriteLine("                    clearInterval(timer);");
file.WriteLine("                    reject(new Error(\"runCommandAsync: read trigger file\"));");
file.WriteLine("                } finally {");
file.WriteLine("                    textStream.Close();");
file.WriteLine("                }");
file.WriteLine("            }, checkInterval);");
file.WriteLine("            timeoutTimer = setTimeout(function() {");
file.WriteLine("                clearInterval(timeoutTimer);");
file.WriteLine("                clearInterval(timer);");
file.WriteLine("                reject(new Error(\"runCommandAsync: timeout\"));");
file.WriteLine("            }, timeout);");
file.WriteLine("        });");
file.WriteLine("    };");
file.WriteLine("}, , , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    function toObject(value) {");
file.WriteLine("        return isObject(value) ? value : Object(value);");
file.WriteLine("    }");
file.WriteLine("    var isObject = __webpack_require__(42);");
file.WriteLine("    module.exports = toObject;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    var getNative = __webpack_require__(128), isLength = __webpack_require__(78), isObjectLike = __webpack_require__(79), objectProto = Object.prototype, objToString = objectProto.toString, nativeIsArray = getNative(Array, \"isArray\"), isArray = nativeIsArray || function(value) {");
file.WriteLine("        return isObjectLike(value) && isLength(value.length) && \"[object Array]\" == objToString.call(value);");
file.WriteLine("    };");
file.WriteLine("    module.exports = isArray;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _wmi = __webpack_require__(3), _wmiRegistry = __webpack_require__(74), _diagnosticsMap = __webpack_require__(246), _diagnosticsMap2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_diagnosticsMap), collectWMIQueries = function(diagMap) {");
file.WriteLine("        var res = {};");
file.WriteLine("        Object.keys(diagMap).forEach(function(section) {");
file.WriteLine("            Object.entries(diagMap[section]).forEach(function(_ref) {");
file.WriteLine("                var svalue = (_ref[0], _ref[1]);");
file.WriteLine("                switch (svalue.type) {");
file.WriteLine("                  case \"object\":");
file.WriteLine("                    svalue.groups.forEach(function(group) {");
file.WriteLine("                        group.fields.forEach(function(field) {");
file.WriteLine("                            if (field.wmi) {");
file.WriteLine("                                if (!res[field.wmi.source]) res[field.wmi.source] = [];");
file.WriteLine("                                field.wmi.fields.forEach(function(f) {");
file.WriteLine("                                    if (-1 === res[field.wmi.source].indexOf(f)) res[field.wmi.source].push(f);");
file.WriteLine("                                });");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                    });");
file.WriteLine("                    break;");
file.WriteLine("");
file.WriteLine("                  case \"array\":");
file.WriteLine("                    if (svalue.wmi) {");
file.WriteLine("                        if (!res[svalue.wmi.source]) res[svalue.wmi.source] = [];");
file.WriteLine("                        svalue.wmi.fields.forEach(function(field) {");
file.WriteLine("                            if (-1 === res[svalue.wmi.source].indexOf(field.field)) res[svalue.wmi.source].push(field.field);");
file.WriteLine("                        });");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        return res;");
file.WriteLine("    }, cacheWMI = function(diagMap) {");
file.WriteLine("        var wmis = {}, res = {};");
file.WriteLine("        Object.entries(collectWMIQueries(diagMap)).forEach(function(_ref2) {");
file.WriteLine("            var source = _ref2[0], fields = _ref2[1], _source$split = source.split(\" WHERE \"), path = _source$split[0], where = _source$split[1], parts = path.split(\":\");");
file.WriteLine("            if (2 === parts.length) {");
file.WriteLine("                if (!wmis[parts[0]]) try {");
file.WriteLine("                    wmis[parts[0]] = new ActiveXObject(\"WbemScripting.SWbemLocator\").ConnectServer(null, parts[0]);");
file.WriteLine("                } catch (e) {}");
file.WriteLine("                res[source] = (0, _wmi.getWMIObjects)(fields, parts[1], where, wmis[parts[0]]);");
file.WriteLine("            } else res[source] = (0, _wmi.getWMIObjects)(fields, parts[0], where);");
file.WriteLine("        });");
file.WriteLine("        return res;");
file.WriteLine("    }, filterDiagnosticsMap = function(target) {");
file.WriteLine("        var res = {};");
file.WriteLine("        Object.keys(_diagnosticsMap2[\"default\"]).forEach(function(section) {");
file.WriteLine("            Object.entries(_diagnosticsMap2[\"default\"][section]).forEach(function(_ref3) {");
file.WriteLine("                var subsection = _ref3[0], svalue = _ref3[1];");
file.WriteLine("                if (!target || !svalue.targets || -1 !== svalue.targets.indexOf(target)) {");
file.WriteLine("                    if (!res[section]) res[section] = {};");
file.WriteLine("                    res[section][subsection] = svalue;");
file.WriteLine("                } else switch (svalue.type) {");
file.WriteLine("                  case \"object\":");
file.WriteLine("                    var resGroups = [];");
file.WriteLine("                    svalue.groups.forEach(function(group) {");
file.WriteLine("                        var resFields = [];");
file.WriteLine("                        group.fields.forEach(function(field) {");
file.WriteLine("                            if (field.targets && -1 !== field.targets.indexOf(target)) resFields.push(field);");
file.WriteLine("                        });");
file.WriteLine("                        if (resFields.length) {");
file.WriteLine("                            var resGroup = {");
file.WriteLine("                                name: group.name,");
file.WriteLine("                                fields: resFields");
file.WriteLine("                            };");
file.WriteLine("                            resGroups.push(resGroup);");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                    if (resGroups.length) {");
file.WriteLine("                        if (!res[section]) res[section] = {};");
file.WriteLine("                        res[section][subsection] = {");
file.WriteLine("                            type: \"object\",");
file.WriteLine("                            groups: resGroups");
file.WriteLine("                        };");
file.WriteLine("                    }");
file.WriteLine("                    break;");
file.WriteLine("");
file.WriteLine("                  case \"array\":");
file.WriteLine("                    [ \"wmi\", \"reg\" ].forEach(function(src) {");
file.WriteLine("                        if (svalue[src]) {");
file.WriteLine("                            var resFields = [];");
file.WriteLine("                            svalue[src].fields.forEach(function(field) {");
file.WriteLine("                                if (field.targets && -1 !== field.targets.indexOf(target)) resFields.push(field);");
file.WriteLine("                            });");
file.WriteLine("                            if (resFields.length) {");
file.WriteLine("                                if (!res[section]) res[section] = {};");
file.WriteLine("                                res[section][subsection] = {");
file.WriteLine("                                    type: \"array\"");
file.WriteLine("                                };");
file.WriteLine("                                res[section][subsection][src] = {");
file.WriteLine("                                    source: svalue[src].source,");
file.WriteLine("                                    fields: resFields");
file.WriteLine("                                };");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        return res;");
file.WriteLine("    };");
file.WriteLine("    exports[\"default\"] = function(target) {");
file.WriteLine("        var res = {}, diagMap = filterDiagnosticsMap(target), cache = cacheWMI(diagMap);");
file.WriteLine("        Object.keys(diagMap).forEach(function(section) {");
file.WriteLine("            res[section] = {};");
file.WriteLine("            Object.entries(diagMap[section]).forEach(function(_ref4) {");
file.WriteLine("                var subsection = _ref4[0], svalue = _ref4[1];");
file.WriteLine("                res[section][subsection] = {};");
file.WriteLine("                switch (svalue.type) {");
file.WriteLine("                  case \"object\":");
file.WriteLine("                    svalue.groups.forEach(function(group) {");
file.WriteLine("                        svalue[group.name] = {};");
file.WriteLine("                        var sres = svalue[group.name];");
file.WriteLine("                        group.fields.forEach(function(field) {");
file.WriteLine("                            try {");
file.WriteLine("                                if (field.wmi) {");
file.WriteLine("                                    var wmiRes = cache[field.wmi.source];");
file.WriteLine("                                    if (field.wmi.filter) wmiRes = wmiRes.filter(field.wmi.filter);");
file.WriteLine("                                    if (field.format) wmiRes = wmiRes.map(field.format); else wmiRes = wmiRes.map(function(v) {");
file.WriteLine("                                        return v[field.wmi.fields[0]];");
file.WriteLine("                                    });");
file.WriteLine("                                    if (field.multi) sres[field.name] = wmiRes; else sres[field.name] = wmiRes ? wmiRes[0] : \"\";");
file.WriteLine("                                } else if (field.reg) {");
file.WriteLine("                                    for (var sources = Array.isArray(field.reg.source) ? field.reg.source : [ field.reg.source ], regRes = void 0, _iterator = sources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ;) {");
file.WriteLine("                                        var _ref5;");
file.WriteLine("                                        if (_isArray) {");
file.WriteLine("                                            if (_i >= _iterator.length) break;");
file.WriteLine("                                            _ref5 = _iterator[_i++];");
file.WriteLine("                                        } else {");
file.WriteLine("                                            _i = _iterator.next();");
file.WriteLine("                                            if (_i.done) break;");
file.WriteLine("                                            _ref5 = _i.value;");
file.WriteLine("                                        }");
file.WriteLine("                                        var source = _ref5, _source$split2 = source.split(\"\\\\\"), sect = _source$split2[0], path = _source$split2.slice(1), key = path.splice(-1, 1);");
file.WriteLine("                                        path = path.join(\"\\\\\");");
file.WriteLine("                                        var wmiReg = _wmiRegistry.wmiRegistry;");
file.WriteLine("                                        if (sect.endsWith(\"64\")) {");
file.WriteLine("                                            sect = sect.slice(0, -2);");
file.WriteLine("                                            wmiReg = _wmiRegistry.wmiRegistry64;");
file.WriteLine("                                        }");
file.WriteLine("                                        regRes = wmiReg.GetStringValue(wmiReg[sect], path, key);");
file.WriteLine("                                        if (!regRes) regRes = wmiReg.GetDWORDValue(wmiReg[sect], path, key);");
file.WriteLine("                                        if (regRes) break;");
file.WriteLine("                                    }");
file.WriteLine("                                    if (field.format) sres[field.name] = field.format(regRes); else sres[field.name] = regRes;");
file.WriteLine("                                } else if (field.format) sres[field.name] = field.format(); else sres[field.name] = \"\";");
file.WriteLine("                                res[section][subsection][group.name] = sres;");
file.WriteLine("                            } catch (e) {");
file.WriteLine("                                res[section][subsection][group.name] = \"\";");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                    });");
file.WriteLine("                    break;");
file.WriteLine("");
file.WriteLine("                  case \"array\":");
file.WriteLine("                    try {");
file.WriteLine("                        if (svalue.wmi) {");
file.WriteLine("                            var wmiRes = cache[svalue.wmi.source];");
file.WriteLine("                            if (svalue.wmi.filter) wmiRes = wmiRes.filter(svalue.wmi.filter);");
file.WriteLine("                            var outputArr = wmiRes.map(function(resItem) {");
file.WriteLine("                                var outputObj = {};");
file.WriteLine("                                svalue.wmi.fields.forEach(function(fieldsItem) {");
file.WriteLine("                                    if (resItem[fieldsItem.field]) {");
file.WriteLine("                                        var fieldVal = resItem[fieldsItem.field];");
file.WriteLine("                                        if (fieldsItem.format) fieldVal = fieldsItem.format(fieldVal);");
file.WriteLine("                                        outputObj[fieldsItem.name] = fieldVal;");
file.WriteLine("                                    }");
file.WriteLine("                                });");
file.WriteLine("                                return outputObj;");
file.WriteLine("                            });");
file.WriteLine("                            if (svalue.format) outputArr = svalue.format(outputArr);");
file.WriteLine("                            res[section][subsection] = outputArr;");
file.WriteLine("                        } else if (svalue.reg) {");
file.WriteLine("                            var _outputArr = [], sourceArr = Array.isArray(svalue.reg.source) ? svalue.reg.source : [ svalue.reg.source ];");
file.WriteLine("                            sourceArr.forEach(function(source) {");
file.WriteLine("                                var _source$split3 = source.split(\"\\\\\"), sect = _source$split3[0], path = _source$split3.slice(1);");
file.WriteLine("                                path = path.join(\"\\\\\");");
file.WriteLine("                                var wmiReg = _wmiRegistry.wmiRegistry;");
file.WriteLine("                                if (sect.endsWith(\"64\")) {");
file.WriteLine("                                    sect = sect.slice(0, -2);");
file.WriteLine("                                    wmiReg = _wmiRegistry.wmiRegistry64;");
file.WriteLine("                                }");
file.WriteLine("                                wmiReg.EnumKey(wmiReg[sect], path).forEach(function(regSection) {");
file.WriteLine("                                    var outputObj = {};");
file.WriteLine("                                    svalue.reg.fields.forEach(function(fieldsItem) {");
file.WriteLine("                                        var fieldVal = void 0;");
file.WriteLine("                                        if (\"RegPath\" === fieldsItem.field) fieldVal = \"\" + source + regSection + \"\\\\\"; else {");
file.WriteLine("                                            fieldVal = wmiReg.GetStringValue(wmiReg[sect], path + \"\\\\\" + regSection, fieldsItem.field);");
file.WriteLine("                                            if (!fieldVal) fieldVal = wmiReg.GetDWORDValue(wmiReg[sect], path + \"\\\\\" + regSection, fieldsItem.field);");
file.WriteLine("                                        }");
file.WriteLine("                                        if (fieldsItem.format) fieldVal = fieldsItem.format(fieldVal);");
file.WriteLine("                                        outputObj[fieldsItem.name] = fieldVal;");
file.WriteLine("                                    });");
file.WriteLine("                                    _outputArr.push(outputObj);");
file.WriteLine("                                });");
file.WriteLine("                            });");
file.WriteLine("                            _outputArr = _outputArr.filter(function(obj) {");
file.WriteLine("                                return Object.values(obj).some(function(v) {");
file.WriteLine("                                    return !!v;");
file.WriteLine("                                });");
file.WriteLine("                            });");
file.WriteLine("                            if (svalue.reg.filter) _outputArr = _outputArr.filter(svalue.reg.filter);");
file.WriteLine("                            if (svalue.format) _outputArr = svalue.format(_outputArr);");
file.WriteLine("                            res[section][subsection] = _outputArr;");
file.WriteLine("                        }");
file.WriteLine("                    } catch (e) {");
file.WriteLine("                        res[section][subsection] = [];");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        return res;");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _fso = __webpack_require__(7), _specialFolders = __webpack_require__(14), _localFiles = __webpack_require__(18), toFixed = function(num) {");
file.WriteLine("        return (\"0\" + num).slice(-2);");
file.WriteLine("    }, FileWriter = function() {");
file.WriteLine("        function FileWriter() {");
file.WriteLine("            _classCallCheck(this, FileWriter);");
file.WriteLine("            this.logFolder = _specialFolders.AppFolder + \"\\\\Logs\\\\\";");
file.WriteLine("        }");
file.WriteLine("        FileWriter.prototype.getFilename = function() {");
file.WriteLine("            var timestamp = new Date();");
file.WriteLine("            return \"log___\" + [ timestamp.getFullYear(), toFixed(timestamp.getMonth() + 1), toFixed(timestamp.getDate()), toFixed(timestamp.getHours()), toFixed(timestamp.getMinutes()), toFixed(timestamp.getSeconds()) ].join(\"-\");");
file.WriteLine("        };");
file.WriteLine("        FileWriter.prototype.init = function() {");
file.WriteLine("            try {");
file.WriteLine("                (0, _localFiles.ensurePath)(this.logFolder);");
file.WriteLine("                var filename = \"\" + this.logFolder + this.getFilename() + \".html\";");
file.WriteLine("                this.file = _fso.fso.CreateTextFile(filename, !0);");
file.WriteLine("                this.file.WriteLine(\"<html>\\n<head>\\n  <meta charset='windows-1251'/>\\n  <script type='text/javascript' src='http://static.drp.su/update/logs/script.js'><\\/script>\\n  <link rel='stylesheet' type='text/css' href='http://static.drp.su/update/logs/style.css'/>\\n</head>\\n<body>\\n<script type=\\\"text/javascript\\\">window.data = [];<\\/script>\\n\");");
file.WriteLine("            } catch (e) {");
file.WriteLine("                this.file = null;");
file.WriteLine("                this.disabled = !0;");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        FileWriter.prototype.close = function() {");
file.WriteLine("            if (this.file) {");
file.WriteLine("                this.file.WriteLine(\"\\n</body>\\n</html>\\n\");");
file.WriteLine("                this.file.Close();");
file.WriteLine("                this.file = null;");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        FileWriter.prototype.write = function(message) {");
file.WriteLine("            var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\", params = arguments[2], data = arguments[3], type = arguments[4];");
file.WriteLine("            if (!this.file) this.init();");
file.WriteLine("            if (this.file && !this.disabled) {");
file.WriteLine("                var timestamp = new Date(), time = [ toFixed(timestamp.getHours()), toFixed(timestamp.getMinutes()), toFixed(timestamp.getSeconds()) ].join(\":\"), json = JSON.stringify({");
file.WriteLine("                    type: type,");
file.WriteLine("                    data: data,");
file.WriteLine("                    timestamp: timestamp.valueOf()");
file.WriteLine("                }), details = \"\";");
file.WriteLine("                if (params && Object.keys(params).length > 0) {");
file.WriteLine("                    var obj = {};");
file.WriteLine("                    for (var key in params) {");
file.WriteLine("                        var part = params[key];");
file.WriteLine("                        obj[key] = part instanceof Error ? {");
file.WriteLine("                            name: part.name || \"Error\",");
file.WriteLine("                            message: part.message");
file.WriteLine("                        } : part;");
file.WriteLine("                    }");
file.WriteLine("                    details = '<pre class=\"code\">' + JSON.stringify(obj, null, \"\\t\") + \"</pre>\";");
file.WriteLine("                }");
file.WriteLine("                var ts = '<span class=\"timeStamp\">' + time + \"</span>\";");
file.WriteLine("                try {");
file.WriteLine("                    this.file.Write(('\\n        <div class=\"logs ' + className + '\">' + ts + message + details + '</div>\\n        <script type=\"text/javascript\">window.data.push(' + json + ');<\\/script>\\n        <script type=\"application/json\" class=\"data\">' + json + \"<\\/script>\\n      \").replace(/[^\\x00-\\x7F]/g, \"\u001a\"));");
file.WriteLine("                } catch (e) {}");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        return FileWriter;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = new FileWriter();");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _http = __webpack_require__(31), _sendImg = __webpack_require__(73), _os = __webpack_require__(15), GoogleAnalytics = function() {");
file.WriteLine("        function GoogleAnalytics(parent) {");
file.WriteLine("            _classCallCheck(this, GoogleAnalytics);");
file.WriteLine("            this.session = {};");
file.WriteLine("            this.parent = parent;");
file.WriteLine("            this.logger = parent.logger.scope(\"ga\");");
file.WriteLine("            this.options = this.parent.options;");
file.WriteLine("        }");
file.WriteLine("        GoogleAnalytics.sendUrl = function(url) {");
file.WriteLine("            return (0, _sendImg.sendImg)(url)[\"catch\"](function() {");
file.WriteLine("                return (0, _http.httpget)(url);");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        GoogleAnalytics.prototype.init = function(_ref) {");
file.WriteLine("            var shared = _ref.shared, primary = _ref.primary, session = _ref.session;");
file.WriteLine("            this.counters = {");
file.WriteLine("                shared: shared,");
file.WriteLine("                primary: primary");
file.WriteLine("            };");
file.WriteLine("            this.session[primary] = session;");
file.WriteLine("            this.session[shared] = \"prolonged\";");
file.WriteLine("        };");
file.WriteLine("        GoogleAnalytics.prototype.getCID = function() {");
file.WriteLine("            if (\"computerId\" === this.options.identifier) return this.parent.computerId; else return this.parent.clientId;");
file.WriteLine("        };");
file.WriteLine("        GoogleAnalytics.prototype.send = function(event) {");
file.WriteLine("            var dimensions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [], important = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1, _counters = this.counters, shared = _counters.shared, primary = _counters.primary;");
file.WriteLine("            return Promise.all([ important ? this._sendHit(shared, this.parent.clientId, event, dimensions) : !1, this._sendHit(primary, this.getCID(), event, dimensions) ]);");
file.WriteLine("        };");
file.WriteLine("        GoogleAnalytics.prototype._sendHit = function(counter, cid, event, dimensions) {");
file.WriteLine("            if (counter) {");
file.WriteLine("                dimensions = (dimensions || []).concat([ [ this.parent.config.userIdDimension, cid ], [ this.parent.config.drpVersionDimension, this.parent.drpVersion.trim() ], [ this.parent.config.osDimension, _os.OSName + \" x\" + _os.arch ], [ this.parent.config.spDimension, \"SP \" + _os.OSVersionSP ], [ this.parent.config.captionDimension, _os.OSCaption ], [ this.parent.config.experimentDimension, this.parent.experiment ] ]);");
file.WriteLine("                var url = this._compileUrl(counter, cid, event, dimensions);");
file.WriteLine("                this.logger.debug(\"Send event \" + counter + \" GA: \" + event.action, {");
file.WriteLine("                    event: event,");
file.WriteLine("                    dimensions: dimensions,");
file.WriteLine("                    url: url");
file.WriteLine("                }, \"send\");");
file.WriteLine("                return GoogleAnalytics.sendUrl(url);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        GoogleAnalytics.prototype._compileUrl = function(tid, cid, event, dimensions) {");
file.WriteLine("            var params = {");
file.WriteLine("                v: 1,");
file.WriteLine("                tid: tid,");
file.WriteLine("                cid: cid,");
file.WriteLine("                t: \"event\",");
file.WriteLine("                ec: event.category.toLowerCase(),");
file.WriteLine("                ea: event.action.toLowerCase(),");
file.WriteLine("                el: event.label.toLowerCase(),");
file.WriteLine("                ul: this.parent.lang,");
file.WriteLine("                z: Math.random().toString().slice(2)");
file.WriteLine("            };");
file.WriteLine("            if (!this.session[tid]) {");
file.WriteLine("                this.session[tid] = \"started\";");
file.WriteLine("                params.sc = \"start\";");
file.WriteLine("            }");
file.WriteLine("            var parts = Object.entries(params).concat(dimensions);");
file.WriteLine("            return GoogleAnalytics.endpoint + \"?\" + parts.map(function(pair) {");
file.WriteLine("                return pair.map(encodeURIComponent).join(\"=\");");
file.WriteLine("            }).join(\"&\");");
file.WriteLine("        };");
file.WriteLine("        return GoogleAnalytics;");
file.WriteLine("    }();");
file.WriteLine("    GoogleAnalytics.endpoint = \"http://www.google-analytics.com/collect\";");
file.WriteLine("    exports[\"default\"] = GoogleAnalytics;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _objectWithoutProperties(obj, keys) {");
file.WriteLine("        var target = {};");
file.WriteLine("        for (var i in obj) if (!(keys.indexOf(i) >= 0)) if (Object.prototype.hasOwnProperty.call(obj, i)) target[i] = obj[i];");
file.WriteLine("        return target;");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, _clientIdStorage = __webpack_require__(115), _clientIdStorage2 = _interopRequireDefault(_clientIdStorage), _GoogleAnalytics = __webpack_require__(71), _GoogleAnalytics2 = _interopRequireDefault(_GoogleAnalytics), _YaMetrika = __webpack_require__(140), _YaMetrika2 = _interopRequireDefault(_YaMetrika), _EventsAPI = __webpack_require__(135), _EventsAPI2 = _interopRequireDefault(_EventsAPI), _logs = __webpack_require__(16), _logs2 = _interopRequireDefault(_logs), OnlineStatistics = function() {");
file.WriteLine("        function OnlineStatistics(options) {");
file.WriteLine("            var drpVersion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\", lang = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";");
file.WriteLine("            _classCallCheck(this, OnlineStatistics);");
file.WriteLine("            this.clientId = \"\";");
file.WriteLine("            this.computerId = \"\";");
file.WriteLine("            this.experiment = \"(not set)\";");
file.WriteLine("            this.config = {");
file.WriteLine("                userIdDimension: \"cd1\",");
file.WriteLine("                drpVersionDimension: \"cd2\",");
file.WriteLine("                osDimension: \"cd3\",");
file.WriteLine("                spDimension: \"cd4\",");
file.WriteLine("                captionDimension: \"cd5\",");
file.WriteLine("                experimentDimension: \"cd6\",");
file.WriteLine("                driversInstallFailed: \"cd7\",");
file.WriteLine("                installationTime: \"cd8\",");
file.WriteLine("                errorDevicesApiFailed: \"cd9\",");
file.WriteLine("                nps: \"cd10\",");
file.WriteLine("                driversInstallFailedMetric: \"cm1\",");
file.WriteLine("                installationTimeMetric: \"cm2\",");
file.WriteLine("                errorDevicesApiFailedMetric: \"cm3\"");
file.WriteLine("            };");
file.WriteLine("            this.options = {");
file.WriteLine("                google: {},");
file.WriteLine("                yandex: {},");
file.WriteLine("                events: {}");
file.WriteLine("            };");
file.WriteLine("            this.logger = (0, _logs.getLogger)(\"core:statistics\");");
file.WriteLine("            this.counters = {");
file.WriteLine("                google: new _GoogleAnalytics2[\"default\"](this),");
file.WriteLine("                yandex: new _YaMetrika2[\"default\"](this),");
file.WriteLine("                events: new _EventsAPI2[\"default\"](this)");
file.WriteLine("            };");
file.WriteLine("            Object.assign(this, {");
file.WriteLine("                lang: lang,");
file.WriteLine("                drpVersion: drpVersion.trim()");
file.WriteLine("            });");
file.WriteLine("            Object.assign(this.options, options);");
file.WriteLine("        }");
file.WriteLine("        OnlineStatistics.prototype.generateSessionId = function() {");
file.WriteLine("            var d = new Date().getTime();");
file.WriteLine("            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {");
file.WriteLine("                var r = (d + 16 * Math.random()) % 16 | 0;");
file.WriteLine("                d = Math.floor(d / 16);");
file.WriteLine("                return (\"x\" === c ? r : 3 & r | 8).toString(16);");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        OnlineStatistics.prototype.init = function() {");
file.WriteLine("            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, clientId = _ref.clientId, computerId = _ref.computerId;");
file.WriteLine("            if (_ref.offline) this.offline = !0;");
file.WriteLine("            this.clientId = _clientIdStorage2[\"default\"].init(\"clientId\", clientId);");
file.WriteLine("            this.computerId = _clientIdStorage2[\"default\"].init(\"computerId\", computerId, [ \"HKLM\", \"HKCU\" ]);");
file.WriteLine("            this.sessionId = this.generateSessionId();");
file.WriteLine("            var experiments = this.options.experiments || [];");
file.WriteLine("            if (experiments.length > 0) {");
file.WriteLine("                var seed = this.computerId.replace(/[^\\d]/g, \"\").slice(-15), ind = parseInt(seed, 10) % experiments.length;");
file.WriteLine("                this.experiment = this.options.experiments[ind || 0];");
file.WriteLine("            }");
file.WriteLine("            for (var name in this.counters) this.counters[name].init(this.options[name]);");
file.WriteLine("            this._initialized = Promise.resolve(!0);");
file.WriteLine("        };");
file.WriteLine("        OnlineStatistics.prototype.event = function(_event, dimensions, important) {");
file.WriteLine("            if (!_event.action) return Promise.reject(new Error(\"event.action is undefined\"));");
file.WriteLine("            if (!this._initialized) this.init();");
file.WriteLine("            _event = Object.assign({");
file.WriteLine("                category: this.options.category,");
file.WriteLine("                action: \"\",");
file.WriteLine("                label: this.drpVersion");
file.WriteLine("            }, _event);");
file.WriteLine("            if (this.offline) _event.label += \" [offline]\";");
file.WriteLine("            var promise = this.send(_event, dimensions, important);");
file.WriteLine("            if (\"function\" == typeof _event.callback) promise.then(function() {");
file.WriteLine("                _event.callback();");
file.WriteLine("            }, function(err) {");
file.WriteLine("                _event.callback(err);");
file.WriteLine("            });");
file.WriteLine("            return promise;");
file.WriteLine("        };");
file.WriteLine("        OnlineStatistics.prototype.send = function(_ref2, dimensions, important) {");
file.WriteLine("            var _this = this, counters = _ref2.counters, data = _objectWithoutProperties(_ref2, [ \"counters\" ]);");
file.WriteLine("            _logs2[\"default\"]._write({");
file.WriteLine("                type: \"event\",");
file.WriteLine("                data: data");
file.WriteLine("            });");
file.WriteLine("            return Promise.all(Object.keys(this.counters).map(function(name) {");
file.WriteLine("                var event = counters ? counters[name] && _extends({}, data, counters[name]) : data;");
file.WriteLine("                return event && _this.counters[name].send(event, dimensions, important);");
file.WriteLine("            }));");
file.WriteLine("        };");
file.WriteLine("        return OnlineStatistics;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = OnlineStatistics;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.sendImg = function(url) {");
file.WriteLine("        return new Promise(function(resolve, reject) {");
file.WriteLine("            var img = document.createElement(\"img\");");
file.WriteLine("            img.className = \"ga-image\";");
file.WriteLine("            img.onload = resolve;");
file.WriteLine("            img.onerror = reject;");
file.WriteLine("            img.src = url;");
file.WriteLine("            document.body.appendChild(img);");
file.WriteLine("        });");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.wmiRegRead = exports.wmiRegistry64 = exports.wmiRegistry = undefined;");
file.WriteLine("    var _WMIRegistry = __webpack_require__(113), _WMIRegistry2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_WMIRegistry), wmiRegistry = exports.wmiRegistry = new _WMIRegistry2[\"default\"](), wmiRegistry64 = exports.wmiRegistry64 = new _WMIRegistry2[\"default\"](!0);");
file.WriteLine("    exports.wmiRegRead = function(regPath) {");
file.WriteLine("        var _regPath$split = regPath.split(\"\\\\\"), sect = _regPath$split[0], path = _regPath$split.slice(1), key = path.splice(-1);");
file.WriteLine("        path = path.join(\"\\\\\");");
file.WriteLine("        var wmiReg = wmiRegistry;");
file.WriteLine("        if (sect.endsWith(\"64\")) {");
file.WriteLine("            sect = sect.slice(0, -2);");
file.WriteLine("            wmiReg = wmiRegistry64;");
file.WriteLine("        }");
file.WriteLine("        return wmiReg.GetStringValue(wmiReg[sect], path, key);");
file.WriteLine("    };");
file.WriteLine("}, , , , function(module, exports) {");
file.WriteLine("    function isLength(value) {");
file.WriteLine("        return \"number\" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;");
file.WriteLine("    }");
file.WriteLine("    var MAX_SAFE_INTEGER = 9007199254740991;");
file.WriteLine("    module.exports = isLength;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function isObjectLike(value) {");
file.WriteLine("        return !!value && \"object\" == typeof value;");
file.WriteLine("    }");
file.WriteLine("    module.exports = isObjectLike;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.copyFiles = exports.writeFile = undefined;");
file.WriteLine("    var _system = __webpack_require__(1);");
file.WriteLine("    exports.writeFile = function(bytes, target) {");
file.WriteLine("        try {");
file.WriteLine("            var fso = new ActiveXObject(\"Scripting.FileSystemObject\");");
file.WriteLine("            if (fso.FileExists(target)) fso.DeleteFile(target);");
file.WriteLine("            var stream = new ActiveXObject(\"ADODB.Stream\");");
file.WriteLine("            stream.Type = 1;");
file.WriteLine("            stream.Open();");
file.WriteLine("            stream.Write(bytes);");
file.WriteLine("            stream.SaveToFile(target, 2);");
file.WriteLine("        } catch (err) {}");
file.WriteLine("    }, exports.copyFiles = function(source, dest, wait) {");
file.WriteLine("        _system.WshShell.Run('xcopy \"' + source + '\" \"' + dest + '\\\\\" /S /E /Y /I', 0, wait);");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.startCommand = exports.goToUrl = exports.timeout = exports.ParseArgs = undefined;");
file.WriteLine("    var _system = __webpack_require__(1), _utils = __webpack_require__(38);");
file.WriteLine("    exports.ParseArgs = function(args) {");
file.WriteLine("        var key = null, res = {");
file.WriteLine("            _: []");
file.WriteLine("        };");
file.WriteLine("        args.forEach(function(arg) {");
file.WriteLine("            var m = arg.match(/^--(.+)/);");
file.WriteLine("            if (m) {");
file.WriteLine("                key = m[1];");
file.WriteLine("                res[key] = !0;");
file.WriteLine("            } else if (key) {");
file.WriteLine("                res[key] = arg;");
file.WriteLine("                key = null;");
file.WriteLine("            } else res._.push(arg);");
file.WriteLine("        });");
file.WriteLine("        return res;");
file.WriteLine("    }, exports.timeout = function(delay) {");
file.WriteLine("        return new Promise(function(resolve) {");
file.WriteLine("            setTimeout(resolve, delay);");
file.WriteLine("        });");
file.WriteLine("    }, exports.goToUrl = function(url) {");
file.WriteLine("        try {");
file.WriteLine("            var HKLM = \"HKLM\\\\SOFTWARE\\\\Clients\\\\StartMenuInternet\\\\\", defBrowser = (0, _system.RegRead)(\"HKCU\\\\SOFTWARE\\\\Clients\\\\StartMenuInternet\\\\\") || (0, ");
file.WriteLine("            _system.RegRead)(HKLM), cmd = (0, _system.RegRead)(HKLM + defBrowser + \"\\\\shell\\\\open\\\\command\\\\\");");
file.WriteLine("            if (cmd) {");
file.WriteLine("                cmd = cmd.replace(/\"/gi, \"\");");
file.WriteLine("                _system.WshShell.Run('\"' + cmd + '\" \"' + url + '\"', 1, !1);");
file.WriteLine("            } else window.open(url);");
file.WriteLine("        } catch (e) {");
file.WriteLine("            _system.WshShell.Run(\"rundll32 url.dll,FileProtocolHandler \" + url, 1, !1);");
file.WriteLine("        }");
file.WriteLine("        return !1;");
file.WriteLine("    }, exports.startCommand = function(command) {");
file.WriteLine("        var wrappedCommand = (0, _utils.wrapInCmd)(command);");
file.WriteLine("        _system.WshShell.Run(wrappedCommand, 0, !1);");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.addScript = function(url) {");
file.WriteLine("        var updateScriptId = \"updateScript_\" + +new Date(), scriptLoading = document.createElement(\"script\");");
file.WriteLine("        scriptLoading.id = updateScriptId;");
file.WriteLine("        scriptLoading.type = \"text/javascript\";");
file.WriteLine("        scriptLoading.async = !1;");
file.WriteLine("        scriptLoading.charset = \"utf-8\";");
file.WriteLine("        scriptLoading.src = url + \"?t=\" + +new Date();");
file.WriteLine("        document.body.appendChild(scriptLoading);");
file.WriteLine("        setTimeout(function() {");
file.WriteLine("            try {");
file.WriteLine("                document.body.removeChild(document.getElementById(updateScriptId));");
file.WriteLine("            } catch (e) {}");
file.WriteLine("        }, window.abortRemoteScriptInterval);");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var lang = _ref.lang;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"standard\",");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            timeoutDelay: 18e5,");
file.WriteLine("            title: \"Your computer security is at risk.\",");
file.WriteLine("            content: \"You don't have any antivirus software installed.\\n     Protect your system with Avast — the best free antivirus\",");
file.WriteLine("            actionButtonText: \"Install for free now\",");
file.WriteLine("            unsubscribeButtonText: \"No, Thanks\",");
file.WriteLine("            notificationIcon: \"robot.png\",");
file.WriteLine("            statisticsLabel: \"antivirus notification avast\",");
file.WriteLine("            color: \"#6534ac\"");
file.WriteLine("        }, dictionary[lang]);");
file.WriteLine("    };");
file.WriteLine("    var dictionary = {");
file.WriteLine("        ru: {");
file.WriteLine("            title: \"Безопасность компьютера под угрозой.\",");
file.WriteLine("            content: \"Не установлен антивирус.\\n     Установите надежный бесплатный антивирус Avast\",");
file.WriteLine("            actionButtonText: \"Установить бесплатно\",");
file.WriteLine("            unsubscribeButtonText: \"Нет, спасибо\"");
file.WriteLine("        },");
file.WriteLine("        pt: {");
file.WriteLine("            title: \"O seu computador está em risco.\",");
file.WriteLine("            content: \"Antivírus não está instalado.\\n     Proteja o seu computadores com Avast — o melhor antivírus grátis\",");
file.WriteLine("            actionButtonText: \"Instalar de graça\",");
file.WriteLine("            unsubscribeButtonText: \"Não, obrigado\"");
file.WriteLine("        },");
file.WriteLine("        es: {");
file.WriteLine("            title: \"La seguridad del equipo está en peligro\",");
file.WriteLine("            content: \"No tienes ningún software antivirus instalado.\\n     Proteja su computadora con Avast — el mejor antivirus gratuito\",");
file.WriteLine("            actionButtonText: \"Instalar gratis\",");
file.WriteLine("            unsubscribeButtonText: \"No, gracias\"");
file.WriteLine("        },");
file.WriteLine("        de: {");
file.WriteLine("            title: \"Die Sicherheit des Computers ist bedroht.\",");
file.WriteLine("            content: \"Sie haben keine Antivirus-Software installiert.\\n     Schützen Sie Ihre Geräte mit Avast — das beste kostenlose Antivirus\",");
file.WriteLine("            actionButtonText: \"Kostenlos installieren\",");
file.WriteLine("            unsubscribeButtonText: \"Nein Danke\"");
file.WriteLine("        },");
file.WriteLine("        it: {");
file.WriteLine("            title: \"La protezione del computer è a rischio.\",");
file.WriteLine("            content: \"Non è necessario alcun software antivirus installato.\\n     Proteggi i tuoi computer con Avast — il miglior antivirus gratuito\",");
file.WriteLine("            actionButtonText: \"Installare gratuitamente\",");
file.WriteLine("            unsubscribeButtonText: \"No, grazie\"");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var lang = _ref.lang;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"standard\",");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            timeoutDelay: 18e5,");
file.WriteLine("            title: \"Your computer security is at risk.\",");
file.WriteLine("            content: \"The current installed antivirus software doesn't work.\\n     Protect your system with Avast — the best free antivirus.\",");
file.WriteLine("            actionButtonText: \"Install for free now\",");
file.WriteLine("            unsubscribeButtonText: \"No, Thanks\",");
file.WriteLine("            notificationIcon: \"robot.png\",");
file.WriteLine("            statisticsLabel: \"antivirus notification avast\",");
file.WriteLine("            color: \"#6534ac\"");
file.WriteLine("        }, dictionary[lang]);");
file.WriteLine("    };");
file.WriteLine("    var dictionary = {");
file.WriteLine("        ru: {");
file.WriteLine("            title: \"Безопасность компьютера под угрозой.\",");
file.WriteLine("            content: \"Ваш антивирус не работает.\\n     Установите надежный бесплатный антивирус Avast\",");
file.WriteLine("            actionButtonText: \"Установить бесплатно\",");
file.WriteLine("            unsubscribeButtonText: \"Нет, спасибо\"");
file.WriteLine("        },");
file.WriteLine("        pt: {");
file.WriteLine("            title: \"O seu computador está em risco.\",");
file.WriteLine("            content: \"O seu antivírus não funciona.\\n     Proteja o seu computadores com Avast — o melhor antivírus grátis\",");
file.WriteLine("            actionButtonText: \"Instalar de graça\",");
file.WriteLine("            unsubscribeButtonText: \"Não, obrigado\"");
file.WriteLine("        },");
file.WriteLine("        es: {");
file.WriteLine("            title: \"La seguridad del equipo está en peligro\",");
file.WriteLine("            content: \"El software antivirus instalado actual no funciona.\\n     Proteja su computadora con Avast — el mejor antivirus gratuito\",");
file.WriteLine("            actionButtonText: \"Instalar gratis\",");
file.WriteLine("            unsubscribeButtonText: \"No, gracias\"");
file.WriteLine("        },");
file.WriteLine("        de: {");
file.WriteLine("            title: \"Die Sicherheit des Computers ist bedroht.\",");
file.WriteLine("            content: \"Die aktuell installierte Antivirensoftware funktioniert nicht.\\n     Schützen Sie Ihre Geräte mit Avast — das beste kostenlose Antivirus\",");
file.WriteLine("            actionButtonText: \"Kostenlos installieren\",");
file.WriteLine("            unsubscribeButtonText: \"Nein Danke\"");
file.WriteLine("        },");
file.WriteLine("        it: {");
file.WriteLine("            title: \"La protezione del computer è a rischio.\",");
file.WriteLine("            content: \"L'attuale software antivirus installato non funziona.\\n     Proteggi i tuoi computer con Avast — il miglior antivirus gratuito\",");
file.WriteLine("            actionButtonText: \"Installare gratuitamente\",");
file.WriteLine("            unsubscribeButtonText: \"No, grazie\"");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var lang = _ref.lang;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            timeoutDelay: 2e4,");
file.WriteLine("            title: \"Protect your computer with fast and secure antivirus\",");
file.WriteLine("            content: \"Avast is a free and one of the most popular antivirus programs available. <br />\\n     Lightweight, state-of-the-art protection that won't slow down your PC\",");
file.WriteLine("            actionButtonText: \"Install for free now\",");
file.WriteLine("            unsubscribeButtonText: \"No, Thanks\",");
file.WriteLine("            notificationIcon: \"gliph-attention.png\",");
file.WriteLine("            statisticsLabel: \"antivirus notification avast\",");
file.WriteLine("            color: \"#6534ac\"");
file.WriteLine("        }, \"ru\" === lang ? {");
file.WriteLine("            title: \"Защитите свой компьютер быстрым и надежным антивирусом\",");
file.WriteLine("            content: \"Avast — это бесплатный мощный антивирус, обладающий легким, интуитивно понятным интерфейсом\",");
file.WriteLine("            actionButtonText: \"Установить бесплатно\",");
file.WriteLine("            unsubscribeButtonText: \"Нет, спасибо\"");
file.WriteLine("        } : {});");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        return {");
file.WriteLine("            template: \"standard\",");
file.WriteLine("            maxCountOfDisplaying: 1,");
file.WriteLine("            timeoutDelay: 18e5,");
file.WriteLine("            notificationIcon: \"drp.png\",");
file.WriteLine("            title: \"Помогите сделать наши продукты лучше!\",");
file.WriteLine("            content: \"Предлагаем встретиться или пообщаться онлайн.\",");
file.WriteLine("            actionButtonText: \"Готов помочь\",");
file.WriteLine("            unsubscribeButtonText: \"Нет, увы:(\",");
file.WriteLine("            statisticsLabel: \"cusdev invite \" + _ref.label,");
file.WriteLine("            color: \"#6534ac\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        _ref.count;");
file.WriteLine("        return {");
file.WriteLine("            maxCountOfDisplaying: 12,");
file.WriteLine("            title: \"Доступны обновления драйверов\",");
file.WriteLine("            content: \"Для нескольких устройств доступны обновления драйверов\",");
file.WriteLine("            actionButtonText: \"Установить через DriverPack\",");
file.WriteLine("            unsubscribeButtonText: \"Отказаться\",");
file.WriteLine("            notificationIcon: \"gliph-attention.png\",");
file.WriteLine("            statisticsLabel: \"driverpack drivers\",");
file.WriteLine("            color: \"#394559\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref2) {");
file.WriteLine("        var lang = _ref2.lang, name = _ref2.name, icon = _ref2.icon, uninstallRate = _ref2.uninstallRate;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"new-program\",");
file.WriteLine("            title: \"We recommend you to get rid of \" + name,");
file.WriteLine("            content: uninstallRate + \"% of users uninstall this software\",");
file.WriteLine("            actionButtonText: \"Uninstall\",");
file.WriteLine("            unsubscribeButtonText: \"Learn more\",");
file.WriteLine("            notificationIcon: icon || \"default-soft.png\",");
file.WriteLine("            statusColor: \"#bd3636\",");
file.WriteLine("            statisticsLabel: \"driverpack new program harmful\"");
file.WriteLine("        }, getDictionary({");
file.WriteLine("            lang: lang,");
file.WriteLine("            name: name,");
file.WriteLine("            icon: icon,");
file.WriteLine("            uninstallRate: uninstallRate");
file.WriteLine("        }));");
file.WriteLine("    };");
file.WriteLine("    var getDictionary = function(_ref) {");
file.WriteLine("        var lang = _ref.lang, name = _ref.name, uninstallRate = (_ref.icon, _ref.uninstallRate);");
file.WriteLine("        switch (lang) {");
file.WriteLine("          case \"ru\":");
file.WriteLine("            return {");
file.WriteLine("                title: \"Рекомендуем удалить \" + name,");
file.WriteLine("                content: uninstallRate + \"% пользователей удаляют данную программу\",");
file.WriteLine("                actionButtonText: \"Удалить\",");
file.WriteLine("                unsubscribeButtonText: \"Подробнее\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"es\":");
file.WriteLine("            return {");
file.WriteLine("                title: \"Recomendamos eliminar \" + name,");
file.WriteLine("                content: uninstallRate + \"% de usuarios eliminan este soporte lógico\",");
file.WriteLine("                actionButtonText: \"Eliminar\",");
file.WriteLine("                unsubscribeButtonText: \"Aprender más\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"fr\":");
file.WriteLine("            return {");
file.WriteLine("                title: \"Nous vous recommendons de supprimer \" + name,");
file.WriteLine("                content: uninstallRate + \"% utilisateurs suppriment сe logiciel\",");
file.WriteLine("                actionButtonText: \"Enlever\",");
file.WriteLine("                unsubscribeButtonText: \"Apprendre plus\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            return {};");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref2) {");
file.WriteLine("        var lang = _ref2.lang, name = _ref2.name, icon = _ref2.icon, uninstallRate = _ref2.uninstallRate;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"new-program\",");
file.WriteLine("            title: name + \" is installed\",");
file.WriteLine("            content: uninstallRate + \"% of users uninstall this software\",");
file.WriteLine("            actionButtonText: \"Uninstall\",");
file.WriteLine("            unsubscribeButtonText: \"Learn more\",");
file.WriteLine("            notificationIcon: icon || \"default-soft.png\",");
file.WriteLine("            statusColor: \"#ffc021\",");
file.WriteLine("            statisticsLabel: \"driverpack new program neutral\"");
file.WriteLine("        }, getDictionary({");
file.WriteLine("            lang: lang,");
file.WriteLine("            name: name,");
file.WriteLine("            icon: icon,");
file.WriteLine("            uninstallRate: uninstallRate");
file.WriteLine("        }));");
file.WriteLine("    };");
file.WriteLine("    var getDictionary = function(_ref) {");
file.WriteLine("        var lang = _ref.lang, name = _ref.name, uninstallRate = (_ref.icon, _ref.uninstallRate);");
file.WriteLine("        switch (lang) {");
file.WriteLine("          case \"ru\":");
file.WriteLine("            return {");
file.WriteLine("                title: \"Установлен \" + name,");
file.WriteLine("                content: uninstallRate + \"% пользователей удаляют данную программу\",");
file.WriteLine("                actionButtonText: \"Удалить\",");
file.WriteLine("                unsubscribeButtonText: \"Подробнее\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"es\":");
file.WriteLine("            return {");
file.WriteLine("                title: name + \" está instalado\",");
file.WriteLine("                content: uninstallRate + \"% de usuarios eliminan este soporte lógico\",");
file.WriteLine("                actionButtonText: \"Eliminar\",");
file.WriteLine("                unsubscribeButtonText: \"Aprender más\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"fr\":");
file.WriteLine("            return {");
file.WriteLine("                title: name + \" est installé\",");
file.WriteLine("                content: uninstallRate + \"% utilisateurs suppriment ce logiciel\",");
file.WriteLine("                actionButtonText: \"Enlever\",");
file.WriteLine("                unsubscribeButtonText: \"Apprendre plus\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            return {};");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref2) {");
file.WriteLine("        var lang = _ref2.lang, name = _ref2.name, icon = _ref2.icon;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"new-program\",");
file.WriteLine("            title: \" \" + name + \" — excellent software\",");
file.WriteLine("            content: \"High rating and very low uninstallation percentage\",");
file.WriteLine("            actionButtonText: \"\",");
file.WriteLine("            unsubscribeButtonText: \"\",");
file.WriteLine("            notificationIcon: icon || \"default-soft.png\",");
file.WriteLine("            statusColor: \"#44ad64\",");
file.WriteLine("            statisticsLabel: \"driverpack new program useful\",");
file.WriteLine("            hideButtons: !0");
file.WriteLine("        }, getDictionary({");
file.WriteLine("            lang: lang,");
file.WriteLine("            name: name,");
file.WriteLine("            icon: icon");
file.WriteLine("        }));");
file.WriteLine("    };");
file.WriteLine("    var getDictionary = function(_ref) {");
file.WriteLine("        var lang = _ref.lang, name = _ref.name;");
file.WriteLine("        _ref.icon;");
file.WriteLine("        switch (lang) {");
file.WriteLine("          case \"ru\":");
file.WriteLine("            return {");
file.WriteLine("                title: name + \" — отличная программа\",");
file.WriteLine("                content: \"Высокий рейтинг и очень низкий процент удалений\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"es\":");
file.WriteLine("            return {");
file.WriteLine("                title: name + \" — soporte lógico excelente\",");
file.WriteLine("                content: \"El rating alto y el porcentaje de eliminación muy bajo\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"fr\":");
file.WriteLine("            return {");
file.WriteLine("                title: name + \" est un logiciel excellent\",");
file.WriteLine("                content: \"La cote de popularité est élevée, et le pourcentage de suppression est très faible\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            return {};");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        return {");
file.WriteLine("            maxCountOfDisplaying: 12,");
file.WriteLine("            title: \"Обнаружено нежелательное ПО\",");
file.WriteLine("            content: \"На компьютере обнаружены нежелательные программы&nbsp;(\" + _ref.count + \")\",");
file.WriteLine("            actionButtonText: \"Удалить через DriverPack\",");
file.WriteLine("            unsubscribeButtonText: \"Отказаться\",");
file.WriteLine("            notificationIcon: \"gliph-attention.png\",");
file.WriteLine("            statisticsLabel: \"driverpack protect\",");
file.WriteLine("            color: \"#394559\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref2) {");
file.WriteLine("        var lang = _ref2.lang, extension = _ref2.extension, fileName = _ref2.fileName, softName = _ref2.softName, softCategory = _ref2.softCategory;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"center\",");
file.WriteLine("            content: \"To open \" + fileName + \" file you should install \" + softName + \" program. Do you want to install \" + softName + \" and open the file?\",");
file.WriteLine("            actionButtonText: \"Open file\",");
file.WriteLine("            unsubscribeButtonText: \"Don't open file\",");
file.WriteLine("            messages: {");
file.WriteLine("                preparing: \"Preparing…\",");
file.WriteLine("                downloading: \"Downloading…\",");
file.WriteLine("                installing: \"Installing…\"");
file.WriteLine("            },");
file.WriteLine("            notificationIcon: \"file-icon.png\",");
file.WriteLine("            statisticsLabel: softCategory + \" \" + extension,");
file.WriteLine("            color: \"#674172\",");
file.WriteLine("            showDelay: 0,");
file.WriteLine("            timeoutDelay: !1,");
file.WriteLine("            focusWindow: !0");
file.WriteLine("        }, getDictionary({");
file.WriteLine("            lang: lang,");
file.WriteLine("            extension: extension,");
file.WriteLine("            fileName: fileName,");
file.WriteLine("            softName: softName,");
file.WriteLine("            softCategory: softCategory");
file.WriteLine("        }));");
file.WriteLine("    };");
file.WriteLine("    var getDictionary = function(_ref) {");
file.WriteLine("        var lang = _ref.lang, fileName = (_ref.extension, _ref.fileName), softName = _ref.softName;");
file.WriteLine("        _ref.softCategory;");
file.WriteLine("        switch (lang) {");
file.WriteLine("          case \"ru\":");
file.WriteLine("            return {");
file.WriteLine("                content: \"Для открытия файла \" + fileName + \" не установлена программа \" + softName + \". Установить \" + softName + \" и открыть файл?\",");
file.WriteLine("                actionButtonText: \"Открыть файл\",");
file.WriteLine("                unsubscribeButtonText: \"Не открывать файл\",");
file.WriteLine("                messages: {");
file.WriteLine("                    preparing: \"Подготовка…\",");
file.WriteLine("                    downloading: \"Загрузка…\",");
file.WriteLine("                    installing: \"Установка…\"");
file.WriteLine("                }");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"es\":");
file.WriteLine("            return {");
file.WriteLine("                content: \"El soporte lógico \" + softName + \" no está instalado para abrir el file \" + fileName + \". Instalar \" + softName + \" y abrir el file?\",");
file.WriteLine("                actionButtonText: \"Abrir el file\",");
file.WriteLine("                unsubscribeButtonText: \"No abrir el file\",");
file.WriteLine("                messages: {");
file.WriteLine("                    preparing: \"Preparando…\",");
file.WriteLine("                    downloading: \"Descarga…\",");
file.WriteLine("                    installing: \"Instalación…\"");
file.WriteLine("                }");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case \"fr\":");
file.WriteLine("            return {");
file.WriteLine("                content: softName + \" logiciel n'est pas installé pour ouvrir \" + fileName + \" fichier. Installer \" + softName + \" et ouvrir le fichier?\",");
file.WriteLine("                actionButtonText: \"Ouvrir le fichier\",");
file.WriteLine("                unsubscribeButtonText: \"Ne pas ouvrir le fichier\",");
file.WriteLine("                messages: {");
file.WriteLine("                    preparing: \"Préparation…\",");
file.WriteLine("                    downloading: \"Téléchargement…\",");
file.WriteLine("                    installing: \"Installation…\"");
file.WriteLine("                }");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            return {};");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var errCode = _ref.errCode;");
file.WriteLine("        return {");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            title: \"Сбой в работе Windows!\",");
file.WriteLine("            content: \"Компьютер недавно был самопроизвольно перезагружен из-за ошибки \" + errCode + \"!\",");
file.WriteLine("            actionButtonText: \"Посмотреть решение\",");
file.WriteLine("            unsubscribeButtonText: \"Отмена\",");
file.WriteLine("            notificationIcon: \"gliph-tool.png\",");
file.WriteLine("            statisticsLabel: \"bsod\",");
file.WriteLine("            problemUrl: \"http://internet-start.net/?q=BSOD%20%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D0%B0%20\" + errCode + \"&utm_source=notifier&utm_medium=notification&utm_campaign=bsod&utm_content=\" + errCode,");
file.WriteLine("            color: \"#8d1f1f\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var lang = _ref.lang;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"retention\",");
file.WriteLine("            timeoutDelay: !1,");
file.WriteLine("            maxCountOfDisplaying: 1,");
file.WriteLine("            title: \"Transfer your favorite bookmarks and settings to Opera browser\",");
file.WriteLine("            content: \"Use two browsers in parallel. This is convenient when you need to watch a movie on the Internet or go to a blocked site\",");
file.WriteLine("            actionButtonText: \"Transfer bookmarks to Opera\",");
file.WriteLine("            delayButtonText: \"Not now\",");
file.WriteLine("            notificationIcon: \"opera-import.png\",");
file.WriteLine("            statisticsLabel: \"opera import\"");
file.WriteLine("        }, dictionary[lang]);");
file.WriteLine("    };");
file.WriteLine("    var dictionary = {");
file.WriteLine("        ru: {");
file.WriteLine("            title: \"Перенесите свои любимые закладки и настройки в браузер Opera\",");
file.WriteLine("            content: \"Комфортно используйте сразу два браузера. Это полезно, когда нужно запустить фильм в интернете или зайти на заблокированный сайт\",");
file.WriteLine("            actionButtonText: \"Перенести закладки в Opera\",");
file.WriteLine("            delayButtonText: \"Не сейчас\"");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var lang = _ref.lang;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"retention\",");
file.WriteLine("            timeoutDelay: !1,");
file.WriteLine("            maxCountOfDisplaying: 1,");
file.WriteLine("            title: \"Oh sorry… but it seems you have not opened your Opera browser for a long time. How so?\",");
file.WriteLine("            content: \"Typically, Opera users love their browser for thoughtful features, such as the built-in ad blocker and instant messengers. Are you interesting to know what other Opera features are so fond of?\",");
file.WriteLine("            actionButtonText: \"Learn, what Opera is loved for\",");
file.WriteLine("            delayButtonText: \"Not now\",");
file.WriteLine("            notificationIcon: \"opera.png\",");
file.WriteLine("            statisticsLabel: \"opera unused\"");
file.WriteLine("        }, dictionary[lang]);");
file.WriteLine("    };");
file.WriteLine("    var dictionary = {");
file.WriteLine("        ru: {");
file.WriteLine("            title: \"Ох простите… но кажется вы уже давно не открывали свой браузер Опера. Как же так?\",");
file.WriteLine("            content: \"Обычно пользователи Opera любят свой браузер за продуманные функции, например за встроенный блокировщик рекламы и мессенджеры. Интересно узнать, за какие еще функции Opera так любят?\",");
file.WriteLine("            actionButtonText: \"Узнать, за что любят Opera\",");
file.WriteLine("            delayButtonText: \"Не сейчас\"");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var lang = _ref.lang;");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"retention\",");
file.WriteLine("            timeoutDelay: !1,");
file.WriteLine("            maxCountOfDisplaying: 1,");
file.WriteLine("            title: \"Watch YouTube videos in a separate window on top of other browser tabs - it’s very convenient\",");
file.WriteLine("            content: \"The Opera browser function allows you to watch any video in a docked window while surfing the web, playing and chatting with friends on the Internet\",");
file.WriteLine("            actionButtonText: \"Try in Opera browser\",");
file.WriteLine("            delayButtonText: \"Not now\",");
file.WriteLine("            notificationIcon: \"opera-youtube.png\",");
file.WriteLine("            statisticsLabel: \"opera youtube\"");
file.WriteLine("        }, dictionary[lang]);");
file.WriteLine("    };");
file.WriteLine("    var dictionary = {");
file.WriteLine("        ru: {");
file.WriteLine("            title: \"Смотрите видео с YouTube в отдельном окне поверх остальных вкладок браузера — это очень удобно\",");
file.WriteLine("            content: \"Функция браузера Opera позволяет смотреть любые видео в закрепленном окне и при этом серфить в сети, играть и общаться с друзьями в Интернете\",");
file.WriteLine("            actionButtonText: \"Попробовать в браузере Opera\",");
file.WriteLine("            delayButtonText: \"Не сейчас\"");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        return {");
file.WriteLine("            notificationId: \"9a96e730-d992-edf3-029f-8bac1f7ac6c4\",");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            title: \"Недостаточно свободного места!\",");
file.WriteLine("            content: \"На диске \" + _ref.fulldrives + \" мало свободного места! Это может привести к невозможности сохранения и потере данных!\",");
file.WriteLine("            actionButtonText: \"Посмотреть решение\",");
file.WriteLine("            unsubscribeButtonText: \"Отмена\",");
file.WriteLine("            notificationIcon: \"gliph-harddrive.png\",");
file.WriteLine("            statisticsLabel: \"hdd space\",");
file.WriteLine("            problemUrl: \"http://drp.su/ru/help/hdd-space.html\",");
file.WriteLine("            color: \"#8d1f1f\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var softName = _ref.softName, soft = {");
file.WriteLine("            \"Yandex.Browser (Russian)\": {");
file.WriteLine("                title: \"Рекомендуем установить Яндекс.Браузер!\",");
file.WriteLine("                content: \"Быстрый браузер с технологией активной защиты Protect предупредит об опасных сайтах.\"");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        return {");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            title: soft[softName].title,");
file.WriteLine("            content: soft[softName].content,");
file.WriteLine("            actionButtonText: \"Установить\",");
file.WriteLine("            unsubscribeButtonText: \"Отказаться\",");
file.WriteLine("            notificationIcon: \"drp.png\",");
file.WriteLine("            statisticsLabel: \"Partner Soft \" + softName,");
file.WriteLine("            color: \"#00733c\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var softName = _ref.softName, soft = {");
file.WriteLine("            \"WinRAR (Russian)\": {");
file.WriteLine("                title: \"Рекомендуем установить архиватор WinRAR!\",");
file.WriteLine("                content: \"WinRAR открывает любые архивы, позволяет экономить место на жестком диске!\"");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        return {");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            title: soft[softName].title,");
file.WriteLine("            content: soft[softName].content,");
file.WriteLine("            actionButtonText: \"Установить\",");
file.WriteLine("            unsubscribeButtonText: \"Отказаться\",");
file.WriteLine("            notificationIcon: \"drp.png\",");
file.WriteLine("            statisticsLabel: \"Partner Soft \" + softName,");
file.WriteLine("            color: \"#A5569B\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        return {");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            title: \"Рекомендуем установить Яндекс.Браузер!\",");
file.WriteLine("            content: \"Быстрый браузер с технологией автивной защиты Protect предупредит об опасных сайтах.\",");
file.WriteLine("            actionButtonText: \"Установить\",");
file.WriteLine("            unsubscribeButtonText: \"Отказаться\",");
file.WriteLine("            notificationIcon: \"drp.png\",");
file.WriteLine("            statisticsLabel: \"Partner Soft \" + _ref.softName,");
file.WriteLine("            color: \"#00733c\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        return {");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            title: \"Возможен отказ работы жесткого диска!\",");
file.WriteLine("            content: \"По данным Windows, возможны проблемы в работе жесткого диска \" + _ref.disks + \": снижение скорости, потеря данных, отказ работы HDD.\",");
file.WriteLine("            actionButtonText: \"Посмотреть рекомендации\",");
file.WriteLine("            unsubscribeButtonText: \"Отмена\",");
file.WriteLine("            notificationIcon: \"gliph-harddrive.png\",");
file.WriteLine("            statisticsLabel: \"hdd smart\",");
file.WriteLine("            problemUrl: \"http://internet-start.net/?q=hdd%20smart%20%D0%BD%D0%B5%20Ok&utm_source=notifier&utm_medium=notification&utm_campaign=hdd&utm_content=smart\",");
file.WriteLine("            color: \"#8d1f1f\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        return {");
file.WriteLine("            notificationId: \"73e9433a-44f2-c6a4-a8a3-6a4899d5ecf7\",");
file.WriteLine("            maxCountOfDisplaying: 3,");
file.WriteLine("            title: \"Недостаточно свободного места!\",");
file.WriteLine("            content: \"На системном диске [\" + _ref.systemdrive + \"] недостаточно свободного места! Это может привести к нестабильной работе Windows!\",");
file.WriteLine("            actionButtonText: \"Посмотреть решение\",");
file.WriteLine("            unsubscribeButtonText: \"Отмена\",");
file.WriteLine("            notificationIcon: \"gliph-harddrive.png\",");
file.WriteLine("            statisticsLabel: \"hdd system space\",");
file.WriteLine("            problemUrl: \"http://drp.su/ru/help/hdd-system-space.html\",");
file.WriteLine("            color: \"#8d1f1f\"");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function(_ref2) {");
file.WriteLine("        var lang = _ref2.lang, experiment = _ref2.experiment, variant = \"bad_idea\" === experiment ? \"v1\" : \"think_again\" === experiment ? \"v2\" : \"\";");
file.WriteLine("        return Object.assign({");
file.WriteLine("            template: \"uninstall\",");
file.WriteLine("            statisticsLabel: \"uninstall \" + experiment,");
file.WriteLine("            showDelay: 0,");
file.WriteLine("            timeoutDelay: !1,");
file.WriteLine("            focusWindow: !0,");
file.WriteLine("            experiment: variant");
file.WriteLine("        }, getDictionary({");
file.WriteLine("            lang: lang,");
file.WriteLine("            experiment: variant");
file.WriteLine("        }));");
file.WriteLine("    };");
file.WriteLine("    var getDictionary = function(_ref) {");
file.WriteLine("        var lang = _ref.lang;");
file.WriteLine("        if (\"v1\" === _ref.experiment) switch (lang) {");
file.WriteLine("          case \"ru\":");
file.WriteLine("            return {");
file.WriteLine("                title: \"Почему удалять DriverPack Notifier — плохая идея?\",");
file.WriteLine("                message1: \"Уже сейчас он помогает обеспечить безопасность компьютера, выявляя загрузку вредных или бесполезных программ, помогая антивирусу\",");
file.WriteLine("                message2: \"Он мониторит температуру процессора, количество свободной оперативной памяти и состояние жесткого диска, а в случае необходимости, заранее предупредит о проблеме\",");
file.WriteLine("                message3: \"Он не нагружает компьютер — все вычисления происходят в облачных сервисах\",");
file.WriteLine("                message4: \"Совсем скоро он обновится до DriverPack Сloud, который сможет заблаговременно предупреждать о многих системных ошибках и поможет предотвращать будущие неисправности одним кликом\",");
file.WriteLine("                actionButtonText: \"Оставить защиту\",");
file.WriteLine("                unsubscribeButtonText: \"Удалить\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            return {");
file.WriteLine("                title: \"Why is DriverPack Notifier removal a bad idea?\",");
file.WriteLine("                message1: \"It already helps provide safety for your computer by detecting that some harmful or useless programs were downloaded, and thus, assisting to antivirus\",");
file.WriteLine("                message2: \"It monitors the temperature of processor, free volume of the main memory, and the state of the hard disk, and if it's necessary warns about an issue in advance\",");
file.WriteLine("                message3: \"It doesn't overload the computer as all calculations take place in the Cloud Services\",");
file.WriteLine("                message4: \"Quite soon it will be updated to DriverPack Сloud version which will be able to warn about many system errors beforehand, and will help prevent the future malfunctions by one click\",");
file.WriteLine("                actionButtonText: \"Keep Protection\",");
file.WriteLine("                unsubscribeButtonText: \"Uninstall\"");
file.WriteLine("            };");
file.WriteLine("        } else switch (lang) {");
file.WriteLine("          case \"ru\":");
file.WriteLine("            return {");
file.WriteLine("                title: \"Подумай еще раз\",");
file.WriteLine("                message1: \"Может быть, ты не оценил Notifier в полной мере, но поверь — он скоро тебе пригодиться. Именно Notifier обеспечвает безопасность компьютера, выявляя загрузку вредных и бесполезных программ — он помогает твоему антивирусу\",");
file.WriteLine("                message2: \"\",");
file.WriteLine("                message3: \"О производительности компьютера и свободном месте тоже можно не беспокоиться, потому что все вычисления происходят в облаке, не нагружая твой компьютер\",");
file.WriteLine("                message4: \"Кроме того, Notifier совсем скоро обновится до нового DriverPack Cloud, который будет еще эффективнее мониторить состояние компьютера и поможет оперативно предотвращать будущие неисправности\",");
file.WriteLine("                actionButtonText: \"Оставить защиту\",");
file.WriteLine("                unsubscribeButtonText: \"Удалить\"");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            return {");
file.WriteLine("                title: \"Think again!\",");
file.WriteLine("                message1: \"Maybe, you have underestimated Notifier in full but trust us it you will need it soon. This is the Notifier who provides computer security by detecting that some harmful or useless programs were downloaded, and thus, it helps your antivirus.\",");
file.WriteLine("                message2: \"\",");
file.WriteLine("                message3: \"Also, you can stop worrying about your computer efficiency and about the free memory left because all calculations take place in the Cloud, and thus, they don't overload your computer\",");
file.WriteLine("                message4: \"In addition, quite soon Notifier will be updated to the new DriverPack Cloud which will monitor the state of your computer even more effectively, and will help promptly prevent future malfunctions\",");
file.WriteLine("                actionButtonText: \"Keep Protection\",");
file.WriteLine("                unsubscribeButtonText: \"Uninstall\"");
file.WriteLine("            };");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        notificationId: \"4496667b-1460-d6df-2f0b-d6618d024e16\",");
file.WriteLine("        maxCountOfDisplaying: 3,");
file.WriteLine("        title: \"Безопасность компьютера под угрозой!\",");
file.WriteLine("        content: \"Пожалуйста, включите антивирус 360 Total Security!\\n\",");
file.WriteLine("        actionButtonText: \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n\",");
file.WriteLine("        unsubscribeButtonText: \"Отмена\",");
file.WriteLine("        notificationIcon: \"gliph-security.png\",");
file.WriteLine("        statisticsLabel: \"antivirus notification 3\",");
file.WriteLine("        color: \"red\"");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        maxCountOfDisplaying: 3,");
file.WriteLine("        title: \"Срок службы батареи ноутбука подходит к концу!\",");
file.WriteLine("        content: \"Ресурс службы батареи израсходован более чем на 70%, время работы от батареи будет уменьшаться!\\n\",");
file.WriteLine("        actionButtonText: \"Посмотреть рекомендации\\n\",");
file.WriteLine("        unsubscribeButtonText: \"Отмена\",");
file.WriteLine("        notificationIcon: \"gliph-battery-failure.png\",");
file.WriteLine("        statisticsLabel: \"battery bad condition\",");
file.WriteLine("        problemUrl: \"http://internet-start.net/?q=%D0%98%D0%B7%D0%BD%D0%BE%D1%81%20%D0%B1%D0%B0%D1%82%D0%B0%D1%80%D0%B5%D0%B8%20%D0%BD%D0%BE%D1%83%D1%82%D0%B1%D1%83%D0%BA%D0%B0&utm_source=notifier&utm_medium=notification&utm_campaign=battery&utm_content=poor_condition\",");
file.WriteLine("        color: \"#8d1f1f\"");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        template: \"cloud-update\",");
file.WriteLine("        timeoutDelay: 18e5,");
file.WriteLine("        notificationIcon: \"drp.png\",");
file.WriteLine("        title: \"Вышло важное обновление для программы Notifier – DriverPack Cloud.\",");
file.WriteLine("        content: \"Он позволяет быстро обновлять драйверы и удалять вредоносные программы.\",");
file.WriteLine("        actionButtonText: \"Обновить\",");
file.WriteLine("        delayButtonText: \"Напомнить позднее\",");
file.WriteLine("        statisticsLabel: \"cloud-update\",");
file.WriteLine("        color: \"#6534ac\"");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        maxCountOfDisplaying: 1,");
file.WriteLine("        template: \"standard\",");
file.WriteLine("        timeoutDelay: 18e5,");
file.WriteLine("        title: \"Роскомнадзор собирается заблокировать VPN и анонимайзеры.\",");
file.WriteLine("        content: \"Рекомендуется заранее скачать браузер, в котором встроен подобный режим обхода блокировок. Например, в браузере Opera есть встроенный VPN, который можно включить в настройках\\n\",");
file.WriteLine("        actionButtonText: \"Установить Opera\",");
file.WriteLine("        unsubscribeButtonText: \"Отказаться\",");
file.WriteLine("        notificationIcon: \"vpn_icon.png\",");
file.WriteLine("        statisticsLabel: \"notification opera-vpn ukraine\",");
file.WriteLine("        color: \"#394559\"");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        template: \"retention\",");
file.WriteLine("        timeoutDelay: !1,");
file.WriteLine("        notificationIcon: \"retention.png\",");
file.WriteLine("        title: \"Ваш компьютер может работать быстрее — доступны новые драйверы.\",");
file.WriteLine("        content: \"Драйверы на вашем компьютере обновлялись более 30 дней назад.\",");
file.WriteLine("        actionButtonText: \"Обновить драйверы\",");
file.WriteLine("        delayButtonText: \"Не сейчас\",");
file.WriteLine("        statisticsLabel: \"retention\"");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        title: \"DriverPack Cloud\",");
file.WriteLine("        content: \"Для продолжения команды будет выполнен запрос прав администратора\\n\",");
file.WriteLine("        actionButtonText: \"Ок\",");
file.WriteLine("        unsubscribeButtonText: \"Отмена\",");
file.WriteLine("        timeoutDelay: !1,");
file.WriteLine("        focusWindow: !0");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    var noop = function() {};");
file.WriteLine("    window.console = window.console || {};");
file.WriteLine("    if (!window.console.log) window.console.log = window.echo || noop;");
file.WriteLine("    if (!window.console.warn) window.console.warn = window.echo || noop;");
file.WriteLine("    if (!window.console.error) window.console.error = window.echo || noop;");
file.WriteLine("}, , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    if (window.regeneratorRuntime && !window.regeneratorRuntime.AsyncIterator) window.regeneratorRuntime = undefined;");
file.WriteLine("    __webpack_require__(129);");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _wmi = __webpack_require__(3), Registry = function() {");
file.WriteLine("        function Registry(is64) {");
file.WriteLine("            _classCallCheck(this, Registry);");
file.WriteLine("            this.is64 = is64;");
file.WriteLine("            this.HKCR = 2147483648;");
file.WriteLine("            this.HKCU = 2147483649;");
file.WriteLine("            this.HKLM = 2147483650;");
file.WriteLine("            this.HKUS = 2147483651;");
file.WriteLine("            this.HKCC = 2147483653;");
file.WriteLine("            this.REG_SZ = 1;");
file.WriteLine("            this.REG_EXPAND_SZ = 2;");
file.WriteLine("            this.REG_BINARY = 3;");
file.WriteLine("            this.REG_DWORD = 4;");
file.WriteLine("            this.REG_MULTI_SZ = 7;");
file.WriteLine("            this.connect(is64);");
file.WriteLine("        }");
file.WriteLine("        Registry.prototype.connect = function() {");
file.WriteLine("            var context = this.is64 ? {");
file.WriteLine("                __ProviderArchitecture: 64,");
file.WriteLine("                __RequiredArchitecture: !0");
file.WriteLine("            } : null;");
file.WriteLine("            this.stdregprov = (0, _wmi.ConnectServer)(\"root\\\\default\", context).Get(\"StdRegProv\");");
file.WriteLine("        };");
file.WriteLine("        Registry.prototype._exec = function(methodName, hkey, key, valueName) {");
file.WriteLine("            var inParameters = this.stdregprov.Methods_.Item(methodName).InParameters.SpawnInstance_();");
file.WriteLine("            inParameters.hDefKey = hkey;");
file.WriteLine("            inParameters.sSubKeyName = key;");
file.WriteLine("            if (valueName) inParameters.sValueName = valueName;");
file.WriteLine("            return this.stdregprov.ExecMethod_(methodName, inParameters);");
file.WriteLine("        };");
file.WriteLine("        Registry.prototype.exec = function() {");
file.WriteLine("            try {");
file.WriteLine("                return this._exec.apply(this, arguments);");
file.WriteLine("            } catch (err) {");
file.WriteLine("                this.connect();");
file.WriteLine("                return this._exec.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Registry.prototype.EnumKey = function(hkey, key) {");
file.WriteLine("            var outParameters = this.exec(\"EnumKey\", hkey, key), names = [];");
file.WriteLine("            if (null != outParameters.sNames && outParameters.sNames.toArray) names = outParameters.sNames.toArray();");
file.WriteLine("            return names;");
file.WriteLine("        };");
file.WriteLine("        Registry.prototype.EnumValues = function(hkey, key) {");
file.WriteLine("            var outParameters = this.exec(\"EnumValues\", hkey, key), valueNames = [];");
file.WriteLine("            if (null != outParameters.sNames && outParameters.sNames.toArray) valueNames = outParameters.sNames.toArray();");
file.WriteLine("            var valueTypes = [];");
file.WriteLine("            if (null != outParameters.sNames && outParameters.Types.toArray) valueTypes = outParameters.Types.toArray();");
file.WriteLine("            return {");
file.WriteLine("                Names: valueNames,");
file.WriteLine("                Types: valueTypes");
file.WriteLine("            };");
file.WriteLine("        };");
file.WriteLine("        Registry.prototype.GetStringValue = function(hkey, key, name) {");
file.WriteLine("            return this.exec(\"GetStringValue\", hkey, key, name).sValue;");
file.WriteLine("        };");
file.WriteLine("        Registry.prototype.GetExpandedStringValue = function(hkey, key, name) {");
file.WriteLine("            return this.exec(\"GetExpandedStringValue\", hkey, key, name).sValue;");
file.WriteLine("        };");
file.WriteLine("        Registry.prototype.GetDWORDValue = function(hkey, key, name) {");
file.WriteLine("            return this.exec(\"GetDWORDValue\", hkey, key, name).uValue;");
file.WriteLine("        };");
file.WriteLine("        return Registry;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Registry;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _specialFolders = __webpack_require__(14), _shell = __webpack_require__(11), _fso = __webpack_require__(7), _localFiles = __webpack_require__(18), _os = __webpack_require__(15), PowerShell = function() {");
file.WriteLine("        function PowerShell() {");
file.WriteLine("            _classCallCheck(this, PowerShell);");
file.WriteLine("            Object.assign(this, {");
file.WriteLine("                running: !1,");
file.WriteLine("                available: _os.OSVersion >= 6");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("        PowerShell.prototype.getBaseName = function() {");
file.WriteLine("            return (0, _localFiles.ensurePath)(_specialFolders.AppFolder + \"\\\\temp\") + \"\\\\ps.\" + Date.now().toString(36) + \".\" + Math.random().toString(36).slice(2, 7);");
file.WriteLine("        };");
file.WriteLine("        PowerShell.prototype.init = function() {");
file.WriteLine("            if (this.available && !this.running) {");
file.WriteLine("                var basename = this.getBaseName(), files = this.files = {");
file.WriteLine("                    queue: basename + \".cmd.txt\",");
file.WriteLine("                    stdout: basename + \".stdout.log\",");
file.WriteLine("                    stderr: basename + \".stderr.log\"");
file.WriteLine("                };");
file.WriteLine("                _fso.fso.CreateTextFile(files.queue, !0, !0).Close();");
file.WriteLine("                var cmd = \"Get-Content '\" + files.queue + \"' -Wait | Invoke-Expression\";");
file.WriteLine("                try {");
file.WriteLine("                    _shell.WshShell.Run('cmd /C powershell -NonInteractive -NoLogo -NoProfile -ExecutionPolicy Bypass \"' + cmd + '\" > \"' + files.stdout + '\" 2> \"' + files.stderr + '\"', 0, !1);");
file.WriteLine("                    this.running = !0;");
file.WriteLine("                } catch (err) {");
file.WriteLine("                    this.available = !1;");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("            return this;");
file.WriteLine("        };");
file.WriteLine("        PowerShell.prototype.run = function(text) {");
file.WriteLine("            if (this.available) {");
file.WriteLine("                var fileName = this.getBaseName() + \".ps1\", file = _fso.fso.CreateTextFile(fileName, !0, !0);");
file.WriteLine("                file.Write(text);");
file.WriteLine("                file.Close();");
file.WriteLine("                this.send('. \"' + fileName + '\"');");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        PowerShell.prototype.send = function(batch) {");
file.WriteLine("            if (this.available) {");
file.WriteLine("                if (!this.running) this.init();");
file.WriteLine("                batch = [].concat(batch);");
file.WriteLine("                try {");
file.WriteLine("                    var ts = _fso.fso.GetFile(this.files.queue).OpenAsTextStream(8, -1);");
file.WriteLine("                    batch.forEach(function(cmd) {");
file.WriteLine("                        ts.WriteLine(cmd);");
file.WriteLine("                    });");
file.WriteLine("                    ts.Close();");
file.WriteLine("                } catch (err) {}");
file.WriteLine("            }");
file.WriteLine("            return this;");
file.WriteLine("        };");
file.WriteLine("        PowerShell.prototype.terminate = function() {");
file.WriteLine("            if (this.running) {");
file.WriteLine("                this.send(\"exit\");");
file.WriteLine("                this.running = !1;");
file.WriteLine("            }");
file.WriteLine("            return this;");
file.WriteLine("        };");
file.WriteLine("        PowerShell.prototype.read = function(chanel) {");
file.WriteLine("            if (this.available) {");
file.WriteLine("                var file = _fso.fso.OpenTextFile(this.files[chanel], 1, !1, -1), res = file.ReadAll();");
file.WriteLine("                file.Close();");
file.WriteLine("                return res;");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        PowerShell.prototype.stdout = function() {");
file.WriteLine("            return this.read(\"stdout\");");
file.WriteLine("        };");
file.WriteLine("        PowerShell.prototype.stderr = function() {");
file.WriteLine("            return this.read(\"stderr\");");
file.WriteLine("        };");
file.WriteLine("        return PowerShell;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = new PowerShell();");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _RegistryStore = __webpack_require__(138), _RegistryStore2 = _interopRequireDefault(_RegistryStore), _FileStore = __webpack_require__(136), _FileStore2 = _interopRequireDefault(_FileStore), _logs = __webpack_require__(16), log = (0, ");
file.WriteLine("    _logs.getLogger)(\"core:statistics:clientIdStorage\");");
file.WriteLine("    exports[\"default\"] = {");
file.WriteLine("        stores: {");
file.WriteLine("            File: new _FileStore2[\"default\"](),");
file.WriteLine("            HKCU: new _RegistryStore2[\"default\"](\"HKCU\\\\SOFTWARE\\\\drpsu\\\\\"),");
file.WriteLine("            HKLM: new _RegistryStore2[\"default\"](\"HKLM\\\\SOFTWARE\\\\drpsu\\\\\")");
file.WriteLine("        },");
file.WriteLine("        get: function(key, stores) {");
file.WriteLine("            var _this = this, res = void 0;");
file.WriteLine("            stores.forEach(function(name) {");
file.WriteLine("                if (!res) {");
file.WriteLine("                    res = _this.stores[name].get(key);");
file.WriteLine("                    if (res) log.debug(\"got \" + key + \" from \" + name + \": \" + res, {");
file.WriteLine("                        key: key,");
file.WriteLine("                        store: name,");
file.WriteLine("                        value: res");
file.WriteLine("                    }, \"get\");");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("            if (!res) {");
file.WriteLine("                res = this.generate();");
file.WriteLine("                log.debug(\"generated \" + key + \": \" + res, {");
file.WriteLine("                    key: key,");
file.WriteLine("                    value: res");
file.WriteLine("                }, \"generate\");");
file.WriteLine("            }");
file.WriteLine("            return res;");
file.WriteLine("        },");
file.WriteLine("        set: function(key, value, stores) {");
file.WriteLine("            var _this2 = this;");
file.WriteLine("            stores.forEach(function(name) {");
file.WriteLine("                _this2.stores[name].set(key, value);");
file.WriteLine("            });");
file.WriteLine("        },");
file.WriteLine("        init: function() {");
file.WriteLine("            var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"clientId\", value = arguments[1], stores = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [ \"File\", \"HKCU\", \"HKLM\" ];");
file.WriteLine("            if (value) {");
file.WriteLine("                log.debug(\"got \" + key + \" from init(): \" + value, {");
file.WriteLine("                    key: key,");
file.WriteLine("                    value: value");
file.WriteLine("                }, \"init\");");
file.WriteLine("                this[key] = value;");
file.WriteLine("            } else if (this[key]) return; else this[key] = this.get(key, stores);");
file.WriteLine("            this.set(key, this[key], stores);");
file.WriteLine("            return this[key];");
file.WriteLine("        },");
file.WriteLine("        generate: function() {");
file.WriteLine("            var d = new Date().getTime();");
file.WriteLine("            return \"xxxxxxxxx.xxxxxxxxxx\".replace(/[xy]/g, function(c) {");
file.WriteLine("                var r = (d + 10 * Math.random()) % 10 | 0;");
file.WriteLine("                return (\"x\" === c ? r : 7 & r | 8).toString();");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, , , , , , , , , , , , function(module, exports) {");
file.WriteLine("    function EventEmitter() {");
file.WriteLine("        this._events = this._events || {};");
file.WriteLine("        this._maxListeners = this._maxListeners || undefined;");
file.WriteLine("    }");
file.WriteLine("    function isFunction(arg) {");
file.WriteLine("        return \"function\" == typeof arg;");
file.WriteLine("    }");
file.WriteLine("    function isNumber(arg) {");
file.WriteLine("        return \"number\" == typeof arg;");
file.WriteLine("    }");
file.WriteLine("    function isObject(arg) {");
file.WriteLine("        return \"object\" == typeof arg && null !== arg;");
file.WriteLine("    }");
file.WriteLine("    function isUndefined(arg) {");
file.WriteLine("        return void 0 === arg;");
file.WriteLine("    }");
file.WriteLine("    module.exports = EventEmitter;");
file.WriteLine("    EventEmitter.EventEmitter = EventEmitter;");
file.WriteLine("    EventEmitter.prototype._events = undefined;");
file.WriteLine("    EventEmitter.prototype._maxListeners = undefined;");
file.WriteLine("    EventEmitter.defaultMaxListeners = 10;");
file.WriteLine("    EventEmitter.prototype.setMaxListeners = function(n) {");
file.WriteLine("        if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError(\"n must be a positive number\");");
file.WriteLine("        this._maxListeners = n;");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.prototype.emit = function(type) {");
file.WriteLine("        var er, handler, len, args, i, listeners;");
file.WriteLine("        if (!this._events) this._events = {};");
file.WriteLine("        if (\"error\" === type) if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {");
file.WriteLine("            er = arguments[1];");
file.WriteLine("            if (er instanceof Error) throw er; else {");
file.WriteLine("                var err = new Error('Uncaught, unspecified \"error\" event. (' + er + \")\");");
file.WriteLine("                err.context = er;");
file.WriteLine("                throw err;");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("        handler = this._events[type];");
file.WriteLine("        if (isUndefined(handler)) return !1;");
file.WriteLine("        if (isFunction(handler)) switch (arguments.length) {");
file.WriteLine("          case 1:");
file.WriteLine("            handler.call(this);");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case 2:");
file.WriteLine("            handler.call(this, arguments[1]);");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case 3:");
file.WriteLine("            handler.call(this, arguments[1], arguments[2]);");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            args = Array.prototype.slice.call(arguments, 1);");
file.WriteLine("            handler.apply(this, args);");
file.WriteLine("        } else if (isObject(handler)) {");
file.WriteLine("            args = Array.prototype.slice.call(arguments, 1);");
file.WriteLine("            listeners = handler.slice();");
file.WriteLine("            len = listeners.length;");
file.WriteLine("            for (i = 0; i < len; i++) listeners[i].apply(this, args);");
file.WriteLine("        }");
file.WriteLine("        return !0;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.prototype.addListener = function(type, listener) {");
file.WriteLine("        var m;");
file.WriteLine("        if (!isFunction(listener)) throw TypeError(\"listener must be a function\");");
file.WriteLine("        if (!this._events) this._events = {};");
file.WriteLine("        if (this._events.newListener) this.emit(\"newListener\", type, isFunction(listener.listener) ? listener.listener : listener);");
file.WriteLine("        if (!this._events[type]) this._events[type] = listener; else if (isObject(this._events[type])) this._events[type].push(listener); else this._events[type] = [ this._events[type], listener ];");
file.WriteLine("        if (isObject(this._events[type]) && !this._events[type].warned) {");
file.WriteLine("            if (!isUndefined(this._maxListeners)) m = this._maxListeners; else m = EventEmitter.defaultMaxListeners;");
file.WriteLine("            if (m && m > 0 && this._events[type].length > m) {");
file.WriteLine("                this._events[type].warned = !0;");
file.WriteLine("                console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);");
file.WriteLine("                if (\"function\" == typeof console.trace) console.trace();");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.prototype.on = EventEmitter.prototype.addListener;");
file.WriteLine("    EventEmitter.prototype.once = function(type, listener) {");
file.WriteLine("        function g() {");
file.WriteLine("            this.removeListener(type, g);");
file.WriteLine("            if (!fired) {");
file.WriteLine("                fired = !0;");
file.WriteLine("                listener.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("        if (!isFunction(listener)) throw TypeError(\"listener must be a function\");");
file.WriteLine("        var fired = !1;");
file.WriteLine("        g.listener = listener;");
file.WriteLine("        this.on(type, g);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.prototype.removeListener = function(type, listener) {");
file.WriteLine("        var list, position, length, i;");
file.WriteLine("        if (!isFunction(listener)) throw TypeError(\"listener must be a function\");");
file.WriteLine("        if (!this._events || !this._events[type]) return this;");
file.WriteLine("        list = this._events[type];");
file.WriteLine("        length = list.length;");
file.WriteLine("        position = -1;");
file.WriteLine("        if (list === listener || isFunction(list.listener) && list.listener === listener) {");
file.WriteLine("            delete this._events[type];");
file.WriteLine("            if (this._events.removeListener) this.emit(\"removeListener\", type, listener);");
file.WriteLine("        } else if (isObject(list)) {");
file.WriteLine("            for (i = length; i-- > 0; ) if (list[i] === listener || list[i].listener && list[i].listener === listener) {");
file.WriteLine("                position = i;");
file.WriteLine("                break;");
file.WriteLine("            }");
file.WriteLine("            if (position < 0) return this;");
file.WriteLine("            if (1 === list.length) {");
file.WriteLine("                list.length = 0;");
file.WriteLine("                delete this._events[type];");
file.WriteLine("            } else list.splice(position, 1);");
file.WriteLine("            if (this._events.removeListener) this.emit(\"removeListener\", type, listener);");
file.WriteLine("        }");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.prototype.removeAllListeners = function(type) {");
file.WriteLine("        var key, listeners;");
file.WriteLine("        if (!this._events) return this;");
file.WriteLine("        if (!this._events.removeListener) {");
file.WriteLine("            if (0 === arguments.length) this._events = {}; else if (this._events[type]) delete this._events[type];");
file.WriteLine("            return this;");
file.WriteLine("        }");
file.WriteLine("        if (0 === arguments.length) {");
file.WriteLine("            for (key in this._events) if (\"removeListener\" !== key) this.removeAllListeners(key);");
file.WriteLine("            this.removeAllListeners(\"removeListener\");");
file.WriteLine("            this._events = {};");
file.WriteLine("            return this;");
file.WriteLine("        }");
file.WriteLine("        listeners = this._events[type];");
file.WriteLine("        if (isFunction(listeners)) this.removeListener(type, listeners); else if (listeners) for (;listeners.length; ) this.removeListener(type, listeners[listeners.length - 1]);");
file.WriteLine("        delete this._events[type];");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.prototype.listeners = function(type) {");
file.WriteLine("        var ret;");
file.WriteLine("        if (!this._events || !this._events[type]) ret = []; else if (isFunction(this._events[type])) ret = [ this._events[type] ]; else ret = this._events[type].slice();");
file.WriteLine("        return ret;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.prototype.listenerCount = function(type) {");
file.WriteLine("        if (this._events) {");
file.WriteLine("            var evlistener = this._events[type];");
file.WriteLine("            if (isFunction(evlistener)) return 1; else if (evlistener) return evlistener.length;");
file.WriteLine("        }");
file.WriteLine("        return 0;");
file.WriteLine("    };");
file.WriteLine("    EventEmitter.listenerCount = function(emitter, type) {");
file.WriteLine("        return emitter.listenerCount(type);");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function getNative(object, key) {");
file.WriteLine("        var value = null == object ? undefined : object[key];");
file.WriteLine("        return isNative(value) ? value : undefined;");
file.WriteLine("    }");
file.WriteLine("    var isNative = __webpack_require__(456);");
file.WriteLine("    module.exports = getNative;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    (function(global) {");
file.WriteLine("        !function(global) {");
file.WriteLine("            \"use strict\";");
file.WriteLine("            function wrap(innerFn, outerFn, self, tryLocsList) {");
file.WriteLine("                var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);");
file.WriteLine("                generator._invoke = makeInvokeMethod(innerFn, self, context);");
file.WriteLine("                return generator;");
file.WriteLine("            }");
file.WriteLine("            function tryCatch(fn, obj, arg) {");
file.WriteLine("                try {");
file.WriteLine("                    return {");
file.WriteLine("                        type: \"normal\",");
file.WriteLine("                        arg: fn.call(obj, arg)");
file.WriteLine("                    };");
file.WriteLine("                } catch (err) {");
file.WriteLine("                    return {");
file.WriteLine("                        type: \"throw\",");
file.WriteLine("                        arg: err");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("            function Generator() {}");
file.WriteLine("            function GeneratorFunction() {}");
file.WriteLine("            function GeneratorFunctionPrototype() {}");
file.WriteLine("            function defineIteratorMethods(prototype) {");
file.WriteLine("                [ \"next\", \"throw\", \"return\" ].forEach(function(method) {");
file.WriteLine("                    prototype[method] = function(arg) {");
file.WriteLine("                        return this._invoke(method, arg);");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("            }");
file.WriteLine("            function AsyncIterator(generator) {");
file.WriteLine("                function invoke(method, arg, resolve, reject) {");
file.WriteLine("                    var record = tryCatch(generator[method], generator, arg);");
file.WriteLine("                    if (\"throw\" === record.type) reject(record.arg); else {");
file.WriteLine("                        var result = record.arg, value = result.value;");
file.WriteLine("                        if (value && \"object\" == typeof value && hasOwn.call(value, \"__await\")) return Promise.resolve(value.__await).then(function(value) {");
file.WriteLine("                            invoke(\"next\", value, resolve, reject);");
file.WriteLine("                        }, function(err) {");
file.WriteLine("                            invoke(\"throw\", err, resolve, reject);");
file.WriteLine("                        }); else return Promise.resolve(value).then(function(unwrapped) {");
file.WriteLine("                            result.value = unwrapped;");
file.WriteLine("                            resolve(result);");
file.WriteLine("                        }, reject);");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                function enqueue(method, arg) {");
file.WriteLine("                    function callInvokeWithMethodAndArg() {");
file.WriteLine("                        return new Promise(function(resolve, reject) {");
file.WriteLine("                            invoke(method, arg, resolve, reject);");
file.WriteLine("                        });");
file.WriteLine("                    }");
file.WriteLine("                    return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();");
file.WriteLine("                }");
file.WriteLine("                if (\"object\" == typeof global.process && global.process.domain) invoke = global.process.domain.bind(invoke);");
file.WriteLine("                var previousPromise;");
file.WriteLine("                this._invoke = enqueue;");
file.WriteLine("            }");
file.WriteLine("            function makeInvokeMethod(innerFn, self, context) {");
file.WriteLine("                var state = GenStateSuspendedStart;");
file.WriteLine("                return function(method, arg) {");
file.WriteLine("                    if (state === GenStateExecuting) throw new Error(\"Generator is already running\");");
file.WriteLine("                    if (state === GenStateCompleted) {");
file.WriteLine("                        if (\"throw\" === method) throw arg;");
file.WriteLine("                        return doneResult();");
file.WriteLine("                    }");
file.WriteLine("                    context.method = method;");
file.WriteLine("                    context.arg = arg;");
file.WriteLine("                    for (;;) {");
file.WriteLine("                        var delegate = context.delegate;");
file.WriteLine("                        if (delegate) {");
file.WriteLine("                            var delegateResult = maybeInvokeDelegate(delegate, context);");
file.WriteLine("                            if (delegateResult) {");
file.WriteLine("                                if (delegateResult === ContinueSentinel) continue;");
file.WriteLine("                                return delegateResult;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                        if (\"next\" === context.method) context.sent = context._sent = context.arg; else if (\"throw\" === context.method) {");
file.WriteLine("                            if (state === GenStateSuspendedStart) {");
file.WriteLine("                                state = GenStateCompleted;");
file.WriteLine("                                throw context.arg;");
file.WriteLine("                            }");
file.WriteLine("                            context.dispatchException(context.arg);");
file.WriteLine("                        } else if (\"return\" === context.method) context.abrupt(\"return\", context.arg);");
file.WriteLine("                        state = GenStateExecuting;");
file.WriteLine("                        var record = tryCatch(innerFn, self, context);");
file.WriteLine("                        if (\"normal\" === record.type) {");
file.WriteLine("                            state = context.done ? GenStateCompleted : GenStateSuspendedYield;");
file.WriteLine("                            if (record.arg === ContinueSentinel) continue;");
file.WriteLine("                            return {");
file.WriteLine("                                value: record.arg,");
file.WriteLine("                                done: context.done");
file.WriteLine("                            };");
file.WriteLine("                        } else if (\"throw\" === record.type) {");
file.WriteLine("                            state = GenStateCompleted;");
file.WriteLine("                            context.method = \"throw\";");
file.WriteLine("                            context.arg = record.arg;");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                };");
file.WriteLine("            }");
file.WriteLine("            function maybeInvokeDelegate(delegate, context) {");
file.WriteLine("                var method = delegate.iterator[context.method];");
file.WriteLine("                if (method === undefined) {");
file.WriteLine("                    context.delegate = null;");
file.WriteLine("                    if (\"throw\" === context.method) {");
file.WriteLine("                        if (delegate.iterator[\"return\"]) {");
file.WriteLine("                            context.method = \"return\";");
file.WriteLine("                            context.arg = undefined;");
file.WriteLine("                            maybeInvokeDelegate(delegate, context);");
file.WriteLine("                            if (\"throw\" === context.method) return ContinueSentinel;");
file.WriteLine("                        }");
file.WriteLine("                        context.method = \"throw\";");
file.WriteLine("                        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");");
file.WriteLine("                    }");
file.WriteLine("                    return ContinueSentinel;");
file.WriteLine("                }");
file.WriteLine("                var record = tryCatch(method, delegate.iterator, context.arg);");
file.WriteLine("                if (\"throw\" === record.type) {");
file.WriteLine("                    context.method = \"throw\";");
file.WriteLine("                    context.arg = record.arg;");
file.WriteLine("                    context.delegate = null;");
file.WriteLine("                    return ContinueSentinel;");
file.WriteLine("                }");
file.WriteLine("                var info = record.arg;");
file.WriteLine("                if (!info) {");
file.WriteLine("                    context.method = \"throw\";");
file.WriteLine("                    context.arg = new TypeError(\"iterator result is not an object\");");
file.WriteLine("                    context.delegate = null;");
file.WriteLine("                    return ContinueSentinel;");
file.WriteLine("                }");
file.WriteLine("                if (info.done) {");
file.WriteLine("                    context[delegate.resultName] = info.value;");
file.WriteLine("                    context.next = delegate.nextLoc;");
file.WriteLine("                    if (\"return\" !== context.method) {");
file.WriteLine("                        context.method = \"next\";");
file.WriteLine("                        context.arg = undefined;");
file.WriteLine("                    }");
file.WriteLine("                } else return info;");
file.WriteLine("                context.delegate = null;");
file.WriteLine("                return ContinueSentinel;");
file.WriteLine("            }");
file.WriteLine("            function pushTryEntry(locs) {");
file.WriteLine("                var entry = {");
file.WriteLine("                    tryLoc: locs[0]");
file.WriteLine("                };");
file.WriteLine("                if (1 in locs) entry.catchLoc = locs[1];");
file.WriteLine("                if (2 in locs) {");
file.WriteLine("                    entry.finallyLoc = locs[2];");
file.WriteLine("                    entry.afterLoc = locs[3];");
file.WriteLine("                }");
file.WriteLine("                this.tryEntries.push(entry);");
file.WriteLine("            }");
file.WriteLine("            function resetTryEntry(entry) {");
file.WriteLine("                var record = entry.completion || {};");
file.WriteLine("                record.type = \"normal\";");
file.WriteLine("                delete record.arg;");
file.WriteLine("                entry.completion = record;");
file.WriteLine("            }");
file.WriteLine("            function Context(tryLocsList) {");
file.WriteLine("                this.tryEntries = [ {");
file.WriteLine("                    tryLoc: \"root\"");
file.WriteLine("                } ];");
file.WriteLine("                tryLocsList.forEach(pushTryEntry, this);");
file.WriteLine("                this.reset(!0);");
file.WriteLine("            }");
file.WriteLine("            function values(iterable) {");
file.WriteLine("                if (iterable) {");
file.WriteLine("                    var iteratorMethod = iterable[iteratorSymbol];");
file.WriteLine("                    if (iteratorMethod) return iteratorMethod.call(iterable);");
file.WriteLine("                    if (\"function\" == typeof iterable.next) return iterable;");
file.WriteLine("                    if (!isNaN(iterable.length)) {");
file.WriteLine("                        var i = -1, next = function next() {");
file.WriteLine("                            for (;++i < iterable.length; ) if (hasOwn.call(iterable, i)) {");
file.WriteLine("                                next.value = iterable[i];");
file.WriteLine("                                next.done = !1;");
file.WriteLine("                                return next;");
file.WriteLine("                            }");
file.WriteLine("                            next.value = undefined;");
file.WriteLine("                            next.done = !0;");
file.WriteLine("                            return next;");
file.WriteLine("                        };");
file.WriteLine("                        return next.next = next;");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                return {");
file.WriteLine("                    next: doneResult");
file.WriteLine("                };");
file.WriteLine("            }");
file.WriteLine("            function doneResult() {");
file.WriteLine("                return {");
file.WriteLine("                    value: undefined,");
file.WriteLine("                    done: !0");
file.WriteLine("                };");
file.WriteLine("            }");
file.WriteLine("            var undefined, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\", inModule = \"object\" == typeof module, runtime = global.regeneratorRuntime;");
file.WriteLine("            if (!runtime) {");
file.WriteLine("                runtime = global.regeneratorRuntime = inModule ? module.exports : {};");
file.WriteLine("                runtime.wrap = wrap;");
file.WriteLine("                var GenStateSuspendedStart = \"suspendedStart\", GenStateSuspendedYield = \"suspendedYield\", GenStateExecuting = \"executing\", GenStateCompleted = \"completed\", ContinueSentinel = {}, IteratorPrototype = {};");
file.WriteLine("                IteratorPrototype[iteratorSymbol] = function() {");
file.WriteLine("                    return this;");
file.WriteLine("                };");
file.WriteLine("                var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));");
file.WriteLine("                if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) IteratorPrototype = NativeIteratorPrototype;");
file.WriteLine("                var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);");
file.WriteLine("                GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;");
file.WriteLine("                GeneratorFunctionPrototype.constructor = GeneratorFunction;");
file.WriteLine("                GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";");
file.WriteLine("                runtime.isGeneratorFunction = function(genFun) {");
file.WriteLine("                    var ctor = \"function\" == typeof genFun && genFun.constructor;");
file.WriteLine("                    return ctor ? ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name) : !1;");
file.WriteLine("                };");
file.WriteLine("                runtime.mark = function(genFun) {");
file.WriteLine("                    if (Object.setPrototypeOf) Object.setPrototypeOf(genFun, GeneratorFunctionPrototype); else {");
file.WriteLine("                        genFun.__proto__ = GeneratorFunctionPrototype;");
file.WriteLine("                        if (!(toStringTagSymbol in genFun)) genFun[toStringTagSymbol] = \"GeneratorFunction\";");
file.WriteLine("                    }");
file.WriteLine("                    genFun.prototype = Object.create(Gp);");
file.WriteLine("                    return genFun;");
file.WriteLine("                };");
file.WriteLine("                runtime.awrap = function(arg) {");
file.WriteLine("                    return {");
file.WriteLine("                        __await: arg");
file.WriteLine("                    };");
file.WriteLine("                };");
file.WriteLine("                defineIteratorMethods(AsyncIterator.prototype);");
file.WriteLine("                AsyncIterator.prototype[asyncIteratorSymbol] = function() {");
file.WriteLine("                    return this;");
file.WriteLine("                };");
file.WriteLine("                runtime.AsyncIterator = AsyncIterator;");
file.WriteLine("                runtime.async = function(innerFn, outerFn, self, tryLocsList) {");
file.WriteLine("                    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));");
file.WriteLine("                    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {");
file.WriteLine("                        return result.done ? result.value : iter.next();");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                defineIteratorMethods(Gp);");
file.WriteLine("                Gp[toStringTagSymbol] = \"Generator\";");
file.WriteLine("                Gp[iteratorSymbol] = function() {");
file.WriteLine("                    return this;");
file.WriteLine("                };");
file.WriteLine("                Gp.toString = function() {");
file.WriteLine("                    return \"[object Generator]\";");
file.WriteLine("                };");
file.WriteLine("                runtime.keys = function(object) {");
file.WriteLine("                    var keys = [];");
file.WriteLine("                    for (var key in object) keys.push(key);");
file.WriteLine("                    keys.reverse();");
file.WriteLine("                    return function next() {");
file.WriteLine("                        for (;keys.length; ) {");
file.WriteLine("                            var key = keys.pop();");
file.WriteLine("                            if (key in object) {");
file.WriteLine("                                next.value = key;");
file.WriteLine("                                next.done = !1;");
file.WriteLine("                                return next;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                        next.done = !0;");
file.WriteLine("                        return next;");
file.WriteLine("                    };");
file.WriteLine("                };");
file.WriteLine("                runtime.values = values;");
file.WriteLine("                Context.prototype = {");
file.WriteLine("                    constructor: Context,");
file.WriteLine("                    reset: function(skipTempReset) {");
file.WriteLine("                        this.prev = 0;");
file.WriteLine("                        this.next = 0;");
file.WriteLine("                        this.sent = this._sent = undefined;");
file.WriteLine("                        this.done = !1;");
file.WriteLine("                        this.delegate = null;");
file.WriteLine("                        this.method = \"next\";");
file.WriteLine("                        this.arg = undefined;");
file.WriteLine("                        this.tryEntries.forEach(resetTryEntry);");
file.WriteLine("                        if (!skipTempReset) for (var name in this) if (\"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1))) this[name] = undefined;");
file.WriteLine("                    },");
file.WriteLine("                    stop: function() {");
file.WriteLine("                        this.done = !0;");
file.WriteLine("                        var rootEntry = this.tryEntries[0], rootRecord = rootEntry.completion;");
file.WriteLine("                        if (\"throw\" === rootRecord.type) throw rootRecord.arg;");
file.WriteLine("                        return this.rval;");
file.WriteLine("                    },");
file.WriteLine("                    dispatchException: function(exception) {");
file.WriteLine("                        function handle(loc, caught) {");
file.WriteLine("                            record.type = \"throw\";");
file.WriteLine("                            record.arg = exception;");
file.WriteLine("                            context.next = loc;");
file.WriteLine("                            if (caught) {");
file.WriteLine("                                context.method = \"next\";");
file.WriteLine("                                context.arg = undefined;");
file.WriteLine("                            }");
file.WriteLine("                            return !!caught;");
file.WriteLine("                        }");
file.WriteLine("                        if (this.done) throw exception;");
file.WriteLine("                        for (var context = this, i = this.tryEntries.length - 1; i >= 0; --i) {");
file.WriteLine("                            var entry = this.tryEntries[i], record = entry.completion;");
file.WriteLine("                            if (\"root\" === entry.tryLoc) return handle(\"end\");");
file.WriteLine("                            if (entry.tryLoc <= this.prev) {");
file.WriteLine("                                var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");");
file.WriteLine("                                if (hasCatch && hasFinally) {");
file.WriteLine("                                    if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); else if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);");
file.WriteLine("                                } else if (hasCatch) {");
file.WriteLine("                                    if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);");
file.WriteLine("                                } else if (hasFinally) {");
file.WriteLine("                                    if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);");
file.WriteLine("                                } else throw new Error(\"try statement without catch or finally\");");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                    },");
file.WriteLine("                    abrupt: function(type, arg) {");
file.WriteLine("                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {");
file.WriteLine("                            var entry = this.tryEntries[i];");
file.WriteLine("                            if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {");
file.WriteLine("                                var finallyEntry = entry;");
file.WriteLine("                                break;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                        if (finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) finallyEntry = null;");
file.WriteLine("                        var record = finallyEntry ? finallyEntry.completion : {};");
file.WriteLine("                        record.type = type;");
file.WriteLine("                        record.arg = arg;");
file.WriteLine("                        if (finallyEntry) {");
file.WriteLine("                            this.method = \"next\";");
file.WriteLine("                            this.next = finallyEntry.finallyLoc;");
file.WriteLine("                            return ContinueSentinel;");
file.WriteLine("                        }");
file.WriteLine("                        return this.complete(record);");
file.WriteLine("                    },");
file.WriteLine("                    complete: function(record, afterLoc) {");
file.WriteLine("                        if (\"throw\" === record.type) throw record.arg;");
file.WriteLine("                        if (\"break\" === record.type || \"continue\" === record.type) this.next = record.arg; else if (\"return\" === record.type) {");
file.WriteLine("                            this.rval = this.arg = record.arg;");
file.WriteLine("                            this.method = \"return\";");
file.WriteLine("                            this.next = \"end\";");
file.WriteLine("                        } else if (\"normal\" === record.type && afterLoc) this.next = afterLoc;");
file.WriteLine("                        return ContinueSentinel;");
file.WriteLine("                    },");
file.WriteLine("                    finish: function(finallyLoc) {");
file.WriteLine("                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {");
file.WriteLine("                            var entry = this.tryEntries[i];");
file.WriteLine("                            if (entry.finallyLoc === finallyLoc) {");
file.WriteLine("                                this.complete(entry.completion, entry.afterLoc);");
file.WriteLine("                                resetTryEntry(entry);");
file.WriteLine("                                return ContinueSentinel;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                    },");
file.WriteLine("                    \"catch\": function(tryLoc) {");
file.WriteLine("                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {");
file.WriteLine("                            var entry = this.tryEntries[i];");
file.WriteLine("                            if (entry.tryLoc === tryLoc) {");
file.WriteLine("                                var record = entry.completion;");
file.WriteLine("                                if (\"throw\" === record.type) {");
file.WriteLine("                                    var thrown = record.arg;");
file.WriteLine("                                    resetTryEntry(entry);");
file.WriteLine("                                }");
file.WriteLine("                                return thrown;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                        throw new Error(\"illegal catch attempt\");");
file.WriteLine("                    },");
file.WriteLine("                    delegateYield: function(iterable, resultName, nextLoc) {");
file.WriteLine("                        this.delegate = {");
file.WriteLine("                            iterator: values(iterable),");
file.WriteLine("                            resultName: resultName,");
file.WriteLine("                            nextLoc: nextLoc");
file.WriteLine("                        };");
file.WriteLine("                        if (\"next\" === this.method) this.arg = undefined;");
file.WriteLine("                        return ContinueSentinel;");
file.WriteLine("                    }");
file.WriteLine("                };");
file.WriteLine("            } else if (inModule) module.exports = runtime;");
file.WriteLine("        }(\"object\" == typeof global ? global : \"object\" == typeof window ? window : \"object\" == typeof self ? self : this);");
file.WriteLine("    }).call(exports, __webpack_require__(48));");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    module.exports = function(module) {");
file.WriteLine("        if (!module.webpackPolyfill) {");
file.WriteLine("            module.deprecate = function() {};");
file.WriteLine("            module.paths = [];");
file.WriteLine("            if (!module.children) module.children = [];");
file.WriteLine("            try {");
file.WriteLine("                Object.defineProperty(module, \"loaded\", {");
file.WriteLine("                    enumerable: !0,");
file.WriteLine("                    configurable: !1,");
file.WriteLine("                    get: function() {");
file.WriteLine("                        return module.l;");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("                Object.defineProperty(module, \"id\", {");
file.WriteLine("                    enumerable: !0,");
file.WriteLine("                    configurable: !1,");
file.WriteLine("                    get: function() {");
file.WriteLine("                        return module.i;");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("            } catch (e) {");
file.WriteLine("                module.id = module.i;");
file.WriteLine("            }");
file.WriteLine("            module.webpackPolyfill = !0;");
file.WriteLine("        }");
file.WriteLine("        return module;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    module.exports = function(inputVendorName) {");
file.WriteLine("        var defaultVendorName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"noname\", toLower = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;");
file.WriteLine("        if (!defaultVendorName) defaultVendorName = \"noname\";");
file.WriteLine("        if (!inputVendorName) inputVendorName = defaultVendorName;");
file.WriteLine("        var replacePattern = new RegExp([ \"(\\\\s|,\\\\s?)inc(\\\\.|$)\", \"\\\\scorporation\", \"\\\\scorp(\\\\.|$)\", \"\\\\scomputer\", \"\\\\scomputers\", \"\\\\selectronics\", \"\\\\gmbh\", \"\\\\stechnology\", \"\\\\stechnologies\", \"\\\\sinternational\", \"\\\\sinformation\", \"\\\\ssemiconductor\", \"\\\\sco\\\\.,\\\\s?ltd\\\\.?\", \"\\\\sco(\\\\.|$)\", \"\\\\sltd\", \"\\\\slimited\", \"\\\\sag$\", \"\\\\ssa$\", \"\\\\sas$\", \"(\\\\s|-|\\\\.)(g|s|a)(\\\\.|$)\" ].join(\"|\"), \"ig\");");
file.WriteLine("        if (toLower) inputVendorName = inputVendorName.toLowerCase();");
file.WriteLine("        var trimedVendorName = inputVendorName.replace(replacePattern, \"\").replace(/[_\\s]+/g, \" \").replace(/^\\s+|\\s+$/g, \"\").replace(/^[.,]+|[.,]+$/g, \"\").replace(/^_+|_+$/g, \"\").replace(/^-+|-+$/g, \"\").replace(/\"/g, \"'\").replace(/\\s+/g, \" \");");
file.WriteLine("        return \"\" === trimedVendorName ? defaultVendorName : trimedVendorName;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function retry(handler) {");
file.WriteLine("        var tries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1, timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;");
file.WriteLine("        return handler()[\"catch\"](function(err) {");
file.WriteLine("            if (tries > 1) return delay(timeout).then(function() {");
file.WriteLine("                return retry(handler, tries - 1, timeout);");
file.WriteLine("            }); else throw err;");
file.WriteLine("        });");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = retry;");
file.WriteLine("    var delay = function(time) {");
file.WriteLine("        return new Promise(function(resolve) {");
file.WriteLine("            return setTimeout(resolve, time);");
file.WriteLine("        });");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _objectWithoutProperties(obj, keys) {");
file.WriteLine("        var target = {};");
file.WriteLine("        for (var i in obj) if (!(keys.indexOf(i) >= 0)) if (Object.prototype.hasOwnProperty.call(obj, i)) target[i] = obj[i];");
file.WriteLine("        return target;");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    function _possibleConstructorReturn(self, call) {");
file.WriteLine("        if (!self) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");");
file.WriteLine("        return call && (\"object\" == typeof call || \"function\" == typeof call) ? call : self;");
file.WriteLine("    }");
file.WriteLine("    function _inherits(subClass, superClass) {");
file.WriteLine("        if (\"function\" != typeof superClass && null !== superClass) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);");
file.WriteLine("        subClass.prototype = Object.create(superClass && superClass.prototype, {");
file.WriteLine("            constructor: {");
file.WriteLine("                value: subClass,");
file.WriteLine("                enumerable: !1,");
file.WriteLine("                writable: !0,");
file.WriteLine("                configurable: !0");
file.WriteLine("            }");
file.WriteLine("        });");
file.WriteLine("        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {");
file.WriteLine("        return typeof obj;");
file.WriteLine("    } : function(obj) {");
file.WriteLine("        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;");
file.WriteLine("    }, _DeloreanTransport = __webpack_require__(58), _DeloreanTransport2 = _interopRequireDefault(_DeloreanTransport), _ScopedLogger2 = __webpack_require__(134), _ScopedLogger3 = _interopRequireDefault(_ScopedLogger2), _fileWriter = __webpack_require__(70), _fileWriter2 = _interopRequireDefault(_fileWriter), Logger = function(_ScopedLogger) {");
file.WriteLine("        function Logger(_ref) {");
file.WriteLine("            var logging = _ref.logging, endpoint = _ref.endpoint;");
file.WriteLine("            _classCallCheck(this, Logger);");
file.WriteLine("            var _this = _possibleConstructorReturn(this, _ScopedLogger.call(this, null, \"\")), transport = new _DeloreanTransport2[\"default\"](endpoint);");
file.WriteLine("            Object.assign(_this, {");
file.WriteLine("                logging: logging,");
file.WriteLine("                transport: transport");
file.WriteLine("            });");
file.WriteLine("            return _this;");
file.WriteLine("        }");
file.WriteLine("        _inherits(Logger, _ScopedLogger);");
file.WriteLine("        Logger.prototype.buildMessage = function(_ref2) {");
file.WriteLine("            for (var message = _ref2.message, action = _ref2.action, _ref2$namespace = _ref2.namespace, namespace = _ref2$namespace === undefined ? \"\" : _ref2$namespace, _ref2$tags = _ref2.tags, tags = _ref2$tags === undefined ? [] : _ref2$tags, res = \"[\" + namespace + \"] \" + (message || action), _iterator = tags, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ;) {");
file.WriteLine("                var _ref3;");
file.WriteLine("                if (_isArray) {");
file.WriteLine("                    if (_i >= _iterator.length) break;");
file.WriteLine("                    _ref3 = _iterator[_i++];");
file.WriteLine("                } else {");
file.WriteLine("                    _i = _iterator.next();");
file.WriteLine("                    if (_i.done) break;");
file.WriteLine("                    _ref3 = _i.value;");
file.WriteLine("                }");
file.WriteLine("                res += \" #\" + _ref3;");
file.WriteLine("            }");
file.WriteLine("            return res;");
file.WriteLine("        };");
file.WriteLine("        Logger.prototype.toObject = function(lvl, message) {");
file.WriteLine("            var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}, namespace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";");
file.WriteLine("            return {");
file.WriteLine("                lvl: lvl,");
file.WriteLine("                tags: arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [],");
file.WriteLine("                namespace: namespace,");
file.WriteLine("                message: message,");
file.WriteLine("                params: params");
file.WriteLine("            };");
file.WriteLine("        };");
file.WriteLine("        Logger.prototype.send = function() {");
file.WriteLine("            var data = this.toObject.apply(this, arguments);");
file.WriteLine("            if (\"debug\" !== data.lvl) return this.transport.send(data);");
file.WriteLine("        };");
file.WriteLine("        Logger.prototype._write = function(_ref4) {");
file.WriteLine("            var type = _ref4.type, data = _ref4.data, _ref4$params = _ref4.params, params = _ref4$params === undefined ? data : _ref4$params, _ref4$message = _ref4.message, message = _ref4$message === undefined ? this.buildMessage(data) : _ref4$message;");
file.WriteLine("            if (\"error\" === data.lvl || \"warn\" === data.lvl) console[data.lvl](message); else console.log(message);");
file.WriteLine("            if (this.logging) _fileWriter2[\"default\"].write(message, data.lvl, params, data, type);");
file.WriteLine("        };");
file.WriteLine("        Logger.prototype.write = function() {");
file.WriteLine("            var data = this.toObject.apply(this, arguments);");
file.WriteLine("            this._write({");
file.WriteLine("                type: \"log\",");
file.WriteLine("                data: data,");
file.WriteLine("                params: data.params");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Logger.prototype.onunload = function() {");
file.WriteLine("            _fileWriter2[\"default\"].close();");
file.WriteLine("        };");
file.WriteLine("        Logger.prototype.log = function(lvl, opts) {");
file.WriteLine("            var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : opts.params, namespace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : opts.namespace, tags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : opts.tags;");
file.WriteLine("            if (\"object\" !== (void 0 === opts ? \"undefined\" : _typeof(opts))) opts = {");
file.WriteLine("                message: opts");
file.WriteLine("            };");
file.WriteLine("            var _opts = opts, message = _opts.message, dimensions = _opts.dimensions, important = _opts.important, event = _objectWithoutProperties(_opts, [ \"message\", \"dimensions\", \"important\" ]), args = [ lvl, message, params, namespace, tags ];");
file.WriteLine("            if (event.action) {");
file.WriteLine("                var data = this.toObject.apply(this, args);");
file.WriteLine("                return __webpack_require__(20).event(_extends({}, event, data), dimensions, important);");
file.WriteLine("            } else return Promise.all([ this.send.apply(this, args), this.write.apply(this, args) ]);");
file.WriteLine("        };");
file.WriteLine("        return Logger;");
file.WriteLine("    }(_ScopedLogger3[\"default\"]);");
file.WriteLine("    exports[\"default\"] = Logger;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var ScopedLogger = function() {");
file.WriteLine("        function ScopedLogger(parent, prefix) {");
file.WriteLine("            var tags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];");
file.WriteLine("            _classCallCheck(this, ScopedLogger);");
file.WriteLine("            Object.assign(this, {");
file.WriteLine("                parent: parent,");
file.WriteLine("                prefix: prefix,");
file.WriteLine("                tags: tags");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("        ScopedLogger.prototype.log = function(lvl, msg, params) {");
file.WriteLine("            var namespace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : msg.namespace || \"\", tags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : msg.tags || [];");
file.WriteLine("            if (this.prefix) namespace = this.prefix + \":\" + namespace;");
file.WriteLine("            return this.parent.log(lvl, msg, params, namespace, tags.concat(this.tags));");
file.WriteLine("        };");
file.WriteLine("        ScopedLogger.prototype.debug = function() {");
file.WriteLine("            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];");
file.WriteLine("            return this.log.apply(this, [ \"debug\" ].concat(args));");
file.WriteLine("        };");
file.WriteLine("        ScopedLogger.prototype.info = function() {");
file.WriteLine("            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];");
file.WriteLine("            return this.log.apply(this, [ \"info\" ].concat(args));");
file.WriteLine("        };");
file.WriteLine("        ScopedLogger.prototype.warn = function() {");
file.WriteLine("            for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) args[_key3] = arguments[_key3];");
file.WriteLine("            return this.log.apply(this, [ \"warn\" ].concat(args));");
file.WriteLine("        };");
file.WriteLine("        ScopedLogger.prototype.error = function() {");
file.WriteLine("            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) args[_key4] = arguments[_key4];");
file.WriteLine("            return this.log.apply(this, [ \"error\" ].concat(args));");
file.WriteLine("        };");
file.WriteLine("        ScopedLogger.prototype.scope = function(namespace, tags) {");
file.WriteLine("            return new ScopedLogger(this, namespace, tags);");
file.WriteLine("        };");
file.WriteLine("        return ScopedLogger;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = ScopedLogger;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _DeloreanTransport = __webpack_require__(58), _DeloreanTransport2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_DeloreanTransport), EventsAPI = (__webpack_require__(31), function() {");
file.WriteLine("        function EventsAPI(parent) {");
file.WriteLine("            _classCallCheck(this, EventsAPI);");
file.WriteLine("            this.parent = parent;");
file.WriteLine("            this.logger = parent.logger.scope(\"api\");");
file.WriteLine("        }");
file.WriteLine("        EventsAPI.prototype.init = function(_ref) {");
file.WriteLine("            var url = _ref.url;");
file.WriteLine("            this.transport = new _DeloreanTransport2[\"default\"](url, this.parent);");
file.WriteLine("        };");
file.WriteLine("        EventsAPI.prototype.send = function(event) {");
file.WriteLine("            var _this = this, endpoint = this.transport && this.transport.endpoint;");
file.WriteLine("            if (endpoint) return this.transport.send(event).then(function() {");
file.WriteLine("                _this.logger.debug(\"Send event to MongoDB API \" + endpoint + \": \" + event.action, {");
file.WriteLine("                    event: event,");
file.WriteLine("                    endpoint: endpoint");
file.WriteLine("                }, \"send\");");
file.WriteLine("            }, function(_ref2) {");
file.WriteLine("                var response = _ref2.response;");
file.WriteLine("                _this.logger.debug(\"Failed to send event to MongoDB API \" + endpoint + \": \" + event.action, {");
file.WriteLine("                    event: event,");
file.WriteLine("                    endpoint: endpoint,");
file.WriteLine("                    response: response");
file.WriteLine("                }, \"fail\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        return EventsAPI;");
file.WriteLine("    }());");
file.WriteLine("    exports[\"default\"] = EventsAPI;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _utils = __webpack_require__(38), _fso = __webpack_require__(7), FileStore = function() {");
file.WriteLine("        function FileStore() {");
file.WriteLine("            _classCallCheck(this, FileStore);");
file.WriteLine("        }");
file.WriteLine("        FileStore.prototype.parseClientIdJs = function(text) {");
file.WriteLine("            var start = text.indexOf('\"') + 1, end = text.indexOf('\"', start), filename = text.substr(start, end - start);");
file.WriteLine("            return (0, _utils.ParseSFXName)(filename).slice(-1)[0];");
file.WriteLine("        };");
file.WriteLine("        FileStore.prototype.get = function(key) {");
file.WriteLine("            var file = \"tools\\\\modules\\\\\" + key.toLowerCase() + \".js\";");
file.WriteLine("            if (_fso.fso.FileExists(file)) {");
file.WriteLine("                var text = _fso.fso.GetFile(file);");
file.WriteLine("                if (text.Size > 0) {");
file.WriteLine("                    var contents = text.OpenAsTextStream(1).ReadAll();");
file.WriteLine("                    return this.parseClientIdJs(contents);");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        FileStore.prototype.set = function() {};");
file.WriteLine("        return FileStore;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = FileStore;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _OnlineStatistics = __webpack_require__(72), _OnlineStatistics2 = _interopRequireDefault(_OnlineStatistics), _specialFolders = __webpack_require__(14), _fso = __webpack_require__(7), _localFiles = __webpack_require__(18), _logs = __webpack_require__(16), _iterate = __webpack_require__(30), _iterate2 = _interopRequireDefault(_iterate), log = (0, ");
file.WriteLine("    _logs.getLogger)(\"core:statistics:offline\"), readLine = function(file) {");
file.WriteLine("        return JSON.parse(file.ReadLine());");
file.WriteLine("    }, OfflineStore = function() {");
file.WriteLine("        function OfflineStore(_ref2) {");
file.WriteLine("            var options = _ref2.options, drpVersion = _ref2.drpVersion, lang = _ref2.lang, clientId = _ref2.clientId, computerId = _ref2.computerId;");
file.WriteLine("            _classCallCheck(this, OfflineStore);");
file.WriteLine("            var filename = this._name = [ \"e\", Date.now(), options.category || \"drp\" ].join(\"-\").replace(/[\\s\\.]/g, \"-\").toLowerCase(), filepath = OfflineStore.getFilepath() + \"\\\\\" + filename;");
file.WriteLine("            this._file = _fso.fso.CreateTextFile(filepath, !0);");
file.WriteLine("            this._save({");
file.WriteLine("                clientId: clientId,");
file.WriteLine("                computerId: computerId,");
file.WriteLine("                constructor: [ options, drpVersion, lang ]");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("        OfflineStore.getFilepath = function() {");
file.WriteLine("            return (0, _localFiles.ensurePath)(_specialFolders.AppData + \"\\\\DRPSu\\\\events\");");
file.WriteLine("        };");
file.WriteLine("        OfflineStore.dispatchFile = function(_ref) {");
file.WriteLine("            var Path = _ref.Path, Name = _ref.Name;");
file.WriteLine("            log.debug(\"Processing file: \" + Name, {");
file.WriteLine("                file: Name");
file.WriteLine("            }, \"dispatch\");");
file.WriteLine("            var promises = [];");
file.WriteLine("            try {");
file.WriteLine("                var file = _fso.fso.OpenTextFile(Path, 1, !1), _readLine = readLine(file), clientId = _readLine.clientId, computerId = _readLine.computerId, _constructor = _readLine.constructor, stat = new (Function.prototype.bind.apply(_OnlineStatistics2[\"default\"], [ null ].concat(_constructor)))();");
file.WriteLine("                stat.init({");
file.WriteLine("                    clientId: clientId,");
file.WriteLine("                    computerId: computerId,");
file.WriteLine("                    offline: !0");
file.WriteLine("                });");
file.WriteLine("                for (;!file.AtEndOfStream; ) try {");
file.WriteLine("                    var _readLine2 = readLine(file), event = _readLine2.event;");
file.WriteLine("                    promises.push(stat.event.apply(stat, event)[\"catch\"](function() {");
file.WriteLine("                        return null;");
file.WriteLine("                    }));");
file.WriteLine("                } catch (err) {}");
file.WriteLine("                file.Close();");
file.WriteLine("            } catch (err) {}");
file.WriteLine("            return Promise.all(promises).then(function() {");
file.WriteLine("                _fso.fso.DeleteFile(Path, !0);");
file.WriteLine("            })[\"catch\"](function() {");
file.WriteLine("                return null;");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        OfflineStore.dispatch = function() {");
file.WriteLine("            var filepath = OfflineStore.getFilepath(), folder = _fso.fso.GetFolder(filepath), promise = Promise.resolve();");
file.WriteLine("            (0, _iterate2[\"default\"])(folder.Files, function(file) {");
file.WriteLine("                promise = promise.then(function() {");
file.WriteLine("                    return OfflineStore.dispatchFile(file);");
file.WriteLine("                });");
file.WriteLine("            });");
file.WriteLine("            return promise;");
file.WriteLine("        };");
file.WriteLine("        OfflineStore.prototype.event = function(_event) {");
file.WriteLine("            var dimensions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [], important = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;");
file.WriteLine("            log.debug(\"Send event: \" + _event.action, {");
file.WriteLine("                event: _event,");
file.WriteLine("                dimensions: dimensions");
file.WriteLine("            }, \"send\");");
file.WriteLine("            this._save({");
file.WriteLine("                event: [ _event, dimensions, important ]");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        OfflineStore.prototype._save = function(data) {");
file.WriteLine("            this._file.WriteLine(JSON.stringify(data));");
file.WriteLine("        };");
file.WriteLine("        return OfflineStore;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = OfflineStore;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _registry = __webpack_require__(27), RegistryStore = function() {");
file.WriteLine("        function RegistryStore(Reg) {");
file.WriteLine("            _classCallCheck(this, RegistryStore);");
file.WriteLine("            this.Reg = Reg;");
file.WriteLine("        }");
file.WriteLine("        RegistryStore.prototype.getPath = function(key) {");
file.WriteLine("            return this.Reg + key;");
file.WriteLine("        };");
file.WriteLine("        RegistryStore.prototype.get = function(key) {");
file.WriteLine("            return (0, _registry.RegRead)(this.getPath(key));");
file.WriteLine("        };");
file.WriteLine("        RegistryStore.prototype.set = function(key, clientId) {");
file.WriteLine("            (0, _registry.RegWrite)(this.getPath(key), clientId);");
file.WriteLine("        };");
file.WriteLine("        return RegistryStore;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = RegistryStore;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    function _possibleConstructorReturn(self, call) {");
file.WriteLine("        if (!self) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");");
file.WriteLine("        return call && (\"object\" == typeof call || \"function\" == typeof call) ? call : self;");
file.WriteLine("    }");
file.WriteLine("    function _inherits(subClass, superClass) {");
file.WriteLine("        if (\"function\" != typeof superClass && null !== superClass) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);");
file.WriteLine("        subClass.prototype = Object.create(superClass && superClass.prototype, {");
file.WriteLine("            constructor: {");
file.WriteLine("                value: subClass,");
file.WriteLine("                enumerable: !1,");
file.WriteLine("                writable: !0,");
file.WriteLine("                configurable: !0");
file.WriteLine("            }");
file.WriteLine("        });");
file.WriteLine("        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, _GoogleAnalytics = __webpack_require__(71), _OnlineStatistics2 = __webpack_require__(72), _OnlineStatistics3 = _interopRequireDefault(_OnlineStatistics2), _OfflineStore = __webpack_require__(137), _OfflineStore2 = _interopRequireDefault(_OfflineStore), Statistics = function(_OnlineStatistics) {");
file.WriteLine("        function Statistics() {");
file.WriteLine("            _classCallCheck(this, Statistics);");
file.WriteLine("            return _possibleConstructorReturn(this, _OnlineStatistics.apply(this, arguments));");
file.WriteLine("        }");
file.WriteLine("        _inherits(Statistics, _OnlineStatistics);");
file.WriteLine("        Statistics.prototype.init = function(opts) {");
file.WriteLine("            var _this2 = this;");
file.WriteLine("            _OnlineStatistics.prototype.init.call(this, opts);");
file.WriteLine("            this._initialized = this.checkConnection().then(function(isOnline) {");
file.WriteLine("                if (isOnline) return _OfflineStore2[\"default\"].dispatch().then(function() {");
file.WriteLine("                    return !0;");
file.WriteLine("                }); else {");
file.WriteLine("                    _this2._offlineStore = new _OfflineStore2[\"default\"](_this2);");
file.WriteLine("                    return !1;");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Statistics.prototype.checkConnection = function() {");
file.WriteLine("            return (0, _GoogleAnalytics.sendUrl)(_GoogleAnalytics.endpoint).then(function() {");
file.WriteLine("                return !0;");
file.WriteLine("            }, function() {");
file.WriteLine("                return !1;");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Statistics.prototype.send = function(event, dimensions, important) {");
file.WriteLine("            var _this3 = this;");
file.WriteLine("            return this._initialized.then(function(isOnline) {");
file.WriteLine("                if (!isOnline && _this3._offlineStore) _this3._offlineStore.event(event, dimensions, important); else return _OnlineStatistics.prototype.send.call(_this3, event, dimensions, important);");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Statistics.prototype.sendOpenedEvent = function(event) {");
file.WriteLine("            this.event(_extends({");
file.WriteLine("                lvl: \"info\",");
file.WriteLine("                action: \"application opened\",");
file.WriteLine("                label: this.drpVersion,");
file.WriteLine("                namespace: \"DriverPackSolution:opened\"");
file.WriteLine("            }, event), [], !0);");
file.WriteLine("        };");
file.WriteLine("        return Statistics;");
file.WriteLine("    }(_OnlineStatistics3[\"default\"]);");
file.WriteLine("    exports[\"default\"] = Statistics;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, loaded = !1, loadYaMetrika = function() {");
file.WriteLine("        if (!loaded) {");
file.WriteLine("            if (!window.yandex_metrika_callbacks) window.yandex_metrika_callbacks = [];");
file.WriteLine("            loaded = new Promise(function(resolve) {");
file.WriteLine("                window.yandex_metrika_callbacks.push(resolve);");
file.WriteLine("            });");
file.WriteLine("            var _document$getElements = document.getElementsByTagName(\"script\"), neighbor = _document$getElements[0], script = document.createElement(\"script\");");
file.WriteLine("            script.type = \"text/javascript\";");
file.WriteLine("            script.async = !0;");
file.WriteLine("            script.src = \"https://mc.yandex.ru/metrika/watch.js\";");
file.WriteLine("            neighbor.parentNode.insertBefore(script, neighbor);");
file.WriteLine("        }");
file.WriteLine("        return loaded;");
file.WriteLine("    }, createYaCounter = function(id) {");
file.WriteLine("        var active = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;");
file.WriteLine("        try {");
file.WriteLine("            return id ? new window.Ya.Metrika({");
file.WriteLine("                id: id,");
file.WriteLine("                clickmap: active,");
file.WriteLine("                trackLinks: active,");
file.WriteLine("                accurateTrackBounce: active,");
file.WriteLine("                ut: \"noindex\",");
file.WriteLine("                defer: !0,");
file.WriteLine("                webvisor: !1");
file.WriteLine("            }) : null;");
file.WriteLine("        } catch (e) {}");
file.WriteLine("    }, YaMetrika = function() {");
file.WriteLine("        function YaMetrika(parent) {");
file.WriteLine("            _classCallCheck(this, YaMetrika);");
file.WriteLine("            this.enabled = !1;");
file.WriteLine("            this.parent = parent;");
file.WriteLine("            this.logger = parent.logger.scope(\"metrika\");");
file.WriteLine("        }");
file.WriteLine("        YaMetrika.prototype.init = function(_ref) {");
file.WriteLine("            var _this = this, shared = _ref.shared, primary = _ref.primary, enabled = _ref.enabled, url = _ref.url;");
file.WriteLine("            Object.assign(this, {");
file.WriteLine("                enabled: enabled,");
file.WriteLine("                url: url");
file.WriteLine("            });");
file.WriteLine("            if (!this.enabled) return !1;");
file.WriteLine("            this.loaded = loadYaMetrika().then(function() {");
file.WriteLine("                var active = !_this.parent.offline;");
file.WriteLine("                _this.counters = {");
file.WriteLine("                    shared: createYaCounter(shared, active),");
file.WriteLine("                    primary: createYaCounter(primary, active)");
file.WriteLine("                };");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        YaMetrika.prototype.send = function(event) {");
file.WriteLine("            var _this2 = this;");
file.WriteLine("            if (!this.enabled) return !1;");
file.WriteLine("            var url = this.url + [ event.category, event.action, event.label ].join(\"/\").replace(/\\s/g, \"_\").toLowerCase(), params = _extends({}, event.params, {");
file.WriteLine("                clientId: String(this.parent.clientId),");
file.WriteLine("                computerId: String(this.parent.computerId),");
file.WriteLine("                experimentNumber: this.parent.experiment,");
file.WriteLine("                language: this.parent.lang");
file.WriteLine("            });");
file.WriteLine("            return this.loaded.then(function() {");
file.WriteLine("                var _counters = _this2.counters, shared = _counters.shared, primary = _counters.primary;");
file.WriteLine("                _this2.logger.debug(\"Send event: \" + event.action, {");
file.WriteLine("                    event: event,");
file.WriteLine("                    url: url,");
file.WriteLine("                    params: params");
file.WriteLine("                }, \"send\");");
file.WriteLine("                return Promise.all([ _this2._sendHit(shared, url, params), _this2._sendHit(primary, url, params) ]);");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        YaMetrika.prototype._sendHit = function(counter, url, params) {");
file.WriteLine("            return counter ? new Promise(function(resolve) {");
file.WriteLine("                counter.hit(url, {");
file.WriteLine("                    title: document.title,");
file.WriteLine("                    referer: null,");
file.WriteLine("                    params: params,");
file.WriteLine("                    callback: function() {");
file.WriteLine("                        return resolve();");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("            }) : !1;");
file.WriteLine("        };");
file.WriteLine("        return YaMetrika;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = YaMetrika;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.ParseCMD = undefined;");
file.WriteLine("    var _utils = __webpack_require__(38);");
file.WriteLine("    exports.ParseCMD = function(cmd) {");
file.WriteLine("        var args = (0, _utils.ParseCMDString)(cmd);");
file.WriteLine("        if (args.length > 2 && \"--sfx\" === args[1]) {");
file.WriteLine("            var _args = args, command = _args[0], sfxName = _args[2], overwrite = _args.slice(3);");
file.WriteLine("            args = [ command ].concat((0, _utils.ParseSFXName)(sfxName));");
file.WriteLine("            overwrite.forEach(function(val, ind) {");
file.WriteLine("                if (val) args[ind + 1] = val;");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("        return args;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.waitForProcesses = exports.waitForPID = exports.setProcessPriority = exports.killByPID = exports.getMyPID = exports.killProcess = undefined;");
file.WriteLine("    var _shell = __webpack_require__(11), _wmi = __webpack_require__(3), getMyPID = (exports.killProcess = function(commandLineLike) {");
file.WriteLine("        (0, _wmi.getWMIObjects)([ \"ProcessId\" ], \"Win32_Process\", 'NAME = \"mshta.exe\" AND CommandLine LIKE \"' + commandLineLike + '\"').forEach(function(_ref) {");
file.WriteLine("            var ProcessId = _ref.ProcessId;");
file.WriteLine("            _shell.WshShell.Run(\"cmd /c taskkill /f /t /pid \" + ProcessId, 0, !0);");
file.WriteLine("        });");
file.WriteLine("    }, exports.getMyPID = function() {");
file.WriteLine("        var pid = void 0;");
file.WriteLine("        try {");
file.WriteLine("            var temp = _shell.WshShell.Exec(\"rundll32 kernel32,Sleep\");");
file.WriteLine("            pid = (0, _wmi.getWMIObjects)([ \"ParentProcessId\" ], \"Win32_Process\", 'Handle = \"' + temp.ProcessId + '\"')[0].ParentProcessId;");
file.WriteLine("            temp.Terminate();");
file.WriteLine("        } catch (e) {}");
file.WriteLine("        return pid;");
file.WriteLine("    }), waitForPID = (exports.killByPID = function(pid) {");
file.WriteLine("        var childs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1, timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;");
file.WriteLine("        setTimeout(function() {");
file.WriteLine("            var flags = [ \"/f\" ];");
file.WriteLine("            if (childs) flags.push(\"/t\");");
file.WriteLine("            _shell.WshShell.Run('cmd /c \"taskkill ' + flags.join(\" \") + \" /pid \" + pid + '\"', 0, !0);");
file.WriteLine("        }, timeout);");
file.WriteLine("    }, exports.setProcessPriority = function() {");
file.WriteLine("        var priority = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;");
file.WriteLine("        try {");
file.WriteLine("            var pid = getMyPID(), colItems = _wmi.objWMIService.ExecQuery(\"SELECT * FROM Win32_Process WHERE Handle = \" + pid, \"WQL\");");
file.WriteLine("            new Enumerator(colItems).item().SetPriority(priority);");
file.WriteLine("        } catch (e) {}");
file.WriteLine("    }, exports.waitForPID = function(pid) {");
file.WriteLine("        var query = \"SELECT * FROM Win32_Process WHERE ProcessId = \" + pid;");
file.WriteLine("        return new Promise(function(resolve) {");
file.WriteLine("            var intervId = setInterval(function() {");
file.WriteLine("                if (0 === _wmi.objWMIService.ExecQuery(query, \"WQL\").Count) {");
file.WriteLine("                    clearInterval(intervId);");
file.WriteLine("                    resolve();");
file.WriteLine("                }");
file.WriteLine("            }, 300);");
file.WriteLine("        });");
file.WriteLine("    });");
file.WriteLine("    exports.waitForProcesses = function(where) {");
file.WriteLine("        var promise = Promise.resolve();");
file.WriteLine("        (0, _wmi.getWMIObjects)([ \"ProcessId\" ], \"Win32_Process\", where).forEach(function(_ref2) {");
file.WriteLine("            var ProcessId = _ref2.ProcessId;");
file.WriteLine("            promise = promise.then(function() {");
file.WriteLine("                return waitForPID(ProcessId);");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        return promise;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function Emitter(obj) {");
file.WriteLine("        if (obj) return mixin(obj);");
file.WriteLine("    }");
file.WriteLine("    function mixin(obj) {");
file.WriteLine("        for (var key in Emitter.prototype) obj[key] = Emitter.prototype[key];");
file.WriteLine("        return obj;");
file.WriteLine("    }");
file.WriteLine("    if (!0) module.exports = Emitter;");
file.WriteLine("    Emitter.prototype.on = Emitter.prototype.addEventListener = function(event, fn) {");
file.WriteLine("        this._callbacks = this._callbacks || {};");
file.WriteLine("        (this._callbacks[\"$\" + event] = this._callbacks[\"$\" + event] || []).push(fn);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Emitter.prototype.once = function(event, fn) {");
file.WriteLine("        function on() {");
file.WriteLine("            this.off(event, on);");
file.WriteLine("            fn.apply(this, arguments);");
file.WriteLine("        }");
file.WriteLine("        on.fn = fn;");
file.WriteLine("        this.on(event, on);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function(event, fn) {");
file.WriteLine("        this._callbacks = this._callbacks || {};");
file.WriteLine("        if (0 == arguments.length) {");
file.WriteLine("            this._callbacks = {};");
file.WriteLine("            return this;");
file.WriteLine("        }");
file.WriteLine("        var callbacks = this._callbacks[\"$\" + event];");
file.WriteLine("        if (!callbacks) return this;");
file.WriteLine("        if (1 == arguments.length) {");
file.WriteLine("            delete this._callbacks[\"$\" + event];");
file.WriteLine("            return this;");
file.WriteLine("        }");
file.WriteLine("        for (var cb, i = 0; i < callbacks.length; i++) {");
file.WriteLine("            cb = callbacks[i];");
file.WriteLine("            if (cb === fn || cb.fn === fn) {");
file.WriteLine("                callbacks.splice(i, 1);");
file.WriteLine("                break;");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Emitter.prototype.emit = function(event) {");
file.WriteLine("        this._callbacks = this._callbacks || {};");
file.WriteLine("        var args = [].slice.call(arguments, 1), callbacks = this._callbacks[\"$\" + event];");
file.WriteLine("        if (callbacks) {");
file.WriteLine("            callbacks = callbacks.slice(0);");
file.WriteLine("            for (var i = 0, len = callbacks.length; i < len; ++i) callbacks[i].apply(this, args);");
file.WriteLine("        }");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Emitter.prototype.listeners = function(event) {");
file.WriteLine("        this._callbacks = this._callbacks || {};");
file.WriteLine("        return this._callbacks[\"$\" + event] || [];");
file.WriteLine("    };");
file.WriteLine("    Emitter.prototype.hasListeners = function(event) {");
file.WriteLine("        return !!this.listeners(event).length;");
file.WriteLine("    };");
file.WriteLine("}, , , , , , , , , , , , , , , , , , , , , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    function isArrayLike(value) {");
file.WriteLine("        return null != value && isLength(getLength(value));");
file.WriteLine("    }");
file.WriteLine("    var getLength = __webpack_require__(449), isLength = __webpack_require__(78);");
file.WriteLine("    module.exports = isArrayLike;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function isIndex(value, length) {");
file.WriteLine("        value = \"number\" == typeof value || reIsUint.test(value) ? +value : -1;");
file.WriteLine("        length = null == length ? MAX_SAFE_INTEGER : length;");
file.WriteLine("        return value > -1 && value % 1 == 0 && value < length;");
file.WriteLine("    }");
file.WriteLine("    var reIsUint = /^\\d+$/, MAX_SAFE_INTEGER = 9007199254740991;");
file.WriteLine("    module.exports = isIndex;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = function(arr, fn, initial) {");
file.WriteLine("        for (var idx = 0, len = arr.length, curr = 3 == arguments.length ? initial : arr[idx++]; idx < len; ) curr = fn.call(null, curr, arr[idx], ++idx, arr);");
file.WriteLine("        return curr;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function noop() {}");
file.WriteLine("    function isHost(obj) {");
file.WriteLine("        switch ({}.toString.call(obj)) {");
file.WriteLine("          case \"[object File]\":");
file.WriteLine("          case \"[object Blob]\":");
file.WriteLine("          case \"[object FormData]\":");
file.WriteLine("            return !0;");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            return !1;");
file.WriteLine("        }");
file.WriteLine("    }");
file.WriteLine("    function isObject(obj) {");
file.WriteLine("        return obj === Object(obj);");
file.WriteLine("    }");
file.WriteLine("    function serialize(obj) {");
file.WriteLine("        if (!isObject(obj)) return obj;");
file.WriteLine("        var pairs = [];");
file.WriteLine("        for (var key in obj) if (null != obj[key]) pushEncodedKeyValuePair(pairs, key, obj[key]);");
file.WriteLine("        return pairs.join(\"&\");");
file.WriteLine("    }");
file.WriteLine("    function pushEncodedKeyValuePair(pairs, key, val) {");
file.WriteLine("        if (Array.isArray(val)) return val.forEach(function(v) {");
file.WriteLine("            pushEncodedKeyValuePair(pairs, key, v);");
file.WriteLine("        });");
file.WriteLine("        pairs.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(val));");
file.WriteLine("    }");
file.WriteLine("    function parseString(str) {");
file.WriteLine("        for (var parts, pair, obj = {}, pairs = str.split(\"&\"), i = 0, len = pairs.length; i < len; ++i) {");
file.WriteLine("            pair = pairs[i];");
file.WriteLine("            parts = pair.split(\"=\");");
file.WriteLine("            obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);");
file.WriteLine("        }");
file.WriteLine("        return obj;");
file.WriteLine("    }");
file.WriteLine("    function parseHeader(str) {");
file.WriteLine("        var index, line, field, val, lines = str.split(/\\r?\\n/), fields = {};");
file.WriteLine("        lines.pop();");
file.WriteLine("        for (var i = 0, len = lines.length; i < len; ++i) {");
file.WriteLine("            line = lines[i];");
file.WriteLine("            index = line.indexOf(\":\");");
file.WriteLine("            field = line.slice(0, index).toLowerCase();");
file.WriteLine("            val = trim(line.slice(index + 1));");
file.WriteLine("            fields[field] = val;");
file.WriteLine("        }");
file.WriteLine("        return fields;");
file.WriteLine("    }");
file.WriteLine("    function isJSON(mime) {");
file.WriteLine("        return /[\\/+]json\\b/.test(mime);");
file.WriteLine("    }");
file.WriteLine("    function type(str) {");
file.WriteLine("        return str.split(/ *; */).shift();");
file.WriteLine("    }");
file.WriteLine("    function params(str) {");
file.WriteLine("        return reduce(str.split(/ *; */), function(obj, str) {");
file.WriteLine("            var parts = str.split(/ *= */), key = parts.shift(), val = parts.shift();");
file.WriteLine("            if (key && val) obj[key] = val;");
file.WriteLine("            return obj;");
file.WriteLine("        }, {});");
file.WriteLine("    }");
file.WriteLine("    function Response(req, options) {");
file.WriteLine("        options = options || {};");
file.WriteLine("        this.req = req;");
file.WriteLine("        this.xhr = this.req.xhr;");
file.WriteLine("        this.text = \"HEAD\" != this.req.method && (\"\" === this.xhr.responseType || \"text\" === this.xhr.responseType) || \"undefined\" == typeof this.xhr.responseType ? this.xhr.responseText : null;");
file.WriteLine("        this.statusText = this.req.xhr.statusText;");
file.WriteLine("        this.setStatusProperties(this.xhr.status);");
file.WriteLine("        this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());");
file.WriteLine("        this.header[\"content-type\"] = this.xhr.getResponseHeader(\"content-type\");");
file.WriteLine("        this.setHeaderProperties(this.header);");
file.WriteLine("        this.body = \"HEAD\" != this.req.method ? this.parseBody(this.text ? this.text : this.xhr.response) : null;");
file.WriteLine("    }");
file.WriteLine("    function Request(method, url) {");
file.WriteLine("        var self = this;");
file.WriteLine("        Emitter.call(this);");
file.WriteLine("        this._query = this._query || [];");
file.WriteLine("        this.method = method;");
file.WriteLine("        this.url = url;");
file.WriteLine("        this.header = {};");
file.WriteLine("        this._header = {};");
file.WriteLine("        this.on(\"end\", function() {");
file.WriteLine("            var err = null, res = null;");
file.WriteLine("            try {");
file.WriteLine("                res = new Response(self);");
file.WriteLine("            } catch (e) {");
file.WriteLine("                err = new Error(\"Parser is unable to parse the response\");");
file.WriteLine("                err.parse = !0;");
file.WriteLine("                err.original = e;");
file.WriteLine("                err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;");
file.WriteLine("                return self.callback(err);");
file.WriteLine("            }");
file.WriteLine("            self.emit(\"response\", res);");
file.WriteLine("            if (err) return self.callback(err, res);");
file.WriteLine("            if (res.status >= 200 && res.status < 300) return self.callback(err, res);");
file.WriteLine("            var new_err = new Error(res.statusText || \"Unsuccessful HTTP response\");");
file.WriteLine("            new_err.original = err;");
file.WriteLine("            new_err.response = res;");
file.WriteLine("            new_err.status = res.status;");
file.WriteLine("            self.callback(new_err, res);");
file.WriteLine("        });");
file.WriteLine("    }");
file.WriteLine("    function request(method, url) {");
file.WriteLine("        if (\"function\" == typeof url) return new Request(\"GET\", method).end(url);");
file.WriteLine("        if (1 == arguments.length) return new Request(\"GET\", method); else return new Request(method, url);");
file.WriteLine("    }");
file.WriteLine("    function del(url, fn) {");
file.WriteLine("        var req = request(\"DELETE\", url);");
file.WriteLine("        if (fn) req.end(fn);");
file.WriteLine("        return req;");
file.WriteLine("    }");
file.WriteLine("    var root, Emitter = __webpack_require__(143), reduce = __webpack_require__(171);");
file.WriteLine("    if (\"undefined\" != typeof window) root = window; else if (\"undefined\" != typeof self) root = self; else root = this;");
file.WriteLine("    request.getXHR = function() {");
file.WriteLine("        if (root.XMLHttpRequest && (!root.location || \"file:\" != root.location.protocol || !root.ActiveXObject)) return new XMLHttpRequest(); else {");
file.WriteLine("            try {");
file.WriteLine("                return new ActiveXObject(\"Microsoft.XMLHTTP\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            try {");
file.WriteLine("                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            try {");
file.WriteLine("                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            try {");
file.WriteLine("                return new ActiveXObject(\"Msxml2.XMLHTTP\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("        }");
file.WriteLine("        return !1;");
file.WriteLine("    };");
file.WriteLine("    var trim = \"\".trim ? function(s) {");
file.WriteLine("        return s.trim();");
file.WriteLine("    } : function(s) {");
file.WriteLine("        return s.replace(/(^\\s*|\\s*$)/g, \"\");");
file.WriteLine("    };");
file.WriteLine("    request.serializeObject = serialize;");
file.WriteLine("    request.parseString = parseString;");
file.WriteLine("    request.types = {");
file.WriteLine("        html: \"text/html\",");
file.WriteLine("        json: \"application/json\",");
file.WriteLine("        xml: \"application/xml\",");
file.WriteLine("        urlencoded: \"application/x-www-form-urlencoded\",");
file.WriteLine("        form: \"application/x-www-form-urlencoded\",");
file.WriteLine("        \"form-data\": \"application/x-www-form-urlencoded\"");
file.WriteLine("    };");
file.WriteLine("    request.serialize = {");
file.WriteLine("        \"application/x-www-form-urlencoded\": serialize,");
file.WriteLine("        \"application/json\": JSON.stringify");
file.WriteLine("    };");
file.WriteLine("    request.parse = {");
file.WriteLine("        \"application/x-www-form-urlencoded\": parseString,");
file.WriteLine("        \"application/json\": JSON.parse");
file.WriteLine("    };");
file.WriteLine("    Response.prototype.get = function(field) {");
file.WriteLine("        return this.header[field.toLowerCase()];");
file.WriteLine("    };");
file.WriteLine("    Response.prototype.setHeaderProperties = function(header) {");
file.WriteLine("        var ct = this.header[\"content-type\"] || \"\";");
file.WriteLine("        this.type = type(ct);");
file.WriteLine("        var obj = params(ct);");
file.WriteLine("        for (var key in obj) this[key] = obj[key];");
file.WriteLine("    };");
file.WriteLine("    Response.prototype.parseBody = function(str) {");
file.WriteLine("        var parse = request.parse[this.type];");
file.WriteLine("        return parse && str && (str.length || str instanceof Object) ? parse(str) : null;");
file.WriteLine("    };");
file.WriteLine("    Response.prototype.setStatusProperties = function(status) {");
file.WriteLine("        if (1223 === status) status = 204;");
file.WriteLine("        var type = status / 100 | 0;");
file.WriteLine("        this.status = this.statusCode = status;");
file.WriteLine("        this.statusType = type;");
file.WriteLine("        this.info = 1 == type;");
file.WriteLine("        this.ok = 2 == type;");
file.WriteLine("        this.clientError = 4 == type;");
file.WriteLine("        this.serverError = 5 == type;");
file.WriteLine("        this.error = 4 == type || 5 == type ? this.toError() : !1;");
file.WriteLine("        this.accepted = 202 == status;");
file.WriteLine("        this.noContent = 204 == status;");
file.WriteLine("        this.badRequest = 400 == status;");
file.WriteLine("        this.unauthorized = 401 == status;");
file.WriteLine("        this.notAcceptable = 406 == status;");
file.WriteLine("        this.notFound = 404 == status;");
file.WriteLine("        this.forbidden = 403 == status;");
file.WriteLine("    };");
file.WriteLine("    Response.prototype.toError = function() {");
file.WriteLine("        var req = this.req, method = req.method, url = req.url, msg = \"cannot \" + method + \" \" + url + \" (\" + this.status + \")\", err = new Error(msg);");
file.WriteLine("        err.status = this.status;");
file.WriteLine("        err.method = method;");
file.WriteLine("        err.url = url;");
file.WriteLine("        return err;");
file.WriteLine("    };");
file.WriteLine("    request.Response = Response;");
file.WriteLine("    Emitter(Request.prototype);");
file.WriteLine("    Request.prototype.use = function(fn) {");
file.WriteLine("        fn(this);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.timeout = function(ms) {");
file.WriteLine("        this._timeout = ms;");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.clearTimeout = function() {");
file.WriteLine("        this._timeout = 0;");
file.WriteLine("        clearTimeout(this._timer);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.abort = function() {");
file.WriteLine("        if (!this.aborted) {");
file.WriteLine("            this.aborted = !0;");
file.WriteLine("            this.xhr.abort();");
file.WriteLine("            this.clearTimeout();");
file.WriteLine("            this.emit(\"abort\");");
file.WriteLine("            return this;");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.set = function(field, val) {");
file.WriteLine("        if (isObject(field)) {");
file.WriteLine("            for (var key in field) this.set(key, field[key]);");
file.WriteLine("            return this;");
file.WriteLine("        }");
file.WriteLine("        this._header[field.toLowerCase()] = val;");
file.WriteLine("        this.header[field] = val;");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.unset = function(field) {");
file.WriteLine("        delete this._header[field.toLowerCase()];");
file.WriteLine("        delete this.header[field];");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.getHeader = function(field) {");
file.WriteLine("        return this._header[field.toLowerCase()];");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.type = function(type) {");
file.WriteLine("        this.set(\"Content-Type\", request.types[type] || type);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.parse = function(fn) {");
file.WriteLine("        this._parser = fn;");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.accept = function(type) {");
file.WriteLine("        this.set(\"Accept\", request.types[type] || type);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.auth = function(user, pass) {");
file.WriteLine("        var str = btoa(user + \":\" + pass);");
file.WriteLine("        this.set(\"Authorization\", \"Basic \" + str);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.query = function(val) {");
file.WriteLine("        if (\"string\" != typeof val) val = serialize(val);");
file.WriteLine("        if (val) this._query.push(val);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.field = function(name, val) {");
file.WriteLine("        if (!this._formData) this._formData = new root.FormData();");
file.WriteLine("        this._formData.append(name, val);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.attach = function(field, file, filename) {");
file.WriteLine("        if (!this._formData) this._formData = new root.FormData();");
file.WriteLine("        this._formData.append(field, file, filename || file.name);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.send = function(data) {");
file.WriteLine("        var obj = isObject(data), type = this.getHeader(\"Content-Type\");");
file.WriteLine("        if (obj && isObject(this._data)) for (var key in data) this._data[key] = data[key]; else if (\"string\" == typeof data) {");
file.WriteLine("            if (!type) this.type(\"form\");");
file.WriteLine("            type = this.getHeader(\"Content-Type\");");
file.WriteLine("            if (\"application/x-www-form-urlencoded\" == type) this._data = this._data ? this._data + \"&\" + data : data; else this._data = (this._data || \"\") + data;");
file.WriteLine("        } else this._data = data;");
file.WriteLine("        if (!obj || isHost(data)) return this;");
file.WriteLine("        if (!type) this.type(\"json\");");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.callback = function(err, res) {");
file.WriteLine("        var fn = this._callback;");
file.WriteLine("        this.clearTimeout();");
file.WriteLine("        fn(err, res);");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.crossDomainError = function() {");
file.WriteLine("        var err = new Error(\"Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.\");");
file.WriteLine("        err.crossDomain = !0;");
file.WriteLine("        err.status = this.status;");
file.WriteLine("        err.method = this.method;");
file.WriteLine("        err.url = this.url;");
file.WriteLine("        this.callback(err);");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.timeoutError = function() {");
file.WriteLine("        var timeout = this._timeout, err = new Error(\"timeout of \" + timeout + \"ms exceeded\");");
file.WriteLine("        err.timeout = timeout;");
file.WriteLine("        this.callback(err);");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.withCredentials = function() {");
file.WriteLine("        this._withCredentials = !0;");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.end = function(fn) {");
file.WriteLine("        var self = this, xhr = this.xhr = request.getXHR(), query = this._query.join(\"&\"), timeout = this._timeout, data = this._formData || this._data;");
file.WriteLine("        this._callback = fn || noop;");
file.WriteLine("        xhr.onreadystatechange = function() {");
file.WriteLine("            if (4 == xhr.readyState) {");
file.WriteLine("                var status;");
file.WriteLine("                try {");
file.WriteLine("                    status = xhr.status;");
file.WriteLine("                } catch (e) {");
file.WriteLine("                    status = 0;");
file.WriteLine("                }");
file.WriteLine("                if (0 == status) {");
file.WriteLine("                    if (self.timedout) return self.timeoutError();");
file.WriteLine("                    if (self.aborted) return;");
file.WriteLine("                    return self.crossDomainError();");
file.WriteLine("                }");
file.WriteLine("                self.emit(\"end\");");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        var handleProgress = function(e) {");
file.WriteLine("            if (e.total > 0) e.percent = e.loaded / e.total * 100;");
file.WriteLine("            e.direction = \"download\";");
file.WriteLine("            self.emit(\"progress\", e);");
file.WriteLine("        };");
file.WriteLine("        if (this.hasListeners(\"progress\")) xhr.onprogress = handleProgress;");
file.WriteLine("        try {");
file.WriteLine("            if (xhr.upload && this.hasListeners(\"progress\")) xhr.upload.onprogress = handleProgress;");
file.WriteLine("        } catch (e) {}");
file.WriteLine("        if (timeout && !this._timer) this._timer = setTimeout(function() {");
file.WriteLine("            self.timedout = !0;");
file.WriteLine("            self.abort();");
file.WriteLine("        }, timeout);");
file.WriteLine("        if (query) {");
file.WriteLine("            query = request.serializeObject(query);");
file.WriteLine("            this.url += ~this.url.indexOf(\"?\") ? \"&\" + query : \"?\" + query;");
file.WriteLine("        }");
file.WriteLine("        xhr.open(this.method, this.url, !0);");
file.WriteLine("        if (this._withCredentials) xhr.withCredentials = !0;");
file.WriteLine("        if (\"GET\" != this.method && \"HEAD\" != this.method && \"string\" != typeof data && !isHost(data)) {");
file.WriteLine("            var contentType = this.getHeader(\"Content-Type\"), serialize = this._parser || request.serialize[contentType ? contentType.split(\";\")[0] : \"\"];");
file.WriteLine("            if (!serialize && isJSON(contentType)) serialize = request.serialize[\"application/json\"];");
file.WriteLine("            if (serialize) data = serialize(data);");
file.WriteLine("        }");
file.WriteLine("        for (var field in this.header) if (null != this.header[field]) xhr.setRequestHeader(field, this.header[field]);");
file.WriteLine("        this.emit(\"request\", this);");
file.WriteLine("        xhr.send(void 0 !== data ? data : null);");
file.WriteLine("        return this;");
file.WriteLine("    };");
file.WriteLine("    Request.prototype.then = function(fulfill, reject) {");
file.WriteLine("        return this.end(function(err, res) {");
file.WriteLine("            err ? reject(err) : fulfill(res);");
file.WriteLine("        });");
file.WriteLine("    };");
file.WriteLine("    request.Request = Request;");
file.WriteLine("    request.get = function(url, data, fn) {");
file.WriteLine("        var req = request(\"GET\", url);");
file.WriteLine("        if (\"function\" == typeof data) fn = data, data = null;");
file.WriteLine("        if (data) req.query(data);");
file.WriteLine("        if (fn) req.end(fn);");
file.WriteLine("        return req;");
file.WriteLine("    };");
file.WriteLine("    request.head = function(url, data, fn) {");
file.WriteLine("        var req = request(\"HEAD\", url);");
file.WriteLine("        if (\"function\" == typeof data) fn = data, data = null;");
file.WriteLine("        if (data) req.send(data);");
file.WriteLine("        if (fn) req.end(fn);");
file.WriteLine("        return req;");
file.WriteLine("    };");
file.WriteLine("    request.del = del;");
file.WriteLine("    request[\"delete\"] = del;");
file.WriteLine("    request.patch = function(url, data, fn) {");
file.WriteLine("        var req = request(\"PATCH\", url);");
file.WriteLine("        if (\"function\" == typeof data) fn = data, data = null;");
file.WriteLine("        if (data) req.send(data);");
file.WriteLine("        if (fn) req.end(fn);");
file.WriteLine("        return req;");
file.WriteLine("    };");
file.WriteLine("    request.post = function(url, data, fn) {");
file.WriteLine("        var req = request(\"POST\", url);");
file.WriteLine("        if (\"function\" == typeof data) fn = data, data = null;");
file.WriteLine("        if (data) req.send(data);");
file.WriteLine("        if (fn) req.end(fn);");
file.WriteLine("        return req;");
file.WriteLine("    };");
file.WriteLine("    request.put = function(url, data, fn) {");
file.WriteLine("        var req = request(\"PUT\", url);");
file.WriteLine("        if (\"function\" == typeof data) fn = data, data = null;");
file.WriteLine("        if (data) req.send(data);");
file.WriteLine("        if (fn) req.end(fn);");
file.WriteLine("        return req;");
file.WriteLine("    };");
file.WriteLine("    module.exports = request;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.startDriverPack = undefined;");
file.WriteLine("    var _system = __webpack_require__(1), _wget = __webpack_require__(22), _wget2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_wget), _helpers = __webpack_require__(81);");
file.WriteLine("    exports.startDriverPack = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("            var events, dirPath;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    events = {");
file.WriteLine("                        beforeDownloading: function() {},");
file.WriteLine("                        afterDownloading: function() {}");
file.WriteLine("                    };");
file.WriteLine("                    dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                    _context.next = 4;");
file.WriteLine("                    return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                        link: \"http://dl.drp.su/17-online/DriverPack-17-Online.exe\"");
file.WriteLine("                    } ]);");
file.WriteLine("");
file.WriteLine("                  case 4:");
file.WriteLine("                    (0, _helpers.startCommand)('\"' + dirPath + '\\\\DriverPack-17-Online.exe\" /S');");
file.WriteLine("");
file.WriteLine("                  case 5:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function() {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.sendRequest = undefined;");
file.WriteLine("    var _system = __webpack_require__(1);");
file.WriteLine("    exports.sendRequest = function(url, callback) {");
file.WriteLine("        var req = (0, _system.getXMLHttp)();");
file.WriteLine("        if (req) {");
file.WriteLine("            req.open(\"GET\", url, !0);");
file.WriteLine("            req.onreadystatechange = function() {");
file.WriteLine("                if (4 === req.readyState) if (200 === req.status) callback(req.responseText);");
file.WriteLine("            };");
file.WriteLine("            req.send();");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getInstallationDate = exports.runFromNewPlace = exports.updateApplicationFiles = exports.fixUninstallRegistryKey = exports.copyAppFiles = exports.removeAppFolder = exports.isRunFromProgramFiles = exports.isRunFromInstalled = undefined;");
file.WriteLine("    var _config = __webpack_require__(6), _system = __webpack_require__(1), _paths = __webpack_require__(57), _fso = __webpack_require__(80), isRunFromInstalled = exports.isRunFromInstalled = function() {");
file.WriteLine("        return -1 !== _system.WshShell.CurrentDirectory.indexOf(_paths.AppPathRoot);");
file.WriteLine("    }, updateApplicationFiles = (exports.isRunFromProgramFiles = function() {");
file.WriteLine("        return -1 !== _system.WshShell.CurrentDirectory.indexOf(_paths.ProgramFiles);");
file.WriteLine("    }, exports.removeAppFolder = function() {");
file.WriteLine("        var cmd = 'rd /S /Q \"' + _paths.AppPathRoot + '\" \"' + _paths.AppPath + '\\\\bin\"';");
file.WriteLine("        _system.WshShell.CurrentDirectory = _paths.ProgramFiles;");
file.WriteLine("        _system.WshShell.Run(\"cmd /c \" + cmd, 0, !1);");
file.WriteLine("        _system.WshShell.Run(\"cmd /c ping 127.0.0.1 -n 5 && \" + cmd, 0, !1);");
file.WriteLine("        _system.WshShell.Run('cmd /c del /S /Q /F \"' + _paths.AppPath + '\\\\Icon.ico\" \"' + _paths.AppPath + '\\\\DriverPackNotifier.exe\" \"' + _paths.AppPath + '\\\\Uninstall.exe\"', 0, !1);");
file.WriteLine("    }, exports.copyAppFiles = function() {");
file.WriteLine("        if (!isRunFromInstalled()) {");
file.WriteLine("            _system.WshShell.Run('cmd /c rd /S /Q \"' + _paths.AppPathRoot + '\"', 0, !0);");
file.WriteLine("            _system.fso.CreateFolder(_paths.AppPathRoot);");
file.WriteLine("            var copyFrom = _system.WshShell.CurrentDirectory.replace(/notifier\\\\bin[\\s\\S]*/, \"\");");
file.WriteLine("            copyFrom += \"notifier\";");
file.WriteLine("            _system.WshShell.Run('xcopy \"' + copyFrom + '\" \"' + _paths.AppPathRoot + '\\\\\" /S /E /Y /I', 0, !1);");
file.WriteLine("        }");
file.WriteLine("    }, exports.fixUninstallRegistryKey = function() {");
file.WriteLine("        try {");
file.WriteLine("            _system.WshShell.RegRead(\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\");");
file.WriteLine("        } catch (e) {");
file.WriteLine("            _system.WshShell.RegWrite(\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\", \"\");");
file.WriteLine("        }");
file.WriteLine("    }, exports.updateApplicationFiles = function() {");
file.WriteLine("        var newApp = _paths.AppPath + \"\\\\\" + _config.application.AppExecutable;");
file.WriteLine("        if (!_system.fso.FileExists(newApp)) (0, _fso.copyFiles)(_paths.AppPathRoot, _paths.AppPath, !0);");
file.WriteLine("    });");
file.WriteLine("    exports.runFromNewPlace = function(runFrom) {");
file.WriteLine("        updateApplicationFiles();");
file.WriteLine("        var newApp = _paths.AppPath + \"\\\\\" + _config.application.AppExecutable, runKeys = \"--relaunch true\";");
file.WriteLine("        runKeys += runFrom ? \" --run \" + runFrom : \"\";");
file.WriteLine("        _system.WshShell.Run('\"' + newApp + '\" ' + runKeys, 1, !0);");
file.WriteLine("    }, exports.getInstallationDate = function() {");
file.WriteLine("        var uninstaller = _paths.AppPathRoot + \"\\\\Uninstall.exe\", fileObject = _system.fso.GetFile(uninstaller);");
file.WriteLine("        return new Date(\"\" + fileObject.DateCreated);");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getTimeFromDate = function(d) {");
file.WriteLine("        return (d.getHours() < 10 ? \"0\" : \"\") + d.getHours() + \":\" + (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes() + \":\" + (d.getSeconds() < 10 ? \"0\" : \"\") + d.getSeconds();");
file.WriteLine("    }, exports.formatTime = function(time) {");
file.WriteLine("        var d = new Date(), timeZoneOffset = -d.getTimezoneOffset();");
file.WriteLine("        return \"********\" + time.replace(/:/g, \"\") + \".000000\" + (timeZoneOffset < 0 ? timeZoneOffset : \"+\" + timeZoneOffset);");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.objWMIServiceSC = undefined;");
file.WriteLine("    var _wmi = __webpack_require__(3), _flags = __webpack_require__(43);");
file.WriteLine("    exports.objWMIServiceSC = _wmi.locator.ConnectServer(null, \"root\\\\SecurityCenter\" + (!_flags.isOldOS ? \"2\" : \"\"));");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _logs = __webpack_require__(16), _logs2 = _interopRequireDefault(_logs), _wget = __webpack_require__(22), _wget2 = _interopRequireDefault(_wget), _runCommandAsync = __webpack_require__(59), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _system = __webpack_require__(1), _wmi = __webpack_require__(3), _utils = __webpack_require__(2), statisticsLabel = _statistics2[\"default\"].drpVersion + \" antivirus notification avast\", Antivirus = function() {");
file.WriteLine("        function Antivirus(localeData) {");
file.WriteLine("            _classCallCheck(this, Antivirus);");
file.WriteLine("            this.localeData = localeData;");
file.WriteLine("            this.scanAntiviruses = this.memoize(this.scanAntiviruses);");
file.WriteLine("            this.isSecurityCenterServiceRunning = this.memoize(this.isSecurityCenterServiceRunning);");
file.WriteLine("            this.statisticsIsSent = !1;");
file.WriteLine("        }");
file.WriteLine("        Antivirus.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var avastInstalled;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (this.isSecurityCenterServiceRunning()) {");
file.WriteLine("                            _context.next = 4;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        if (!this.statisticsIsSent) {");
file.WriteLine("                            _statistics2[\"default\"].event({");
file.WriteLine("                                action: \"antivirus security center stopped\",");
file.WriteLine("                                label: statisticsLabel,");
file.WriteLine("                                counters: {");
file.WriteLine("                                    yandex: !0");
file.WriteLine("                                }");
file.WriteLine("                            });");
file.WriteLine("                            this.statisticsIsSent = !0;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 19;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        this.antiviruses = this.scanAntiviruses();");
file.WriteLine("                        _logs2[\"default\"].info(\"monitoring antiviruses scanned\", {");
file.WriteLine("                            antiviruses: this.antiviruses");
file.WriteLine("                        }, \"monitoring:antiviruses:scanned\");");
file.WriteLine("                        if (!this.statisticsIsSent) {");
file.WriteLine("                            this.sendStatistics();");
file.WriteLine("                            this.statisticsIsSent = !0;");
file.WriteLine("                        }");
file.WriteLine("                        if (!(this.antiviruses.length > 0)) {");
file.WriteLine("                            _context.next = 17;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        avastInstalled = this.antiviruses.find(function(antivirus) {");
file.WriteLine("                            return /avast/i.test(antivirus.displayName);");
file.WriteLine("                        });");
file.WriteLine("                        if (avastInstalled) {");
file.WriteLine("                            _context.next = 15;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        if (1 !== this.antiviruses.length || !this.isNotWorking(this.antiviruses[0])) {");
file.WriteLine("                            _context.next = 15;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 13;");
file.WriteLine("                        return this.showConfirm(\"notworking\");");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        _context.next = 15;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 15:");
file.WriteLine("                        _context.next = 19;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 17:");
file.WriteLine("                        _context.next = 19;");
file.WriteLine("                        return this.showConfirm(\"notinstalled\");");
file.WriteLine("");
file.WriteLine("                      case 19:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        Antivirus.prototype.sendStatistics = function() {");
file.WriteLine("            _statistics2[\"default\"].event({");
file.WriteLine("                action: \"antivirus detected count \" + this.antiviruses.length,");
file.WriteLine("                label: statisticsLabel,");
file.WriteLine("                counters: {");
file.WriteLine("                    yandex: !0");
file.WriteLine("                }");
file.WriteLine("            });");
file.WriteLine("            for (var i = 0; i < this.antiviruses.length; i++) {");
file.WriteLine("                var antivirusObj = this.antiviruses[i], antivirusState = this.getAntivirusStatus(antivirusObj), antivirusName = antivirusObj.displayName.toLowerCase();");
file.WriteLine("                if (antivirusState.avActive) _statistics2[\"default\"].event({");
file.WriteLine("                    action: \"antivirus detected active \" + antivirusName,");
file.WriteLine("                    label: statisticsLabel,");
file.WriteLine("                    counters: {");
file.WriteLine("                        yandex: !0");
file.WriteLine("                    }");
file.WriteLine("                }); else _statistics2[\"default\"].event({");
file.WriteLine("                    action: \"antivirus detected not active \" + antivirusName,");
file.WriteLine("                    label: statisticsLabel,");
file.WriteLine("                    counters: {");
file.WriteLine("                        yandex: !0");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("                if (antivirusState.upToDate) _statistics2[\"default\"].event({");
file.WriteLine("                    action: \"antivirus detected uptodate \" + antivirusName,");
file.WriteLine("                    label: statisticsLabel,");
file.WriteLine("                    counters: {");
file.WriteLine("                        yandex: !0");
file.WriteLine("                    }");
file.WriteLine("                }); else _statistics2[\"default\"].event({");
file.WriteLine("                    action: \"antivirus detected not uptodate \" + antivirusName,");
file.WriteLine("                    label: statisticsLabel,");
file.WriteLine("                    counters: {");
file.WriteLine("                        yandex: !0");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.getNotificationLang = function() {");
file.WriteLine("            var _localeData = this.localeData, lang = _localeData.lang, countryCode = _localeData.countryCode;");
file.WriteLine("            if (\"ru\" === lang || \"ru\" === countryCode.toLowerCase()) return \"ru\"; else if (\"pt\" === lang || \"pt\" === countryCode.toLowerCase() || \"br\" === countryCode.toLowerCase()) return \"pt\"; else if (\"es\" === lang || \"es\" === countryCode.toLowerCase() || \"mx\" === countryCode.toLowerCase() || \"pe\" === countryCode.toLowerCase() || \"ar\" === countryCode.toLowerCase() || \"sv\" === countryCode.toLowerCase()) return \"es\"; else if (\"de\" === lang || \"de\" === countryCode.toLowerCase() || \"ch\" === countryCode.toLowerCase() || \"at\" === countryCode.toLowerCase()) return \"de\"; else if (\"it\" === lang || \"it\" === countryCode.toLowerCase()) return \"it\"; else return \"en\";");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.showConfirm = function() {");
file.WriteLine("            function showConfirm(_x) {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(problem) {");
file.WriteLine("                var _localeData2, lang, countryCode, notification, status, params;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _localeData2 = this.localeData, lang = _localeData2.lang, countryCode = _localeData2.countryCode;");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"antivirus-\" + problem + \".2\", {");
file.WriteLine("                            lang: this.getNotificationLang()");
file.WriteLine("                        });");
file.WriteLine("                        if (1 === notification.get(\"counter\")) this.sendStatistics();");
file.WriteLine("                        _context2.next = 5;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        status = _context2.sent;");
file.WriteLine("                        if (\"notactive\" !== problem && \"ok\" === status) {");
file.WriteLine("                            params = [ \"--antivirus\", problem, \"--lang\", lang, \"--countryCode\", countryCode ].join(\" \");");
file.WriteLine("                            _system.WshShell.Run('\"' + _utils.AppPath + '\\\\Uninstall.exe\" ' + params, 3, !1);");
file.WriteLine("                        }");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return showConfirm;");
file.WriteLine("        }();");
file.WriteLine("        Antivirus.prototype.wrapInCmd = function(command) {");
file.WriteLine("            return 'cmd /c \"' + command + '\"';");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.memoize = function(func) {");
file.WriteLine("            var _this = this, cache = void 0;");
file.WriteLine("            return function() {");
file.WriteLine("                if (!cache) cache = func.call(_this);");
file.WriteLine("                return cache;");
file.WriteLine("            };");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.clearUndefVar = function(varib) {");
file.WriteLine("            try {");
file.WriteLine("                varib += \"\";");
file.WriteLine("                return varib.replace(\"null\", \"\").replace(\"undefined\", \"\");");
file.WriteLine("            } catch (err) {");
file.WriteLine("                return \"\";");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.getSystemWMIScalar = function(query) {");
file.WriteLine("            try {");
file.WriteLine("                var colItems = _wmi.objWMIService.ExecQuery(query);");
file.WriteLine("                if (colItems.count) {");
file.WriteLine("                    return new Enumerator(colItems).item();");
file.WriteLine("                }");
file.WriteLine("            } catch (err) {}");
file.WriteLine("            return null;");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.isSecurityCenterServiceRunning = function() {");
file.WriteLine("            return \"Running\" === this.getSystemWMIScalar('SELECT State, Name FROM Win32_Service WHERE Name=\"wscsvc\"').State;");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.scanAntiviruses = function() {");
file.WriteLine("            var _this2 = this, antivirus = [], objWMIServiceAntivir = _wmi.locator.ConnectServer(null, \"\\\\root\\\\SecurityCenter\" + (!_utils.isOldOS ? \"2\" : \"\")), colItems = objWMIServiceAntivir.ExecQuery(\"SELECT * FROM AntiVirusProduct\", \"WQL\");");
file.WriteLine("            (0, _system.iterate)(colItems, function(objItem) {");
file.WriteLine("                if (\"Windows Defender\" !== objItem.displayName && \"Microsoft Security Essentials\" !== objItem.displayName) antivirus.push({");
file.WriteLine("                    companyName: _this2.clearUndefVar(objItem.companyName),");
file.WriteLine("                    displayName: _this2.clearUndefVar(objItem.displayName),");
file.WriteLine("                    productState: _this2.clearUndefVar(objItem.productState),");
file.WriteLine("                    instanceGuid: _this2.clearUndefVar(objItem.instanceGuid),");
file.WriteLine("                    onAccessScanningEnabled: _this2.clearUndefVar(objItem.onAccessScanningEnabled),");
file.WriteLine("                    pathToSignedProductExe: _this2.clearUndefVar(objItem.pathToSignedProductExe),");
file.WriteLine("                    productHasNotifiedUser: _this2.clearUndefVar(objItem.productHasNotifiedUser),");
file.WriteLine("                    productUptoDate: _this2.clearUndefVar(objItem.productUptoDate),");
file.WriteLine("                    productWantsWscNotifications: _this2.clearUndefVar(objItem.productWantsWscNotifications),");
file.WriteLine("                    versionNumber: _this2.clearUndefVar(objItem.versionNumber)");
file.WriteLine("                });");
file.WriteLine("            });");
file.WriteLine("            return antivirus;");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.hasAntiviruses = function() {");
file.WriteLine("            try {");
file.WriteLine("                return this.isSecurityCenterServiceRunning() && this.scanAntiviruses().length > 0;");
file.WriteLine("            } catch (err) {");
file.WriteLine("                return !0;");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.isNotWorking = function() {");
file.WriteLine("            var antivirusObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.antiviruses[0], antivirusState = this.getAntivirusStatus(antivirusObj);");
file.WriteLine("            return !antivirusState.upToDate || !antivirusState.avActive;");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.getAntivirusStatus = function() {");
file.WriteLine("            var antivirusObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.antiviruses[0];");
file.WriteLine("            if (!_utils.isOldOS) {");
file.WriteLine("                var productState = parseInt(antivirusObj.productState, 10).toString(16), upToDateState = productState.substring(productState.length - 2, productState.length), avActiveState = productState.substring(productState.length - 4, productState.length - 2);");
file.WriteLine("                return {");
file.WriteLine("                    upToDate: \"00\" === upToDateState,");
file.WriteLine("                    avActive: \"10\" === avActiveState || \"11\" === avActiveState");
file.WriteLine("                };");
file.WriteLine("            } else {");
file.WriteLine("                return {");
file.WriteLine("                    upToDate: \"false\" !== antivirusObj.productUptodate,");
file.WriteLine("                    avActive: \"false\" !== antivirusObj.onAccessScanningEnabled");
file.WriteLine("                };");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Antivirus.prototype.installAntivirus = function() {");
file.WriteLine("            function installAntivirus(_x4) {");
file.WriteLine("                return _ref3.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(_ref4) {");
file.WriteLine("                var link, keys, fileName, targetFolder, exePath, events, exitCode, countryCode = (_ref4.lang, ");
file.WriteLine("                _ref4.countryCode);");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context3.prev = 0;");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"antivirus installation started\",");
file.WriteLine("                            label: statisticsLabel");
file.WriteLine("                        }, [], !0);");
file.WriteLine("                        link = \"ru\" === countryCode.toLowerCase() ? \"http://download.drp.su/soft/AvastAntivirusB.exe\" : \"http://download.drp.su/soft/AvastAntivirusWorldwideF.exe\";");
file.WriteLine("                        keys = \"/silent\";");
file.WriteLine("                        fileName = link.split(\"/\").slice(-1);");
file.WriteLine("                        targetFolder = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                        exePath = targetFolder + \"\\\\\" + fileName;");
file.WriteLine("                        events = {");
file.WriteLine("                            beforeDownloading: function() {},");
file.WriteLine("                            afterDownloading: function() {}");
file.WriteLine("                        };");
file.WriteLine("                        _context3.next = 10;");
file.WriteLine("                        return _wget2[\"default\"].downloadFiles(events, targetFolder, [ {");
file.WriteLine("                            link: link");
file.WriteLine("                        } ]);");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        _context3.next = 12;");
file.WriteLine("                        return (0, _runCommandAsync.runCommandAsync)({");
file.WriteLine("                            command: '\"' + exePath + '\" ' + keys,");
file.WriteLine("                            checkInterval: 2e3");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 12:");
file.WriteLine("                        exitCode = _context3.sent;");
file.WriteLine("                        0 === exitCode ? _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"antivirus installation completed\",");
file.WriteLine("                            label: statisticsLabel");
file.WriteLine("                        }, [], !0) : _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"antivirus installation failed\",");
file.WriteLine("                            label: statisticsLabel");
file.WriteLine("                        }, [], !0);");
file.WriteLine("                        _context3.next = 19;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 16:");
file.WriteLine("                        _context3.prev = 16;");
file.WriteLine("                        _context3.t0 = _context3[\"catch\"](0);");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"antivirus installation failed\",");
file.WriteLine("                            label: statisticsLabel");
file.WriteLine("                        }, [], !0);");
file.WriteLine("");
file.WriteLine("                      case 19:");
file.WriteLine("                        _context3.prev = 19;");
file.WriteLine("                        setTimeout(function() {");
file.WriteLine("                            window.close();");
file.WriteLine("                        }, 3e3);");
file.WriteLine("                        return _context3.finish(19);");
file.WriteLine("");
file.WriteLine("                      case 22:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this, [ [ 0, 16, 19, 22 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return installAntivirus;");
file.WriteLine("        }();");
file.WriteLine("        return Antivirus;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Antivirus;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function webpackContext(req) {");
file.WriteLine("        return __webpack_require__(webpackContextResolve(req));");
file.WriteLine("    }");
file.WriteLine("    function webpackContextResolve(req) {");
file.WriteLine("        var id = map[req];");
file.WriteLine("        if (!(id + 1)) throw new Error(\"Cannot find module '\" + req + \"'.\");");
file.WriteLine("        return id;");
file.WriteLine("    }");
file.WriteLine("    var map = {");
file.WriteLine("        \"./antivirus-notactive.2\": 104,");
file.WriteLine("        \"./antivirus-notactive.2.yaml\": 104,");
file.WriteLine("        \"./antivirus-notinstalled.2\": 83,");
file.WriteLine("        \"./antivirus-notinstalled.2.js\": 83,");
file.WriteLine("        \"./antivirus-notworking.2\": 84,");
file.WriteLine("        \"./antivirus-notworking.2.js\": 84,");
file.WriteLine("        \"./antivirus-working.2\": 85,");
file.WriteLine("        \"./antivirus-working.2.js\": 85,");
file.WriteLine("        \"./batterypoorcondition\": 105,");
file.WriteLine("        \"./batterypoorcondition.yaml\": 105,");
file.WriteLine("        \"./cloud-update\": 106,");
file.WriteLine("        \"./cloud-update.yaml\": 106,");
file.WriteLine("        \"./custdev-invite\": 86,");
file.WriteLine("        \"./custdev-invite.js\": 86,");
file.WriteLine("        \"./driverpack-drivers\": 87,");
file.WriteLine("        \"./driverpack-drivers.js\": 87,");
file.WriteLine("        \"./driverpack-new-program-harmful\": 88,");
file.WriteLine("        \"./driverpack-new-program-harmful.js\": 88,");
file.WriteLine("        \"./driverpack-new-program-neutral\": 89,");
file.WriteLine("        \"./driverpack-new-program-neutral.js\": 89,");
file.WriteLine("        \"./driverpack-new-program-useful\": 90,");
file.WriteLine("        \"./driverpack-new-program-useful.js\": 90,");
file.WriteLine("        \"./driverpack-protect\": 91,");
file.WriteLine("        \"./driverpack-protect.js\": 91,");
file.WriteLine("        \"./fileassociation\": 92,");
file.WriteLine("        \"./fileassociation.js\": 92,");
file.WriteLine("        \"./newbsod\": 93,");
file.WriteLine("        \"./newbsod.js\": 93,");
file.WriteLine("        \"./opera-import\": 94,");
file.WriteLine("        \"./opera-import.js\": 94,");
file.WriteLine("        \"./opera-unused\": 95,");
file.WriteLine("        \"./opera-unused.js\": 95,");
file.WriteLine("        \"./opera-vpn\": 107,");
file.WriteLine("        \"./opera-vpn.yaml\": 107,");
file.WriteLine("        \"./opera-youtube\": 96,");
file.WriteLine("        \"./opera-youtube.js\": 96,");
file.WriteLine("        \"./otherdrivesfreespace\": 97,");
file.WriteLine("        \"./otherdrivesfreespace.js\": 97,");
file.WriteLine("        \"./partnersoft\": 100,");
file.WriteLine("        \"./partnersoft-browser\": 98,");
file.WriteLine("        \"./partnersoft-browser.js\": 98,");
file.WriteLine("        \"./partnersoft-system\": 99,");
file.WriteLine("        \"./partnersoft-system.js\": 99,");
file.WriteLine("        \"./partnersoft.js\": 100,");
file.WriteLine("        \"./retention\": 108,");
file.WriteLine("        \"./retention.yaml\": 108,");
file.WriteLine("        \"./scheduler-uac\": 109,");
file.WriteLine("        \"./scheduler-uac.yaml\": 109,");
file.WriteLine("        \"./smartfailed\": 101,");
file.WriteLine("        \"./smartfailed.js\": 101,");
file.WriteLine("        \"./systemdrivefreespace\": 102,");
file.WriteLine("        \"./systemdrivefreespace.js\": 102,");
file.WriteLine("        \"./uninstall\": 103,");
file.WriteLine("        \"./uninstall.js\": 103");
file.WriteLine("    };");
file.WriteLine("    webpackContext.keys = function() {");
file.WriteLine("        return Object.keys(map);");
file.WriteLine("    };");
file.WriteLine("    webpackContext.resolve = webpackContextResolve;");
file.WriteLine("    module.exports = webpackContext;");
file.WriteLine("    webpackContext.id = 179;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var appleNotebooks = __webpack_require__(228), badNotebooks = __webpack_require__(229);");
file.WriteLine("    exports.appleNotebooks = appleNotebooks;");
file.WriteLine("    exports.badNotebooks = badNotebooks;");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var _ref$Vendor = _ref.Vendor, Vendor = _ref$Vendor === undefined ? \"Noname\" : _ref$Vendor, _ref$Name = _ref.Name, Name = _ref$Name === undefined ? \"Unknown\" : _ref$Name, Version = _ref.Version;");
file.WriteLine("        Name = Name.trim();");
file.WriteLine("        Vendor = Vendor.toLowerCase();");
file.WriteLine("        var Models = [];");
file.WriteLine("        switch (Vendor) {");
file.WriteLine("          case \"lenovo\":");
file.WriteLine("            Version = Version ? Version.trim() : \"\";");
file.WriteLine("            Models = [ Version.replace(/^lenovo[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"sony\":");
file.WriteLine("            Models = [ \"VAIO \" + Name ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"samsung\":");
file.WriteLine("          case \"bangho\":");
file.WriteLine("          case \"clevo\":");
file.WriteLine("          case \"quanta\":");
file.WriteLine("            Models = Name.split(\"/\");");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"msi\":");
file.WriteLine("            Models = Name.split(\"/\").map(function(name) {");
file.WriteLine("                return name.replace(/^msi notebook[\\s-]*/i, \"\");");
file.WriteLine("            });");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"apple\":");
file.WriteLine("            Models = appleNotebooks[Name] || [ Name ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"dell\":");
file.WriteLine("            Models = [ Name.replace(/^dell system[\\s-]*/i, \"\").replace(/^dell[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"emachines\":");
file.WriteLine("            Models = [ Name.replace(/^emachines[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"hp\":");
file.WriteLine("            Models = [ Name.replace(/^hp[\\s-]*/i, \"\").replace(/[\\s-]*notebook pc/i, \"\").replace(/notebook[\\s-]*$/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"toshiba\":");
file.WriteLine("            Models = [ Name.replace(/^toshiba[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"nec\":");
file.WriteLine("            Models = [ Name.replace(/^nec[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"hcl\":");
file.WriteLine("            Models = [ Name.replace(/^hcl[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"casper\":");
file.WriteLine("            Models = [ Name.replace(/^casper[\\s-]*/i, \"\").replace(/[\\s-]*notebook$/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"alienware\":");
file.WriteLine("            Models = [ Name.replace(/^alienware[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"axioo\":");
file.WriteLine("            Models = [ Name.replace(/[\\s-]*model$/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"depo\":");
file.WriteLine("            Models = [ Name.replace(/^depo[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"fujitsu\":");
file.WriteLine("            Models = [ Name.replace(/[\\s-]*notebook[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"gateway\":");
file.WriteLine("            Models = [ Name.replace(/^gateway[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"positivo\":");
file.WriteLine("            Models = [ Name.replace(/^positivo[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"vestel\":");
file.WriteLine("            Models = [ Name.replace(/^vestel[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"vit\":");
file.WriteLine("            Models = [ Name.replace(/^vit[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"aquarius\":");
file.WriteLine("            Models = [ Name.replace(/^aquarius[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"archos\":");
file.WriteLine("            Models = [ Name.replace(/^archos[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"zoostorm\":");
file.WriteLine("            Models = [ Name.replace(/^zoostorm[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case \"zyrex\":");
file.WriteLine("            Models = [ Name.replace(/^zyrex[\\s-]*/i, \"\") ];");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            Models = [ Name ];");
file.WriteLine("        }");
file.WriteLine("        Models = Models.map(function(model) {");
file.WriteLine("            if (badNotebooks[Vendor] && badNotebooks[Vendor].includes(model)) return \"Unknown\"; else return model;");
file.WriteLine("        });");
file.WriteLine("        return Models.join(\"/\");");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.vendorsDict = exports.trimVendorName = undefined;");
file.WriteLine("    var _basicNBVendors = __webpack_require__(493), _basicNBVendors2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_basicNBVendors), trimVendorName = __webpack_require__(131);");
file.WriteLine("    exports.trimVendorName = trimVendorName;");
file.WriteLine("    var vendorsDict = exports.vendorsDict = {};");
file.WriteLine("    _basicNBVendors2[\"default\"].forEach(function(_ref) {");
file.WriteLine("        var name = _ref.name;");
file.WriteLine("        _ref.altNames.forEach(function(altName) {");
file.WriteLine("            vendorsDict[altName] = name;");
file.WriteLine("        });");
file.WriteLine("    });");
file.WriteLine("    exports[\"default\"] = function(vendor) {");
file.WriteLine("        vendor = trimVendorName(vendor);");
file.WriteLine("        return vendorsDict[vendor] ? vendorsDict[vendor] : vendor;");
file.WriteLine("    };");
file.WriteLine("}, , , , , , , , , , , , , , , , , , , , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    (function(module, global) {");
file.WriteLine("        var __WEBPACK_AMD_DEFINE_RESULT__;");
file.WriteLine("        (function() {");
file.WriteLine("            function baseCompareAscending(value, other) {");
file.WriteLine("                if (value !== other) {");
file.WriteLine("                    var valIsNull = null === value, valIsUndef = value === undefined, valIsReflexive = value === value, othIsNull = null === other, othIsUndef = other === undefined, othIsReflexive = other === other;");
file.WriteLine("                    if (value > other && !othIsNull || !valIsReflexive || valIsNull && !othIsUndef && othIsReflexive || valIsUndef && othIsReflexive) return 1;");
file.WriteLine("                    if (value < other && !valIsNull || !othIsReflexive || othIsNull && !valIsUndef && valIsReflexive || othIsUndef && valIsReflexive) return -1;");
file.WriteLine("                }");
file.WriteLine("                return 0;");
file.WriteLine("            }");
file.WriteLine("            function baseFindIndex(array, predicate, fromRight) {");
file.WriteLine("                for (var length = array.length, index = fromRight ? length : -1; fromRight ? index-- : ++index < length; ) if (predicate(array[index], index, array)) return index;");
file.WriteLine("                return -1;");
file.WriteLine("            }");
file.WriteLine("            function baseIndexOf(array, value, fromIndex) {");
file.WriteLine("                if (value !== value) return indexOfNaN(array, fromIndex);");
file.WriteLine("                for (var index = fromIndex - 1, length = array.length; ++index < length; ) if (array[index] === value) return index;");
file.WriteLine("                return -1;");
file.WriteLine("            }");
file.WriteLine("            function baseIsFunction(value) {");
file.WriteLine("                return \"function\" == typeof value || !1;");
file.WriteLine("            }");
file.WriteLine("            function baseToString(value) {");
file.WriteLine("                return null == value ? \"\" : value + \"\";");
file.WriteLine("            }");
file.WriteLine("            function charsLeftIndex(string, chars) {");
file.WriteLine("                for (var index = -1, length = string.length; ++index < length && chars.indexOf(string.charAt(index)) > -1; ) ;");
file.WriteLine("                return index;");
file.WriteLine("            }");
file.WriteLine("            function charsRightIndex(string, chars) {");
file.WriteLine("                for (var index = string.length; index-- && chars.indexOf(string.charAt(index)) > -1; ) ;");
file.WriteLine("                return index;");
file.WriteLine("            }");
file.WriteLine("            function compareAscending(object, other) {");
file.WriteLine("                return baseCompareAscending(object.criteria, other.criteria) || object.index - other.index;");
file.WriteLine("            }");
file.WriteLine("            function compareMultiple(object, other, orders) {");
file.WriteLine("                for (var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length; ++index < length; ) {");
file.WriteLine("                    var result = baseCompareAscending(objCriteria[index], othCriteria[index]);");
file.WriteLine("                    if (result) {");
file.WriteLine("                        if (index >= ordersLength) return result;");
file.WriteLine("                        var order = orders[index];");
file.WriteLine("                        return result * (\"asc\" === order || !0 === order ? 1 : -1);");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                return object.index - other.index;");
file.WriteLine("            }");
file.WriteLine("            function deburrLetter(letter) {");
file.WriteLine("                return deburredLetters[letter];");
file.WriteLine("            }");
file.WriteLine("            function escapeHtmlChar(chr) {");
file.WriteLine("                return htmlEscapes[chr];");
file.WriteLine("            }");
file.WriteLine("            function escapeRegExpChar(chr, leadingChar, whitespaceChar) {");
file.WriteLine("                if (leadingChar) chr = regexpEscapes[chr]; else if (whitespaceChar) chr = stringEscapes[chr];");
file.WriteLine("                return \"\\\\\" + chr;");
file.WriteLine("            }");
file.WriteLine("            function escapeStringChar(chr) {");
file.WriteLine("                return \"\\\\\" + stringEscapes[chr];");
file.WriteLine("            }");
file.WriteLine("            function indexOfNaN(array, fromIndex, fromRight) {");
file.WriteLine("                for (var length = array.length, index = fromIndex + (fromRight ? 0 : -1); fromRight ? index-- : ++index < length; ) {");
file.WriteLine("                    var other = array[index];");
file.WriteLine("                    if (other !== other) return index;");
file.WriteLine("                }");
file.WriteLine("                return -1;");
file.WriteLine("            }");
file.WriteLine("            function isObjectLike(value) {");
file.WriteLine("                return !!value && \"object\" == typeof value;");
file.WriteLine("            }");
file.WriteLine("            function isSpace(charCode) {");
file.WriteLine("                return charCode <= 160 && charCode >= 9 && charCode <= 13 || 32 == charCode || 160 == charCode || 5760 == charCode || 6158 == charCode || charCode >= 8192 && (charCode <= 8202 || 8232 == charCode || 8233 == charCode || 8239 == charCode || 8287 == charCode || 12288 == charCode || 65279 == charCode);");
file.WriteLine("            }");
file.WriteLine("            function replaceHolders(array, placeholder) {");
file.WriteLine("                for (var index = -1, length = array.length, resIndex = -1, result = []; ++index < length; ) if (array[index] === placeholder) {");
file.WriteLine("                    array[index] = PLACEHOLDER;");
file.WriteLine("                    result[++resIndex] = index;");
file.WriteLine("                }");
file.WriteLine("                return result;");
file.WriteLine("            }");
file.WriteLine("            function sortedUniq(array, iteratee) {");
file.WriteLine("                for (var seen, index = -1, length = array.length, resIndex = -1, result = []; ++index < length; ) {");
file.WriteLine("                    var value = array[index], computed = iteratee ? iteratee(value, index, array) : value;");
file.WriteLine("                    if (!index || seen !== computed) {");
file.WriteLine("                        seen = computed;");
file.WriteLine("                        result[++resIndex] = value;");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                return result;");
file.WriteLine("            }");
file.WriteLine("            function trimmedLeftIndex(string) {");
file.WriteLine("                for (var index = -1, length = string.length; ++index < length && isSpace(string.charCodeAt(index)); ) ;");
file.WriteLine("                return index;");
file.WriteLine("            }");
file.WriteLine("            function trimmedRightIndex(string) {");
file.WriteLine("                for (var index = string.length; index-- && isSpace(string.charCodeAt(index)); ) ;");
file.WriteLine("                return index;");
file.WriteLine("            }");
file.WriteLine("            function unescapeHtmlChar(chr) {");
file.WriteLine("                return htmlUnescapes[chr];");
file.WriteLine("            }");
file.WriteLine("            function runInContext(context) {");
file.WriteLine("                function lodash(value) {");
file.WriteLine("                    if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {");
file.WriteLine("                        if (value instanceof LodashWrapper) return value;");
file.WriteLine("                        if (hasOwnProperty.call(value, \"__chain__\") && hasOwnProperty.call(value, \"__wrapped__\")) return wrapperClone(value);");
file.WriteLine("                    }");
file.WriteLine("                    return new LodashWrapper(value);");
file.WriteLine("                }");
file.WriteLine("                function baseLodash() {}");
file.WriteLine("                function LodashWrapper(value, chainAll, actions) {");
file.WriteLine("                    this.__wrapped__ = value;");
file.WriteLine("                    this.__actions__ = actions || [];");
file.WriteLine("                    this.__chain__ = !!chainAll;");
file.WriteLine("                }");
file.WriteLine("                function LazyWrapper(value) {");
file.WriteLine("                    this.__wrapped__ = value;");
file.WriteLine("                    this.__actions__ = [];");
file.WriteLine("                    this.__dir__ = 1;");
file.WriteLine("                    this.__filtered__ = !1;");
file.WriteLine("                    this.__iteratees__ = [];");
file.WriteLine("                    this.__takeCount__ = POSITIVE_INFINITY;");
file.WriteLine("                    this.__views__ = [];");
file.WriteLine("                }");
file.WriteLine("                function lazyClone() {");
file.WriteLine("                    var result = new LazyWrapper(this.__wrapped__);");
file.WriteLine("                    result.__actions__ = arrayCopy(this.__actions__);");
file.WriteLine("                    result.__dir__ = this.__dir__;");
file.WriteLine("                    result.__filtered__ = this.__filtered__;");
file.WriteLine("                    result.__iteratees__ = arrayCopy(this.__iteratees__);");
file.WriteLine("                    result.__takeCount__ = this.__takeCount__;");
file.WriteLine("                    result.__views__ = arrayCopy(this.__views__);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function lazyReverse() {");
file.WriteLine("                    if (this.__filtered__) {");
file.WriteLine("                        var result = new LazyWrapper(this);");
file.WriteLine("                        result.__dir__ = -1;");
file.WriteLine("                        result.__filtered__ = !0;");
file.WriteLine("                    } else {");
file.WriteLine("                        result = this.clone();");
file.WriteLine("                        result.__dir__ *= -1;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function lazyValue() {");
file.WriteLine("                    var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);");
file.WriteLine("                    if (!isArr || arrLength < LARGE_ARRAY_SIZE || arrLength == length && takeCount == length) return baseWrapperValue(isRight && isArr ? array.reverse() : array, this.__actions__);");
file.WriteLine("                    var result = [];");
file.WriteLine("                    outer: for (;length-- && resIndex < takeCount; ) {");
file.WriteLine("                        index += dir;");
file.WriteLine("                        for (var iterIndex = -1, value = array[index]; ++iterIndex < iterLength; ) {");
file.WriteLine("                            var data = iteratees[iterIndex], iteratee = data.iteratee, type = data.type, computed = iteratee(value);");
file.WriteLine("                            if (type == LAZY_MAP_FLAG) value = computed; else if (!computed) if (type == LAZY_FILTER_FLAG) continue outer; else break outer;");
file.WriteLine("                        }");
file.WriteLine("                        result[resIndex++] = value;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function MapCache() {");
file.WriteLine("                    this.__data__ = {};");
file.WriteLine("                }");
file.WriteLine("                function mapDelete(key) {");
file.WriteLine("                    return this.has(key) && delete this.__data__[key];");
file.WriteLine("                }");
file.WriteLine("                function mapGet(key) {");
file.WriteLine("                    return \"__proto__\" == key ? undefined : this.__data__[key];");
file.WriteLine("                }");
file.WriteLine("                function mapHas(key) {");
file.WriteLine("                    return \"__proto__\" != key && hasOwnProperty.call(this.__data__, key);");
file.WriteLine("                }");
file.WriteLine("                function mapSet(key, value) {");
file.WriteLine("                    if (\"__proto__\" != key) this.__data__[key] = value;");
file.WriteLine("                    return this;");
file.WriteLine("                }");
file.WriteLine("                function SetCache(values) {");
file.WriteLine("                    var length = values ? values.length : 0;");
file.WriteLine("                    this.data = {");
file.WriteLine("                        hash: nativeCreate(null),");
file.WriteLine("                        set: new Set()");
file.WriteLine("                    };");
file.WriteLine("                    for (;length--; ) this.push(values[length]);");
file.WriteLine("                }");
file.WriteLine("                function cacheIndexOf(cache, value) {");
file.WriteLine("                    var data = cache.data;");
file.WriteLine("                    return (\"string\" == typeof value || isObject(value) ? data.set.has(value) : data.hash[value]) ? 0 : -1;");
file.WriteLine("                }");
file.WriteLine("                function cachePush(value) {");
file.WriteLine("                    var data = this.data;");
file.WriteLine("                    if (\"string\" == typeof value || isObject(value)) data.set.add(value); else data.hash[value] = !0;");
file.WriteLine("                }");
file.WriteLine("                function arrayConcat(array, other) {");
file.WriteLine("                    for (var index = -1, length = array.length, othIndex = -1, othLength = other.length, result = Array(length + othLength); ++index < length; ) result[index] = array[index];");
file.WriteLine("                    for (;++othIndex < othLength; ) result[index++] = other[othIndex];");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function arrayCopy(source, array) {");
file.WriteLine("                    var index = -1, length = source.length;");
file.WriteLine("                    array || (array = Array(length));");
file.WriteLine("                    for (;++index < length; ) array[index] = source[index];");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function arrayEach(array, iteratee) {");
file.WriteLine("                    for (var index = -1, length = array.length; ++index < length && !1 !== iteratee(array[index], index, array); ) ;");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function arrayEachRight(array, iteratee) {");
file.WriteLine("                    for (var length = array.length; length-- && !1 !== iteratee(array[length], length, array); ) ;");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function arrayEvery(array, predicate) {");
file.WriteLine("                    for (var index = -1, length = array.length; ++index < length; ) if (!predicate(array[index], index, array)) return !1;");
file.WriteLine("                    return !0;");
file.WriteLine("                }");
file.WriteLine("                function arrayExtremum(array, iteratee, comparator, exValue) {");
file.WriteLine("                    for (var index = -1, length = array.length, computed = exValue, result = computed; ++index < length; ) {");
file.WriteLine("                        var value = array[index], current = +iteratee(value);");
file.WriteLine("                        if (comparator(current, computed)) {");
file.WriteLine("                            computed = current;");
file.WriteLine("                            result = value;");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function arrayFilter(array, predicate) {");
file.WriteLine("                    for (var index = -1, length = array.length, resIndex = -1, result = []; ++index < length; ) {");
file.WriteLine("                        var value = array[index];");
file.WriteLine("                        if (predicate(value, index, array)) result[++resIndex] = value;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function arrayMap(array, iteratee) {");
file.WriteLine("                    for (var index = -1, length = array.length, result = Array(length); ++index < length; ) result[index] = iteratee(array[index], index, array);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function arrayPush(array, values) {");
file.WriteLine("                    for (var index = -1, length = values.length, offset = array.length; ++index < length; ) array[offset + index] = values[index];");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function arrayReduce(array, iteratee, accumulator, initFromArray) {");
file.WriteLine("                    var index = -1, length = array.length;");
file.WriteLine("                    if (initFromArray && length) accumulator = array[++index];");
file.WriteLine("                    for (;++index < length; ) accumulator = iteratee(accumulator, array[index], index, array);");
file.WriteLine("                    return accumulator;");
file.WriteLine("                }");
file.WriteLine("                function arrayReduceRight(array, iteratee, accumulator, initFromArray) {");
file.WriteLine("                    var length = array.length;");
file.WriteLine("                    if (initFromArray && length) accumulator = array[--length];");
file.WriteLine("                    for (;length--; ) accumulator = iteratee(accumulator, array[length], length, array);");
file.WriteLine("                    return accumulator;");
file.WriteLine("                }");
file.WriteLine("                function arraySome(array, predicate) {");
file.WriteLine("                    for (var index = -1, length = array.length; ++index < length; ) if (predicate(array[index], index, array)) return !0;");
file.WriteLine("                    return !1;");
file.WriteLine("                }");
file.WriteLine("                function arraySum(array, iteratee) {");
file.WriteLine("                    for (var length = array.length, result = 0; length--; ) result += +iteratee(array[length]) || 0;");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function assignDefaults(objectValue, sourceValue) {");
file.WriteLine("                    return objectValue === undefined ? sourceValue : objectValue;");
file.WriteLine("                }");
file.WriteLine("                function assignOwnDefaults(objectValue, sourceValue, key, object) {");
file.WriteLine("                    return objectValue === undefined || !hasOwnProperty.call(object, key) ? sourceValue : objectValue;");
file.WriteLine("                }");
file.WriteLine("                function assignWith(object, source, customizer) {");
file.WriteLine("                    for (var index = -1, props = keys(source), length = props.length; ++index < length; ) {");
file.WriteLine("                        var key = props[index], value = object[key], result = customizer(value, source[key], key, object, source);");
file.WriteLine("                        if ((result === result ? result !== value : value === value) || value === undefined && !(key in object)) object[key] = result;");
file.WriteLine("                    }");
file.WriteLine("                    return object;");
file.WriteLine("                }");
file.WriteLine("                function baseAssign(object, source) {");
file.WriteLine("                    return null == source ? object : baseCopy(source, keys(source), object);");
file.WriteLine("                }");
file.WriteLine("                function baseAt(collection, props) {");
file.WriteLine("                    for (var index = -1, isNil = null == collection, isArr = !isNil && isArrayLike(collection), length = isArr ? collection.length : 0, propsLength = props.length, result = Array(propsLength); ++index < propsLength; ) {");
file.WriteLine("                        var key = props[index];");
file.WriteLine("                        if (isArr) result[index] = isIndex(key, length) ? collection[key] : undefined; else result[index] = isNil ? undefined : collection[key];");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseCopy(source, props, object) {");
file.WriteLine("                    object || (object = {});");
file.WriteLine("                    for (var index = -1, length = props.length; ++index < length; ) {");
file.WriteLine("                        var key = props[index];");
file.WriteLine("                        object[key] = source[key];");
file.WriteLine("                    }");
file.WriteLine("                    return object;");
file.WriteLine("                }");
file.WriteLine("                function baseCallback(func, thisArg, argCount) {");
file.WriteLine("                    var type = typeof func;");
file.WriteLine("                    if (\"function\" == type) return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);");
file.WriteLine("                    if (null == func) return identity;");
file.WriteLine("                    if (\"object\" == type) return baseMatches(func); else return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);");
file.WriteLine("                }");
file.WriteLine("                function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {");
file.WriteLine("                    var result;");
file.WriteLine("                    if (customizer) result = object ? customizer(value, key, object) : customizer(value);");
file.WriteLine("                    if (result !== undefined) return result;");
file.WriteLine("                    if (!isObject(value)) return value;");
file.WriteLine("                    var isArr = isArray(value);");
file.WriteLine("                    if (isArr) {");
file.WriteLine("                        result = initCloneArray(value);");
file.WriteLine("                        if (!isDeep) return arrayCopy(value, result);");
file.WriteLine("                    } else {");
file.WriteLine("                        var tag = objToString.call(value), isFunc = tag == funcTag;");
file.WriteLine("                        if (tag == objectTag || tag == argsTag || isFunc && !object) {");
file.WriteLine("                            result = initCloneObject(isFunc ? {} : value);");
file.WriteLine("                            if (!isDeep) return baseAssign(result, value);");
file.WriteLine("                        } else return cloneableTags[tag] ? initCloneByTag(value, tag, isDeep) : object ? value : {};");
file.WriteLine("                    }");
file.WriteLine("                    stackA || (stackA = []);");
file.WriteLine("                    stackB || (stackB = []);");
file.WriteLine("                    for (var length = stackA.length; length--; ) if (stackA[length] == value) return stackB[length];");
file.WriteLine("                    stackA.push(value);");
file.WriteLine("                    stackB.push(result);");
file.WriteLine("                    (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {");
file.WriteLine("                        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseDelay(func, wait, args) {");
file.WriteLine("                    if (\"function\" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    return setTimeout(function() {");
file.WriteLine("                        func.apply(undefined, args);");
file.WriteLine("                    }, wait);");
file.WriteLine("                }");
file.WriteLine("                function baseDifference(array, values) {");
file.WriteLine("                    var length = array ? array.length : 0, result = [];");
file.WriteLine("                    if (!length) return result;");
file.WriteLine("                    var index = -1, indexOf = getIndexOf(), isCommon = indexOf == baseIndexOf, cache = isCommon && values.length >= LARGE_ARRAY_SIZE ? createCache(values) : null, valuesLength = values.length;");
file.WriteLine("                    if (cache) {");
file.WriteLine("                        indexOf = cacheIndexOf;");
file.WriteLine("                        isCommon = !1;");
file.WriteLine("                        values = cache;");
file.WriteLine("                    }");
file.WriteLine("                    outer: for (;++index < length; ) {");
file.WriteLine("                        var value = array[index];");
file.WriteLine("                        if (isCommon && value === value) {");
file.WriteLine("                            for (var valuesIndex = valuesLength; valuesIndex--; ) if (values[valuesIndex] === value) continue outer;");
file.WriteLine("                            result.push(value);");
file.WriteLine("                        } else if (indexOf(values, value, 0) < 0) result.push(value);");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseEvery(collection, predicate) {");
file.WriteLine("                    var result = !0;");
file.WriteLine("                    baseEach(collection, function(value, index, collection) {");
file.WriteLine("                        result = !!predicate(value, index, collection);");
file.WriteLine("                        return result;");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseExtremum(collection, iteratee, comparator, exValue) {");
file.WriteLine("                    var computed = exValue, result = computed;");
file.WriteLine("                    baseEach(collection, function(value, index, collection) {");
file.WriteLine("                        var current = +iteratee(value, index, collection);");
file.WriteLine("                        if (comparator(current, computed) || current === exValue && current === result) {");
file.WriteLine("                            computed = current;");
file.WriteLine("                            result = value;");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseFill(array, value, start, end) {");
file.WriteLine("                    var length = array.length;");
file.WriteLine("                    start = null == start ? 0 : +start || 0;");
file.WriteLine("                    if (start < 0) start = -start > length ? 0 : length + start;");
file.WriteLine("                    end = end === undefined || end > length ? length : +end || 0;");
file.WriteLine("                    if (end < 0) end += length;");
file.WriteLine("                    length = start > end ? 0 : end >>> 0;");
file.WriteLine("                    start >>>= 0;");
file.WriteLine("                    for (;start < length; ) array[start++] = value;");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function baseFilter(collection, predicate) {");
file.WriteLine("                    var result = [];");
file.WriteLine("                    baseEach(collection, function(value, index, collection) {");
file.WriteLine("                        if (predicate(value, index, collection)) result.push(value);");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseFind(collection, predicate, eachFunc, retKey) {");
file.WriteLine("                    var result;");
file.WriteLine("                    eachFunc(collection, function(value, key, collection) {");
file.WriteLine("                        if (predicate(value, key, collection)) {");
file.WriteLine("                            result = retKey ? key : value;");
file.WriteLine("                            return !1;");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseFlatten(array, isDeep, isStrict, result) {");
file.WriteLine("                    result || (result = []);");
file.WriteLine("                    for (var index = -1, length = array.length; ++index < length; ) {");
file.WriteLine("                        var value = array[index];");
file.WriteLine("                        if (isObjectLike(value) && isArrayLike(value) && (isStrict || isArray(value) || isArguments(value))) if (isDeep) baseFlatten(value, isDeep, isStrict, result); else arrayPush(result, value); else if (!isStrict) result[result.length] = value;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseForIn(object, iteratee) {");
file.WriteLine("                    return baseFor(object, iteratee, keysIn);");
file.WriteLine("                }");
file.WriteLine("                function baseForOwn(object, iteratee) {");
file.WriteLine("                    return baseFor(object, iteratee, keys);");
file.WriteLine("                }");
file.WriteLine("                function baseForOwnRight(object, iteratee) {");
file.WriteLine("                    return baseForRight(object, iteratee, keys);");
file.WriteLine("                }");
file.WriteLine("                function baseFunctions(object, props) {");
file.WriteLine("                    for (var index = -1, length = props.length, resIndex = -1, result = []; ++index < length; ) {");
file.WriteLine("                        var key = props[index];");
file.WriteLine("                        if (isFunction(object[key])) result[++resIndex] = key;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseGet(object, path, pathKey) {");
file.WriteLine("                    if (null != object) {");
file.WriteLine("                        if (pathKey !== undefined && pathKey in toObject(object)) path = [ pathKey ];");
file.WriteLine("                        for (var index = 0, length = path.length; null != object && index < length; ) object = object[path[index++]];");
file.WriteLine("                        return index && index == length ? object : undefined;");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {");
file.WriteLine("                    if (value === other) return !0;");
file.WriteLine("                    if (null == value || null == other || !isObject(value) && !isObjectLike(other)) return value !== value && other !== other; else return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);");
file.WriteLine("                }");
file.WriteLine("                function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {");
file.WriteLine("                    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = arrayTag, othTag = arrayTag;");
file.WriteLine("                    if (!objIsArr) {");
file.WriteLine("                        objTag = objToString.call(object);");
file.WriteLine("                        if (objTag == argsTag) objTag = objectTag; else if (objTag != objectTag) objIsArr = isTypedArray(object);");
file.WriteLine("                    }");
file.WriteLine("                    if (!othIsArr) {");
file.WriteLine("                        othTag = objToString.call(other);");
file.WriteLine("                        if (othTag == argsTag) othTag = objectTag; else if (othTag != objectTag) othIsArr = isTypedArray(other);");
file.WriteLine("                    }");
file.WriteLine("                    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;");
file.WriteLine("                    if (isSameTag && !objIsArr && !objIsObj) return equalByTag(object, other, objTag);");
file.WriteLine("                    if (!isLoose) {");
file.WriteLine("                        var objIsWrapped = objIsObj && hasOwnProperty.call(object, \"__wrapped__\"), othIsWrapped = othIsObj && hasOwnProperty.call(other, \"__wrapped__\");");
file.WriteLine("                        if (objIsWrapped || othIsWrapped) return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);");
file.WriteLine("                    }");
file.WriteLine("                    if (!isSameTag) return !1;");
file.WriteLine("                    stackA || (stackA = []);");
file.WriteLine("                    stackB || (stackB = []);");
file.WriteLine("                    for (var length = stackA.length; length--; ) if (stackA[length] == object) return stackB[length] == other;");
file.WriteLine("                    stackA.push(object);");
file.WriteLine("                    stackB.push(other);");
file.WriteLine("                    var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);");
file.WriteLine("                    stackA.pop();");
file.WriteLine("                    stackB.pop();");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseIsMatch(object, matchData, customizer) {");
file.WriteLine("                    var index = matchData.length, length = index, noCustomizer = !customizer;");
file.WriteLine("                    if (null == object) return !length;");
file.WriteLine("                    object = toObject(object);");
file.WriteLine("                    for (;index--; ) {");
file.WriteLine("                        var data = matchData[index];");
file.WriteLine("                        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return !1;");
file.WriteLine("                    }");
file.WriteLine("                    for (;++index < length; ) {");
file.WriteLine("                        data = matchData[index];");
file.WriteLine("                        var key = data[0], objValue = object[key], srcValue = data[1];");
file.WriteLine("                        if (noCustomizer && data[2]) {");
file.WriteLine("                            if (objValue === undefined && !(key in object)) return !1;");
file.WriteLine("                        } else {");
file.WriteLine("                            var result = customizer ? customizer(objValue, srcValue, key) : undefined;");
file.WriteLine("                            if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, !0) : result)) return !1;");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    return !0;");
file.WriteLine("                }");
file.WriteLine("                function baseMap(collection, iteratee) {");
file.WriteLine("                    var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];");
file.WriteLine("                    baseEach(collection, function(value, key, collection) {");
file.WriteLine("                        result[++index] = iteratee(value, key, collection);");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseMatches(source) {");
file.WriteLine("                    var matchData = getMatchData(source);");
file.WriteLine("                    if (1 == matchData.length && matchData[0][2]) {");
file.WriteLine("                        var key = matchData[0][0], value = matchData[0][1];");
file.WriteLine("                        return function(object) {");
file.WriteLine("                            if (null == object) return !1; else return object[key] === value && (value !== undefined || key in toObject(object));");
file.WriteLine("                        };");
file.WriteLine("                    }");
file.WriteLine("                    return function(object) {");
file.WriteLine("                        return baseIsMatch(object, matchData);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function baseMatchesProperty(path, srcValue) {");
file.WriteLine("                    var isArr = isArray(path), isCommon = isKey(path) && isStrictComparable(srcValue), pathKey = path + \"\";");
file.WriteLine("                    path = toPath(path);");
file.WriteLine("                    return function(object) {");
file.WriteLine("                        if (null == object) return !1;");
file.WriteLine("                        var key = pathKey;");
file.WriteLine("                        object = toObject(object);");
file.WriteLine("                        if ((isArr || !isCommon) && !(key in object)) {");
file.WriteLine("                            object = 1 == path.length ? object : baseGet(object, baseSlice(path, 0, -1));");
file.WriteLine("                            if (null == object) return !1;");
file.WriteLine("                            key = last(path);");
file.WriteLine("                            object = toObject(object);");
file.WriteLine("                        }");
file.WriteLine("                        return object[key] === srcValue ? srcValue !== undefined || key in object : baseIsEqual(srcValue, object[key], undefined, !0);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function baseMerge(object, source, customizer, stackA, stackB) {");
file.WriteLine("                    if (!isObject(object)) return object;");
file.WriteLine("                    var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)), props = isSrcArr ? undefined : keys(source);");
file.WriteLine("                    arrayEach(props || source, function(srcValue, key) {");
file.WriteLine("                        if (props) {");
file.WriteLine("                            key = srcValue;");
file.WriteLine("                            srcValue = source[key];");
file.WriteLine("                        }");
file.WriteLine("                        if (isObjectLike(srcValue)) {");
file.WriteLine("                            stackA || (stackA = []);");
file.WriteLine("                            stackB || (stackB = []);");
file.WriteLine("                            baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);");
file.WriteLine("                        } else {");
file.WriteLine("                            var value = object[key], result = customizer ? customizer(value, srcValue, key, object, source) : undefined, isCommon = result === undefined;");
file.WriteLine("                            if (isCommon) result = srcValue;");
file.WriteLine("                            if ((result !== undefined || isSrcArr && !(key in object)) && (isCommon || (result === result ? result !== value : value === value))) object[key] = result;");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                    return object;");
file.WriteLine("                }");
file.WriteLine("                function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {");
file.WriteLine("                    for (var length = stackA.length, srcValue = source[key]; length--; ) if (stackA[length] == srcValue) {");
file.WriteLine("                        object[key] = stackB[length];");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    var value = object[key], result = customizer ? customizer(value, srcValue, key, object, source) : undefined, isCommon = result === undefined;");
file.WriteLine("                    if (isCommon) {");
file.WriteLine("                        result = srcValue;");
file.WriteLine("                        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) result = isArray(value) ? value : isArrayLike(value) ? arrayCopy(value) : []; else if (isPlainObject(srcValue) || isArguments(srcValue)) result = isArguments(value) ? toPlainObject(value) : isPlainObject(value) ? value : {}; else isCommon = !1;");
file.WriteLine("                    }");
file.WriteLine("                    stackA.push(srcValue);");
file.WriteLine("                    stackB.push(result);");
file.WriteLine("                    if (isCommon) object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB); else if (result === result ? result !== value : value === value) object[key] = result;");
file.WriteLine("                }");
file.WriteLine("                function baseProperty(key) {");
file.WriteLine("                    return function(object) {");
file.WriteLine("                        return null == object ? undefined : object[key];");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function basePropertyDeep(path) {");
file.WriteLine("                    var pathKey = path + \"\";");
file.WriteLine("                    path = toPath(path);");
file.WriteLine("                    return function(object) {");
file.WriteLine("                        return baseGet(object, path, pathKey);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function basePullAt(array, indexes) {");
file.WriteLine("                    for (var length = array ? indexes.length : 0; length--; ) {");
file.WriteLine("                        var index = indexes[length];");
file.WriteLine("                        if (index != previous && isIndex(index)) {");
file.WriteLine("                            var previous = index;");
file.WriteLine("                            splice.call(array, index, 1);");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function baseRandom(min, max) {");
file.WriteLine("                    return min + nativeFloor(nativeRandom() * (max - min + 1));");
file.WriteLine("                }");
file.WriteLine("                function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {");
file.WriteLine("                    eachFunc(collection, function(value, index, collection) {");
file.WriteLine("                        accumulator = initFromCollection ? (initFromCollection = !1, value) : iteratee(accumulator, value, index, collection);");
file.WriteLine("                    });");
file.WriteLine("                    return accumulator;");
file.WriteLine("                }");
file.WriteLine("                function baseSlice(array, start, end) {");
file.WriteLine("                    var index = -1, length = array.length;");
file.WriteLine("                    start = null == start ? 0 : +start || 0;");
file.WriteLine("                    if (start < 0) start = -start > length ? 0 : length + start;");
file.WriteLine("                    end = end === undefined || end > length ? length : +end || 0;");
file.WriteLine("                    if (end < 0) end += length;");
file.WriteLine("                    length = start > end ? 0 : end - start >>> 0;");
file.WriteLine("                    start >>>= 0;");
file.WriteLine("                    for (var result = Array(length); ++index < length; ) result[index] = array[index + start];");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseSome(collection, predicate) {");
file.WriteLine("                    var result;");
file.WriteLine("                    baseEach(collection, function(value, index, collection) {");
file.WriteLine("                        result = predicate(value, index, collection);");
file.WriteLine("                        return !result;");
file.WriteLine("                    });");
file.WriteLine("                    return !!result;");
file.WriteLine("                }");
file.WriteLine("                function baseSortBy(array, comparer) {");
file.WriteLine("                    var length = array.length;");
file.WriteLine("                    array.sort(comparer);");
file.WriteLine("                    for (;length--; ) array[length] = array[length].value;");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function baseSortByOrder(collection, iteratees, orders) {");
file.WriteLine("                    var callback = getCallback(), index = -1;");
file.WriteLine("                    iteratees = arrayMap(iteratees, function(iteratee) {");
file.WriteLine("                        return callback(iteratee);");
file.WriteLine("                    });");
file.WriteLine("                    return baseSortBy(baseMap(collection, function(value) {");
file.WriteLine("                        return {");
file.WriteLine("                            criteria: arrayMap(iteratees, function(iteratee) {");
file.WriteLine("                                return iteratee(value);");
file.WriteLine("                            }),");
file.WriteLine("                            index: ++index,");
file.WriteLine("                            value: value");
file.WriteLine("                        };");
file.WriteLine("                    }), function(object, other) {");
file.WriteLine("                        return compareMultiple(object, other, orders);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                function baseSum(collection, iteratee) {");
file.WriteLine("                    var result = 0;");
file.WriteLine("                    baseEach(collection, function(value, index, collection) {");
file.WriteLine("                        result += +iteratee(value, index, collection) || 0;");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseUniq(array, iteratee) {");
file.WriteLine("                    var index = -1, indexOf = getIndexOf(), length = array.length, isCommon = indexOf == baseIndexOf, isLarge = isCommon && length >= LARGE_ARRAY_SIZE, seen = isLarge ? createCache() : null, result = [];");
file.WriteLine("                    if (seen) {");
file.WriteLine("                        indexOf = cacheIndexOf;");
file.WriteLine("                        isCommon = !1;");
file.WriteLine("                    } else {");
file.WriteLine("                        isLarge = !1;");
file.WriteLine("                        seen = iteratee ? [] : result;");
file.WriteLine("                    }");
file.WriteLine("                    outer: for (;++index < length; ) {");
file.WriteLine("                        var value = array[index], computed = iteratee ? iteratee(value, index, array) : value;");
file.WriteLine("                        if (isCommon && value === value) {");
file.WriteLine("                            for (var seenIndex = seen.length; seenIndex--; ) if (seen[seenIndex] === computed) continue outer;");
file.WriteLine("                            if (iteratee) seen.push(computed);");
file.WriteLine("                            result.push(value);");
file.WriteLine("                        } else if (indexOf(seen, computed, 0) < 0) {");
file.WriteLine("                            if (iteratee || isLarge) seen.push(computed);");
file.WriteLine("                            result.push(value);");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseValues(object, props) {");
file.WriteLine("                    for (var index = -1, length = props.length, result = Array(length); ++index < length; ) result[index] = object[props[index]];");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function baseWhile(array, predicate, isDrop, fromRight) {");
file.WriteLine("                    for (var length = array.length, index = fromRight ? length : -1; (fromRight ? index-- : ++index < length) && predicate(array[index], index, array); ) ;");
file.WriteLine("                    return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);");
file.WriteLine("                }");
file.WriteLine("                function baseWrapperValue(value, actions) {");
file.WriteLine("                    var result = value;");
file.WriteLine("                    if (result instanceof LazyWrapper) result = result.value();");
file.WriteLine("                    for (var index = -1, length = actions.length; ++index < length; ) {");
file.WriteLine("                        var action = actions[index];");
file.WriteLine("                        result = action.func.apply(action.thisArg, arrayPush([ result ], action.args));");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function binaryIndex(array, value, retHighest) {");
file.WriteLine("                    var low = 0, high = array ? array.length : low;");
file.WriteLine("                    if (\"number\" == typeof value && value === value && high <= HALF_MAX_ARRAY_LENGTH) {");
file.WriteLine("                        for (;low < high; ) {");
file.WriteLine("                            var mid = low + high >>> 1, computed = array[mid];");
file.WriteLine("                            if ((retHighest ? computed <= value : computed < value) && null !== computed) low = mid + 1; else high = mid;");
file.WriteLine("                        }");
file.WriteLine("                        return high;");
file.WriteLine("                    }");
file.WriteLine("                    return binaryIndexBy(array, value, identity, retHighest);");
file.WriteLine("                }");
file.WriteLine("                function binaryIndexBy(array, value, iteratee, retHighest) {");
file.WriteLine("                    value = iteratee(value);");
file.WriteLine("                    for (var low = 0, high = array ? array.length : 0, valIsNaN = value !== value, valIsNull = null === value, valIsUndef = value === undefined; low < high; ) {");
file.WriteLine("                        var mid = nativeFloor((low + high) / 2), computed = iteratee(array[mid]), isDef = computed !== undefined, isReflexive = computed === computed;");
file.WriteLine("                        if (valIsNaN) var setLow = isReflexive || retHighest; else if (valIsNull) setLow = isReflexive && isDef && (retHighest || null != computed); else if (valIsUndef) setLow = isReflexive && (retHighest || isDef); else if (null == computed) setLow = !1; else setLow = retHighest ? computed <= value : computed < value;");
file.WriteLine("                        if (setLow) low = mid + 1; else high = mid;");
file.WriteLine("                    }");
file.WriteLine("                    return nativeMin(high, MAX_ARRAY_INDEX);");
file.WriteLine("                }");
file.WriteLine("                function bindCallback(func, thisArg, argCount) {");
file.WriteLine("                    if (\"function\" != typeof func) return identity;");
file.WriteLine("                    if (thisArg === undefined) return func;");
file.WriteLine("                    switch (argCount) {");
file.WriteLine("                      case 1:");
file.WriteLine("                        return function(value) {");
file.WriteLine("                            return func.call(thisArg, value);");
file.WriteLine("                        };");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        return function(value, index, collection) {");
file.WriteLine("                            return func.call(thisArg, value, index, collection);");
file.WriteLine("                        };");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        return function(accumulator, value, index, collection) {");
file.WriteLine("                            return func.call(thisArg, accumulator, value, index, collection);");
file.WriteLine("                        };");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        return function(value, other, key, object, source) {");
file.WriteLine("                            return func.call(thisArg, value, other, key, object, source);");
file.WriteLine("                        };");
file.WriteLine("                    }");
file.WriteLine("                    return function() {");
file.WriteLine("                        return func.apply(thisArg, arguments);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function bufferClone(buffer) {");
file.WriteLine("                    var result = new ArrayBuffer(buffer.byteLength);");
file.WriteLine("                    new Uint8Array(result).set(new Uint8Array(buffer));");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function composeArgs(args, partials, holders) {");
file.WriteLine("                    for (var holdersLength = holders.length, argsIndex = -1, argsLength = nativeMax(args.length - holdersLength, 0), leftIndex = -1, leftLength = partials.length, result = Array(leftLength + argsLength); ++leftIndex < leftLength; ) result[leftIndex] = partials[leftIndex];");
file.WriteLine("                    for (;++argsIndex < holdersLength; ) result[holders[argsIndex]] = args[argsIndex];");
file.WriteLine("                    for (;argsLength--; ) result[leftIndex++] = args[argsIndex++];");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function composeArgsRight(args, partials, holders) {");
file.WriteLine("                    for (var holdersIndex = -1, holdersLength = holders.length, argsIndex = -1, argsLength = nativeMax(args.length - holdersLength, 0), rightIndex = -1, rightLength = partials.length, result = Array(argsLength + rightLength); ++argsIndex < argsLength; ) result[argsIndex] = args[argsIndex];");
file.WriteLine("                    for (var offset = argsIndex; ++rightIndex < rightLength; ) result[offset + rightIndex] = partials[rightIndex];");
file.WriteLine("                    for (;++holdersIndex < holdersLength; ) result[offset + holders[holdersIndex]] = args[argsIndex++];");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function createAggregator(setter, initializer) {");
file.WriteLine("                    return function(collection, iteratee, thisArg) {");
file.WriteLine("                        var result = initializer ? initializer() : {};");
file.WriteLine("                        iteratee = getCallback(iteratee, thisArg, 3);");
file.WriteLine("                        if (isArray(collection)) for (var index = -1, length = collection.length; ++index < length; ) {");
file.WriteLine("                            var value = collection[index];");
file.WriteLine("                            setter(result, value, iteratee(value, index, collection), collection);");
file.WriteLine("                        } else baseEach(collection, function(value, key, collection) {");
file.WriteLine("                            setter(result, value, iteratee(value, key, collection), collection);");
file.WriteLine("                        });");
file.WriteLine("                        return result;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createAssigner(assigner) {");
file.WriteLine("                    return restParam(function(object, sources) {");
file.WriteLine("                        var index = -1, length = null == object ? 0 : sources.length, customizer = length > 2 ? sources[length - 2] : undefined, guard = length > 2 ? sources[2] : undefined, thisArg = length > 1 ? sources[length - 1] : undefined;");
file.WriteLine("                        if (\"function\" == typeof customizer) {");
file.WriteLine("                            customizer = bindCallback(customizer, thisArg, 5);");
file.WriteLine("                            length -= 2;");
file.WriteLine("                        } else {");
file.WriteLine("                            customizer = \"function\" == typeof thisArg ? thisArg : undefined;");
file.WriteLine("                            length -= customizer ? 1 : 0;");
file.WriteLine("                        }");
file.WriteLine("                        if (guard && isIterateeCall(sources[0], sources[1], guard)) {");
file.WriteLine("                            customizer = length < 3 ? undefined : customizer;");
file.WriteLine("                            length = 1;");
file.WriteLine("                        }");
file.WriteLine("                        for (;++index < length; ) {");
file.WriteLine("                            var source = sources[index];");
file.WriteLine("                            if (source) assigner(object, source, customizer);");
file.WriteLine("                        }");
file.WriteLine("                        return object;");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                function createBaseEach(eachFunc, fromRight) {");
file.WriteLine("                    return function(collection, iteratee) {");
file.WriteLine("                        var length = collection ? getLength(collection) : 0;");
file.WriteLine("                        if (!isLength(length)) return eachFunc(collection, iteratee);");
file.WriteLine("                        for (var index = fromRight ? length : -1, iterable = toObject(collection); (fromRight ? index-- : ++index < length) && !1 !== iteratee(iterable[index], index, iterable); ) ;");
file.WriteLine("                        return collection;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createBaseFor(fromRight) {");
file.WriteLine("                    return function(object, iteratee, keysFunc) {");
file.WriteLine("                        for (var iterable = toObject(object), props = keysFunc(object), length = props.length, index = fromRight ? length : -1; fromRight ? index-- : ++index < length; ) {");
file.WriteLine("                            var key = props[index];");
file.WriteLine("                            if (!1 === iteratee(iterable[key], key, iterable)) break;");
file.WriteLine("                        }");
file.WriteLine("                        return object;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createBindWrapper(func, thisArg) {");
file.WriteLine("                    function wrapper() {");
file.WriteLine("                        return (this && this !== root && this instanceof wrapper ? Ctor : func).apply(thisArg, arguments);");
file.WriteLine("                    }");
file.WriteLine("                    var Ctor = createCtorWrapper(func);");
file.WriteLine("                    return wrapper;");
file.WriteLine("                }");
file.WriteLine("                function createCache(values) {");
file.WriteLine("                    return nativeCreate && Set ? new SetCache(values) : null;");
file.WriteLine("                }");
file.WriteLine("                function createCompounder(callback) {");
file.WriteLine("                    return function(string) {");
file.WriteLine("                        for (var index = -1, array = words(deburr(string)), length = array.length, result = \"\"; ++index < length; ) result = callback(result, array[index], index);");
file.WriteLine("                        return result;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createCtorWrapper(Ctor) {");
file.WriteLine("                    return function() {");
file.WriteLine("                        var args = arguments;");
file.WriteLine("                        switch (args.length) {");
file.WriteLine("                          case 0:");
file.WriteLine("                            return new Ctor();");
file.WriteLine("");
file.WriteLine("                          case 1:");
file.WriteLine("                            return new Ctor(args[0]);");
file.WriteLine("");
file.WriteLine("                          case 2:");
file.WriteLine("                            return new Ctor(args[0], args[1]);");
file.WriteLine("");
file.WriteLine("                          case 3:");
file.WriteLine("                            return new Ctor(args[0], args[1], args[2]);");
file.WriteLine("");
file.WriteLine("                          case 4:");
file.WriteLine("                            return new Ctor(args[0], args[1], args[2], args[3]);");
file.WriteLine("");
file.WriteLine("                          case 5:");
file.WriteLine("                            return new Ctor(args[0], args[1], args[2], args[3], args[4]);");
file.WriteLine("");
file.WriteLine("                          case 6:");
file.WriteLine("                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);");
file.WriteLine("");
file.WriteLine("                          case 7:");
file.WriteLine("                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);");
file.WriteLine("                        }");
file.WriteLine("                        var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);");
file.WriteLine("                        return isObject(result) ? result : thisBinding;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createCurry(flag) {");
file.WriteLine("                    function curryFunc(func, arity, guard) {");
file.WriteLine("                        if (guard && isIterateeCall(func, arity, guard)) arity = undefined;");
file.WriteLine("                        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);");
file.WriteLine("                        result.placeholder = curryFunc.placeholder;");
file.WriteLine("                        return result;");
file.WriteLine("                    }");
file.WriteLine("                    return curryFunc;");
file.WriteLine("                }");
file.WriteLine("                function createDefaults(assigner, customizer) {");
file.WriteLine("                    return restParam(function(args) {");
file.WriteLine("                        var object = args[0];");
file.WriteLine("                        if (null == object) return object;");
file.WriteLine("                        args.push(customizer);");
file.WriteLine("                        return assigner.apply(undefined, args);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                function createExtremum(comparator, exValue) {");
file.WriteLine("                    return function(collection, iteratee, thisArg) {");
file.WriteLine("                        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) iteratee = undefined;");
file.WriteLine("                        iteratee = getCallback(iteratee, thisArg, 3);");
file.WriteLine("                        if (1 == iteratee.length) {");
file.WriteLine("                            collection = isArray(collection) ? collection : toIterable(collection);");
file.WriteLine("                            var result = arrayExtremum(collection, iteratee, comparator, exValue);");
file.WriteLine("                            if (!collection.length || result !== exValue) return result;");
file.WriteLine("                        }");
file.WriteLine("                        return baseExtremum(collection, iteratee, comparator, exValue);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createFind(eachFunc, fromRight) {");
file.WriteLine("                    return function(collection, predicate, thisArg) {");
file.WriteLine("                        predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                        if (isArray(collection)) {");
file.WriteLine("                            var index = baseFindIndex(collection, predicate, fromRight);");
file.WriteLine("                            return index > -1 ? collection[index] : undefined;");
file.WriteLine("                        }");
file.WriteLine("                        return baseFind(collection, predicate, eachFunc);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createFindIndex(fromRight) {");
file.WriteLine("                    return function(array, predicate, thisArg) {");
file.WriteLine("                        if (!array || !array.length) return -1;");
file.WriteLine("                        predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                        return baseFindIndex(array, predicate, fromRight);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createFindKey(objectFunc) {");
file.WriteLine("                    return function(object, predicate, thisArg) {");
file.WriteLine("                        predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                        return baseFind(object, predicate, objectFunc, !0);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createFlow(fromRight) {");
file.WriteLine("                    return function() {");
file.WriteLine("                        for (var wrapper, length = arguments.length, index = fromRight ? length : -1, leftIndex = 0, funcs = Array(length); fromRight ? index-- : ++index < length; ) {");
file.WriteLine("                            var func = funcs[leftIndex++] = arguments[index];");
file.WriteLine("                            if (\"function\" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                            if (!wrapper && LodashWrapper.prototype.thru && \"wrapper\" == getFuncName(func)) wrapper = new LodashWrapper([], !0);");
file.WriteLine("                        }");
file.WriteLine("                        index = wrapper ? -1 : length;");
file.WriteLine("                        for (;++index < length; ) {");
file.WriteLine("                            func = funcs[index];");
file.WriteLine("                            var funcName = getFuncName(func), data = \"wrapper\" == funcName ? getData(func) : undefined;");
file.WriteLine("                            if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && 1 == data[9]) wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]); else wrapper = 1 == func.length && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);");
file.WriteLine("                        }");
file.WriteLine("                        return function() {");
file.WriteLine("                            var args = arguments, value = args[0];");
file.WriteLine("                            if (wrapper && 1 == args.length && isArray(value) && value.length >= LARGE_ARRAY_SIZE) return wrapper.plant(value).value();");
file.WriteLine("                            for (var index = 0, result = length ? funcs[index].apply(this, args) : value; ++index < length; ) result = funcs[index].call(this, result);");
file.WriteLine("                            return result;");
file.WriteLine("                        };");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createForEach(arrayFunc, eachFunc) {");
file.WriteLine("                    return function(collection, iteratee, thisArg) {");
file.WriteLine("                        return \"function\" == typeof iteratee && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee) : eachFunc(collection, bindCallback(iteratee, thisArg, 3));");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createForIn(objectFunc) {");
file.WriteLine("                    return function(object, iteratee, thisArg) {");
file.WriteLine("                        if (\"function\" != typeof iteratee || thisArg !== undefined) iteratee = bindCallback(iteratee, thisArg, 3);");
file.WriteLine("                        return objectFunc(object, iteratee, keysIn);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createForOwn(objectFunc) {");
file.WriteLine("                    return function(object, iteratee, thisArg) {");
file.WriteLine("                        if (\"function\" != typeof iteratee || thisArg !== undefined) iteratee = bindCallback(iteratee, thisArg, 3);");
file.WriteLine("                        return objectFunc(object, iteratee);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createObjectMapper(isMapKeys) {");
file.WriteLine("                    return function(object, iteratee, thisArg) {");
file.WriteLine("                        var result = {};");
file.WriteLine("                        iteratee = getCallback(iteratee, thisArg, 3);");
file.WriteLine("                        baseForOwn(object, function(value, key, object) {");
file.WriteLine("                            var mapped = iteratee(value, key, object);");
file.WriteLine("                            key = isMapKeys ? mapped : key;");
file.WriteLine("                            value = isMapKeys ? value : mapped;");
file.WriteLine("                            result[key] = value;");
file.WriteLine("                        });");
file.WriteLine("                        return result;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createPadDir(fromRight) {");
file.WriteLine("                    return function(string, length, chars) {");
file.WriteLine("                        string = baseToString(string);");
file.WriteLine("                        return (fromRight ? string : \"\") + createPadding(string, length, chars) + (fromRight ? \"\" : string);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createPartial(flag) {");
file.WriteLine("                    var partialFunc = restParam(function(func, partials) {");
file.WriteLine("                        var holders = replaceHolders(partials, partialFunc.placeholder);");
file.WriteLine("                        return createWrapper(func, flag, undefined, partials, holders);");
file.WriteLine("                    });");
file.WriteLine("                    return partialFunc;");
file.WriteLine("                }");
file.WriteLine("                function createReduce(arrayFunc, eachFunc) {");
file.WriteLine("                    return function(collection, iteratee, accumulator, thisArg) {");
file.WriteLine("                        var initFromArray = arguments.length < 3;");
file.WriteLine("                        return \"function\" == typeof iteratee && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee, accumulator, initFromArray) : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {");
file.WriteLine("                    function wrapper() {");
file.WriteLine("                        for (var length = arguments.length, index = length, args = Array(length); index--; ) args[index] = arguments[index];");
file.WriteLine("                        if (partials) args = composeArgs(args, partials, holders);");
file.WriteLine("                        if (partialsRight) args = composeArgsRight(args, partialsRight, holdersRight);");
file.WriteLine("                        if (isCurry || isCurryRight) {");
file.WriteLine("                            var placeholder = wrapper.placeholder, argsHolders = replaceHolders(args, placeholder);");
file.WriteLine("                            length -= argsHolders.length;");
file.WriteLine("                            if (length < arity) {");
file.WriteLine("                                var newArgPos = argPos ? arrayCopy(argPos) : undefined, newArity = nativeMax(arity - length, 0), newsHolders = isCurry ? argsHolders : undefined, newHoldersRight = isCurry ? undefined : argsHolders, newPartials = isCurry ? args : undefined, newPartialsRight = isCurry ? undefined : args;");
file.WriteLine("                                bitmask |= isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG;");
file.WriteLine("                                bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);");
file.WriteLine("                                if (!isCurryBound) bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);");
file.WriteLine("                                var newData = [ func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity ], result = createHybridWrapper.apply(undefined, newData);");
file.WriteLine("                                if (isLaziable(func)) setData(result, newData);");
file.WriteLine("                                result.placeholder = placeholder;");
file.WriteLine("                                return result;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                        var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;");
file.WriteLine("                        if (argPos) args = reorder(args, argPos);");
file.WriteLine("                        if (isAry && ary < args.length) args.length = ary;");
file.WriteLine("                        if (this && this !== root && this instanceof wrapper) fn = Ctor || createCtorWrapper(func);");
file.WriteLine("                        return fn.apply(thisBinding, args);");
file.WriteLine("                    }");
file.WriteLine("                    var isAry = bitmask & ARY_FLAG, isBind = bitmask & BIND_FLAG, isBindKey = bitmask & BIND_KEY_FLAG, isCurry = bitmask & CURRY_FLAG, isCurryBound = bitmask & CURRY_BOUND_FLAG, isCurryRight = bitmask & CURRY_RIGHT_FLAG, Ctor = isBindKey ? undefined : createCtorWrapper(func);");
file.WriteLine("                    return wrapper;");
file.WriteLine("                }");
file.WriteLine("                function createPadding(string, length, chars) {");
file.WriteLine("                    var strLength = string.length;");
file.WriteLine("                    length = +length;");
file.WriteLine("                    if (strLength >= length || !nativeIsFinite(length)) return \"\";");
file.WriteLine("                    var padLength = length - strLength;");
file.WriteLine("                    chars = null == chars ? \" \" : chars + \"\";");
file.WriteLine("                    return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);");
file.WriteLine("                }");
file.WriteLine("                function createPartialWrapper(func, bitmask, thisArg, partials) {");
file.WriteLine("                    function wrapper() {");
file.WriteLine("                        for (var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength); ++leftIndex < leftLength; ) args[leftIndex] = partials[leftIndex];");
file.WriteLine("                        for (;argsLength--; ) args[leftIndex++] = arguments[++argsIndex];");
file.WriteLine("                        return (this && this !== root && this instanceof wrapper ? Ctor : func).apply(isBind ? thisArg : this, args);");
file.WriteLine("                    }");
file.WriteLine("                    var isBind = bitmask & BIND_FLAG, Ctor = createCtorWrapper(func);");
file.WriteLine("                    return wrapper;");
file.WriteLine("                }");
file.WriteLine("                function createRound(methodName) {");
file.WriteLine("                    var func = Math[methodName];");
file.WriteLine("                    return function(number, precision) {");
file.WriteLine("                        precision = precision === undefined ? 0 : +precision || 0;");
file.WriteLine("                        if (precision) {");
file.WriteLine("                            precision = pow(10, precision);");
file.WriteLine("                            return func(number * precision) / precision;");
file.WriteLine("                        }");
file.WriteLine("                        return func(number);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createSortedIndex(retHighest) {");
file.WriteLine("                    return function(array, value, iteratee, thisArg) {");
file.WriteLine("                        var callback = getCallback(iteratee);");
file.WriteLine("                        return null == iteratee && callback === baseCallback ? binaryIndex(array, value, retHighest) : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {");
file.WriteLine("                    var isBindKey = bitmask & BIND_KEY_FLAG;");
file.WriteLine("                    if (!isBindKey && \"function\" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    var length = partials ? partials.length : 0;");
file.WriteLine("                    if (!length) {");
file.WriteLine("                        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);");
file.WriteLine("                        partials = holders = undefined;");
file.WriteLine("                    }");
file.WriteLine("                    length -= holders ? holders.length : 0;");
file.WriteLine("                    if (bitmask & PARTIAL_RIGHT_FLAG) {");
file.WriteLine("                        var partialsRight = partials, holdersRight = holders;");
file.WriteLine("                        partials = holders = undefined;");
file.WriteLine("                    }");
file.WriteLine("                    var data = isBindKey ? undefined : getData(func), newData = [ func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity ];");
file.WriteLine("                    if (data) {");
file.WriteLine("                        mergeData(newData, data);");
file.WriteLine("                        bitmask = newData[1];");
file.WriteLine("                        arity = newData[9];");
file.WriteLine("                    }");
file.WriteLine("                    newData[9] = null == arity ? isBindKey ? 0 : func.length : nativeMax(arity - length, 0) || 0;");
file.WriteLine("                    if (bitmask == BIND_FLAG) var result = createBindWrapper(newData[0], newData[2]); else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) result = createPartialWrapper.apply(undefined, newData); else result = createHybridWrapper.apply(undefined, newData);");
file.WriteLine("                    return (data ? baseSetData : setData)(result, newData);");
file.WriteLine("                }");
file.WriteLine("                function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {");
file.WriteLine("                    var index = -1, arrLength = array.length, othLength = other.length;");
file.WriteLine("                    if (arrLength != othLength && !(isLoose && othLength > arrLength)) return !1;");
file.WriteLine("                    for (;++index < arrLength; ) {");
file.WriteLine("                        var arrValue = array[index], othValue = other[index], result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;");
file.WriteLine("                        if (result !== undefined) {");
file.WriteLine("                            if (result) continue;");
file.WriteLine("                            return !1;");
file.WriteLine("                        }");
file.WriteLine("                        if (isLoose) {");
file.WriteLine("                            if (!arraySome(other, function(othValue) {");
file.WriteLine("                                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);");
file.WriteLine("                            })) return !1;");
file.WriteLine("                        } else if (arrValue !== othValue && !equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB)) return !1;");
file.WriteLine("                    }");
file.WriteLine("                    return !0;");
file.WriteLine("                }");
file.WriteLine("                function equalByTag(object, other, tag) {");
file.WriteLine("                    switch (tag) {");
file.WriteLine("                      case boolTag:");
file.WriteLine("                      case dateTag:");
file.WriteLine("                        return +object == +other;");
file.WriteLine("");
file.WriteLine("                      case errorTag:");
file.WriteLine("                        return object.name == other.name && object.message == other.message;");
file.WriteLine("");
file.WriteLine("                      case numberTag:");
file.WriteLine("                        return object != +object ? other != +other : object == +other;");
file.WriteLine("");
file.WriteLine("                      case regexpTag:");
file.WriteLine("                      case stringTag:");
file.WriteLine("                        return object == other + \"\";");
file.WriteLine("                    }");
file.WriteLine("                    return !1;");
file.WriteLine("                }");
file.WriteLine("                function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {");
file.WriteLine("                    var objProps = keys(object), objLength = objProps.length;");
file.WriteLine("                    if (objLength != keys(other).length && !isLoose) return !1;");
file.WriteLine("                    for (var index = objLength; index--; ) {");
file.WriteLine("                        var key = objProps[index];");
file.WriteLine("                        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) return !1;");
file.WriteLine("                    }");
file.WriteLine("                    for (var skipCtor = isLoose; ++index < objLength; ) {");
file.WriteLine("                        key = objProps[index];");
file.WriteLine("                        var objValue = object[key], othValue = other[key], result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined;");
file.WriteLine("                        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) return !1;");
file.WriteLine("                        skipCtor || (skipCtor = \"constructor\" == key);");
file.WriteLine("                    }");
file.WriteLine("                    if (!skipCtor) {");
file.WriteLine("                        var objCtor = object.constructor, othCtor = other.constructor;");
file.WriteLine("                        if (objCtor != othCtor && \"constructor\" in object && \"constructor\" in other && !(\"function\" == typeof objCtor && objCtor instanceof objCtor && \"function\" == typeof othCtor && othCtor instanceof othCtor)) return !1;");
file.WriteLine("                    }");
file.WriteLine("                    return !0;");
file.WriteLine("                }");
file.WriteLine("                function getCallback(func, thisArg, argCount) {");
file.WriteLine("                    var result = lodash.callback || callback;");
file.WriteLine("                    result = result === callback ? baseCallback : result;");
file.WriteLine("                    return argCount ? result(func, thisArg, argCount) : result;");
file.WriteLine("                }");
file.WriteLine("                function getFuncName(func) {");
file.WriteLine("                    for (var result = func.name, array = realNames[result], length = array ? array.length : 0; length--; ) {");
file.WriteLine("                        var data = array[length], otherFunc = data.func;");
file.WriteLine("                        if (null == otherFunc || otherFunc == func) return data.name;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function getIndexOf(collection, target, fromIndex) {");
file.WriteLine("                    var result = lodash.indexOf || indexOf;");
file.WriteLine("                    result = result === indexOf ? baseIndexOf : result;");
file.WriteLine("                    return collection ? result(collection, target, fromIndex) : result;");
file.WriteLine("                }");
file.WriteLine("                function getMatchData(object) {");
file.WriteLine("                    for (var result = pairs(object), length = result.length; length--; ) result[length][2] = isStrictComparable(result[length][1]);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function getNative(object, key) {");
file.WriteLine("                    var value = null == object ? undefined : object[key];");
file.WriteLine("                    return isNative(value) ? value : undefined;");
file.WriteLine("                }");
file.WriteLine("                function getView(start, end, transforms) {");
file.WriteLine("                    for (var index = -1, length = transforms.length; ++index < length; ) {");
file.WriteLine("                        var data = transforms[index], size = data.size;");
file.WriteLine("                        switch (data.type) {");
file.WriteLine("                          case \"drop\":");
file.WriteLine("                            start += size;");
file.WriteLine("                            break;");
file.WriteLine("");
file.WriteLine("                          case \"dropRight\":");
file.WriteLine("                            end -= size;");
file.WriteLine("                            break;");
file.WriteLine("");
file.WriteLine("                          case \"take\":");
file.WriteLine("                            end = nativeMin(end, start + size);");
file.WriteLine("                            break;");
file.WriteLine("");
file.WriteLine("                          case \"takeRight\":");
file.WriteLine("                            start = nativeMax(start, end - size);");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    return {");
file.WriteLine("                        start: start,");
file.WriteLine("                        end: end");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function initCloneArray(array) {");
file.WriteLine("                    var length = array.length, result = new array.constructor(length);");
file.WriteLine("                    if (length && \"string\" == typeof array[0] && hasOwnProperty.call(array, \"index\")) {");
file.WriteLine("                        result.index = array.index;");
file.WriteLine("                        result.input = array.input;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function initCloneObject(object) {");
file.WriteLine("                    var Ctor = object.constructor;");
file.WriteLine("                    if (!(\"function\" == typeof Ctor && Ctor instanceof Ctor)) Ctor = Object;");
file.WriteLine("                    return new Ctor();");
file.WriteLine("                }");
file.WriteLine("                function initCloneByTag(object, tag, isDeep) {");
file.WriteLine("                    var Ctor = object.constructor;");
file.WriteLine("                    switch (tag) {");
file.WriteLine("                      case arrayBufferTag:");
file.WriteLine("                        return bufferClone(object);");
file.WriteLine("");
file.WriteLine("                      case boolTag:");
file.WriteLine("                      case dateTag:");
file.WriteLine("                        return new Ctor(+object);");
file.WriteLine("");
file.WriteLine("                      case float32Tag:");
file.WriteLine("                      case float64Tag:");
file.WriteLine("                      case int8Tag:");
file.WriteLine("                      case int16Tag:");
file.WriteLine("                      case int32Tag:");
file.WriteLine("                      case uint8Tag:");
file.WriteLine("                      case uint8ClampedTag:");
file.WriteLine("                      case uint16Tag:");
file.WriteLine("                      case uint32Tag:");
file.WriteLine("                        var buffer = object.buffer;");
file.WriteLine("                        return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);");
file.WriteLine("");
file.WriteLine("                      case numberTag:");
file.WriteLine("                      case stringTag:");
file.WriteLine("                        return new Ctor(object);");
file.WriteLine("");
file.WriteLine("                      case regexpTag:");
file.WriteLine("                        var result = new Ctor(object.source, reFlags.exec(object));");
file.WriteLine("                        result.lastIndex = object.lastIndex;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function invokePath(object, path, args) {");
file.WriteLine("                    if (null != object && !isKey(path, object)) {");
file.WriteLine("                        path = toPath(path);");
file.WriteLine("                        object = 1 == path.length ? object : baseGet(object, baseSlice(path, 0, -1));");
file.WriteLine("                        path = last(path);");
file.WriteLine("                    }");
file.WriteLine("                    var func = null == object ? object : object[path];");
file.WriteLine("                    return null == func ? undefined : func.apply(object, args);");
file.WriteLine("                }");
file.WriteLine("                function isArrayLike(value) {");
file.WriteLine("                    return null != value && isLength(getLength(value));");
file.WriteLine("                }");
file.WriteLine("                function isIndex(value, length) {");
file.WriteLine("                    value = \"number\" == typeof value || reIsUint.test(value) ? +value : -1;");
file.WriteLine("                    length = null == length ? MAX_SAFE_INTEGER : length;");
file.WriteLine("                    return value > -1 && value % 1 == 0 && value < length;");
file.WriteLine("                }");
file.WriteLine("                function isIterateeCall(value, index, object) {");
file.WriteLine("                    if (!isObject(object)) return !1;");
file.WriteLine("                    var type = typeof index;");
file.WriteLine("                    if (\"number\" == type ? isArrayLike(object) && isIndex(index, object.length) : \"string\" == type && index in object) {");
file.WriteLine("                        var other = object[index];");
file.WriteLine("                        return value === value ? value === other : other !== other;");
file.WriteLine("                    }");
file.WriteLine("                    return !1;");
file.WriteLine("                }");
file.WriteLine("                function isKey(value, object) {");
file.WriteLine("                    var type = typeof value;");
file.WriteLine("                    if (\"string\" == type && reIsPlainProp.test(value) || \"number\" == type) return !0;");
file.WriteLine("                    if (isArray(value)) return !1; else return !reIsDeepProp.test(value) || null != object && value in toObject(object);");
file.WriteLine("                }");
file.WriteLine("                function isLaziable(func) {");
file.WriteLine("                    var funcName = getFuncName(func);");
file.WriteLine("                    if (!(funcName in LazyWrapper.prototype)) return !1;");
file.WriteLine("                    var other = lodash[funcName];");
file.WriteLine("                    if (func === other) return !0;");
file.WriteLine("                    var data = getData(other);");
file.WriteLine("                    return !!data && func === data[0];");
file.WriteLine("                }");
file.WriteLine("                function isLength(value) {");
file.WriteLine("                    return \"number\" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;");
file.WriteLine("                }");
file.WriteLine("                function isStrictComparable(value) {");
file.WriteLine("                    return value === value && !isObject(value);");
file.WriteLine("                }");
file.WriteLine("                function mergeData(data, source) {");
file.WriteLine("                    var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < ARY_FLAG, isCombo = srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG || srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8] || srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG;");
file.WriteLine("                    if (!isCommon && !isCombo) return data;");
file.WriteLine("                    if (srcBitmask & BIND_FLAG) {");
file.WriteLine("                        data[2] = source[2];");
file.WriteLine("                        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;");
file.WriteLine("                    }");
file.WriteLine("                    var value = source[3];");
file.WriteLine("                    if (value) {");
file.WriteLine("                        var partials = data[3];");
file.WriteLine("                        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);");
file.WriteLine("                        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);");
file.WriteLine("                    }");
file.WriteLine("                    value = source[5];");
file.WriteLine("                    if (value) {");
file.WriteLine("                        partials = data[5];");
file.WriteLine("                        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);");
file.WriteLine("                        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);");
file.WriteLine("                    }");
file.WriteLine("                    value = source[7];");
file.WriteLine("                    if (value) data[7] = arrayCopy(value);");
file.WriteLine("                    if (srcBitmask & ARY_FLAG) data[8] = null == data[8] ? source[8] : nativeMin(data[8], source[8]);");
file.WriteLine("                    if (null == data[9]) data[9] = source[9];");
file.WriteLine("                    data[0] = source[0];");
file.WriteLine("                    data[1] = newBitmask;");
file.WriteLine("                    return data;");
file.WriteLine("                }");
file.WriteLine("                function mergeDefaults(objectValue, sourceValue) {");
file.WriteLine("                    return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);");
file.WriteLine("                }");
file.WriteLine("                function pickByArray(object, props) {");
file.WriteLine("                    object = toObject(object);");
file.WriteLine("                    for (var index = -1, length = props.length, result = {}; ++index < length; ) {");
file.WriteLine("                        var key = props[index];");
file.WriteLine("                        if (key in object) result[key] = object[key];");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function pickByCallback(object, predicate) {");
file.WriteLine("                    var result = {};");
file.WriteLine("                    baseForIn(object, function(value, key, object) {");
file.WriteLine("                        if (predicate(value, key, object)) result[key] = value;");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function reorder(array, indexes) {");
file.WriteLine("                    for (var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = arrayCopy(array); length--; ) {");
file.WriteLine("                        var index = indexes[length];");
file.WriteLine("                        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;");
file.WriteLine("                    }");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function shimKeys(object) {");
file.WriteLine("                    for (var props = keysIn(object), propsLength = props.length, length = propsLength && object.length, allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object)), index = -1, result = []; ++index < propsLength; ) {");
file.WriteLine("                        var key = props[index];");
file.WriteLine("                        if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) result.push(key);");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function toIterable(value) {");
file.WriteLine("                    if (null == value) return [];");
file.WriteLine("                    if (!isArrayLike(value)) return values(value); else return isObject(value) ? value : Object(value);");
file.WriteLine("                }");
file.WriteLine("                function toObject(value) {");
file.WriteLine("                    return isObject(value) ? value : Object(value);");
file.WriteLine("                }");
file.WriteLine("                function toPath(value) {");
file.WriteLine("                    if (isArray(value)) return value;");
file.WriteLine("                    var result = [];");
file.WriteLine("                    baseToString(value).replace(rePropName, function(match, number, quote, string) {");
file.WriteLine("                        result.push(quote ? string.replace(reEscapeChar, \"$1\") : number || match);");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function wrapperClone(wrapper) {");
file.WriteLine("                    return wrapper instanceof LazyWrapper ? wrapper.clone() : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));");
file.WriteLine("                }");
file.WriteLine("                function chunk(array, size, guard) {");
file.WriteLine("                    if (guard ? isIterateeCall(array, size, guard) : null == size) size = 1; else size = nativeMax(nativeFloor(size) || 1, 1);");
file.WriteLine("                    for (var index = 0, length = array ? array.length : 0, resIndex = -1, result = Array(nativeCeil(length / size)); index < length; ) result[++resIndex] = baseSlice(array, index, index += size);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function compact(array) {");
file.WriteLine("                    for (var index = -1, length = array ? array.length : 0, resIndex = -1, result = []; ++index < length; ) {");
file.WriteLine("                        var value = array[index];");
file.WriteLine("                        if (value) result[++resIndex] = value;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function drop(array, n, guard) {");
file.WriteLine("                    if (!(array ? array.length : 0)) return [];");
file.WriteLine("                    if (guard ? isIterateeCall(array, n, guard) : null == n) n = 1;");
file.WriteLine("                    return baseSlice(array, n < 0 ? 0 : n);");
file.WriteLine("                }");
file.WriteLine("                function dropRight(array, n, guard) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    if (!length) return [];");
file.WriteLine("                    if (guard ? isIterateeCall(array, n, guard) : null == n) n = 1;");
file.WriteLine("                    n = length - (+n || 0);");
file.WriteLine("                    return baseSlice(array, 0, n < 0 ? 0 : n);");
file.WriteLine("                }");
file.WriteLine("                function dropRightWhile(array, predicate, thisArg) {");
file.WriteLine("                    return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), !0, !0) : [];");
file.WriteLine("                }");
file.WriteLine("                function dropWhile(array, predicate, thisArg) {");
file.WriteLine("                    return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), !0) : [];");
file.WriteLine("                }");
file.WriteLine("                function fill(array, value, start, end) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    if (!length) return [];");
file.WriteLine("                    if (start && \"number\" != typeof start && isIterateeCall(array, value, start)) {");
file.WriteLine("                        start = 0;");
file.WriteLine("                        end = length;");
file.WriteLine("                    }");
file.WriteLine("                    return baseFill(array, value, start, end);");
file.WriteLine("                }");
file.WriteLine("                function first(array) {");
file.WriteLine("                    return array ? array[0] : undefined;");
file.WriteLine("                }");
file.WriteLine("                function flatten(array, isDeep, guard) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    if (guard && isIterateeCall(array, isDeep, guard)) isDeep = !1;");
file.WriteLine("                    return length ? baseFlatten(array, isDeep) : [];");
file.WriteLine("                }");
file.WriteLine("                function flattenDeep(array) {");
file.WriteLine("                    return (array ? array.length : 0) ? baseFlatten(array, !0) : [];");
file.WriteLine("                }");
file.WriteLine("                function indexOf(array, value, fromIndex) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    if (!length) return -1;");
file.WriteLine("                    if (\"number\" == typeof fromIndex) fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex; else if (fromIndex) {");
file.WriteLine("                        var index = binaryIndex(array, value);");
file.WriteLine("                        if (index < length && (value === value ? value === array[index] : array[index] !== array[index])) return index; else return -1;");
file.WriteLine("                    }");
file.WriteLine("                    return baseIndexOf(array, value, fromIndex || 0);");
file.WriteLine("                }");
file.WriteLine("                function initial(array) {");
file.WriteLine("                    return dropRight(array, 1);");
file.WriteLine("                }");
file.WriteLine("                function last(array) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    return length ? array[length - 1] : undefined;");
file.WriteLine("                }");
file.WriteLine("                function lastIndexOf(array, value, fromIndex) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    if (!length) return -1;");
file.WriteLine("                    var index = length;");
file.WriteLine("                    if (\"number\" == typeof fromIndex) index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1; else if (fromIndex) {");
file.WriteLine("                        index = binaryIndex(array, value, !0) - 1;");
file.WriteLine("                        var other = array[index];");
file.WriteLine("                        if (value === value ? value === other : other !== other) return index; else return -1;");
file.WriteLine("                    }");
file.WriteLine("                    if (value !== value) return indexOfNaN(array, index, !0);");
file.WriteLine("                    for (;index--; ) if (array[index] === value) return index;");
file.WriteLine("                    return -1;");
file.WriteLine("                }");
file.WriteLine("                function pull() {");
file.WriteLine("                    var args = arguments, array = args[0];");
file.WriteLine("                    if (!array || !array.length) return array;");
file.WriteLine("                    for (var index = 0, indexOf = getIndexOf(), length = args.length; ++index < length; ) for (var fromIndex = 0, value = args[index]; (fromIndex = indexOf(array, value, fromIndex)) > -1; ) splice.call(array, fromIndex, 1);");
file.WriteLine("                    return array;");
file.WriteLine("                }");
file.WriteLine("                function remove(array, predicate, thisArg) {");
file.WriteLine("                    var result = [];");
file.WriteLine("                    if (!array || !array.length) return result;");
file.WriteLine("                    var index = -1, indexes = [], length = array.length;");
file.WriteLine("                    predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                    for (;++index < length; ) {");
file.WriteLine("                        var value = array[index];");
file.WriteLine("                        if (predicate(value, index, array)) {");
file.WriteLine("                            result.push(value);");
file.WriteLine("                            indexes.push(index);");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    basePullAt(array, indexes);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function rest(array) {");
file.WriteLine("                    return drop(array, 1);");
file.WriteLine("                }");
file.WriteLine("                function slice(array, start, end) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    if (!length) return [];");
file.WriteLine("                    if (end && \"number\" != typeof end && isIterateeCall(array, start, end)) {");
file.WriteLine("                        start = 0;");
file.WriteLine("                        end = length;");
file.WriteLine("                    }");
file.WriteLine("                    return baseSlice(array, start, end);");
file.WriteLine("                }");
file.WriteLine("                function take(array, n, guard) {");
file.WriteLine("                    if (!(array ? array.length : 0)) return [];");
file.WriteLine("                    if (guard ? isIterateeCall(array, n, guard) : null == n) n = 1;");
file.WriteLine("                    return baseSlice(array, 0, n < 0 ? 0 : n);");
file.WriteLine("                }");
file.WriteLine("                function takeRight(array, n, guard) {");
file.WriteLine("                    var length = array ? array.length : 0;");
file.WriteLine("                    if (!length) return [];");
file.WriteLine("                    if (guard ? isIterateeCall(array, n, guard) : null == n) n = 1;");
file.WriteLine("                    n = length - (+n || 0);");
file.WriteLine("                    return baseSlice(array, n < 0 ? 0 : n);");
file.WriteLine("                }");
file.WriteLine("                function takeRightWhile(array, predicate, thisArg) {");
file.WriteLine("                    return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), !1, !0) : [];");
file.WriteLine("                }");
file.WriteLine("                function takeWhile(array, predicate, thisArg) {");
file.WriteLine("                    return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3)) : [];");
file.WriteLine("                }");
file.WriteLine("                function uniq(array, isSorted, iteratee, thisArg) {");
file.WriteLine("                    if (!(array ? array.length : 0)) return [];");
file.WriteLine("                    if (null != isSorted && \"boolean\" != typeof isSorted) {");
file.WriteLine("                        thisArg = iteratee;");
file.WriteLine("                        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;");
file.WriteLine("                        isSorted = !1;");
file.WriteLine("                    }");
file.WriteLine("                    var callback = getCallback();");
file.WriteLine("                    if (null != iteratee || callback !== baseCallback) iteratee = callback(iteratee, thisArg, 3);");
file.WriteLine("                    return isSorted && getIndexOf() == baseIndexOf ? sortedUniq(array, iteratee) : baseUniq(array, iteratee);");
file.WriteLine("                }");
file.WriteLine("                function unzip(array) {");
file.WriteLine("                    if (!array || !array.length) return [];");
file.WriteLine("                    var index = -1, length = 0;");
file.WriteLine("                    array = arrayFilter(array, function(group) {");
file.WriteLine("                        if (isArrayLike(group)) {");
file.WriteLine("                            length = nativeMax(group.length, length);");
file.WriteLine("                            return !0;");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                    for (var result = Array(length); ++index < length; ) result[index] = arrayMap(array, baseProperty(index));");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function unzipWith(array, iteratee, thisArg) {");
file.WriteLine("                    if (!(array ? array.length : 0)) return [];");
file.WriteLine("                    var result = unzip(array);");
file.WriteLine("                    if (null == iteratee) return result;");
file.WriteLine("                    iteratee = bindCallback(iteratee, thisArg, 4);");
file.WriteLine("                    return arrayMap(result, function(group) {");
file.WriteLine("                        return arrayReduce(group, iteratee, undefined, !0);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                function xor() {");
file.WriteLine("                    for (var index = -1, length = arguments.length; ++index < length; ) {");
file.WriteLine("                        var array = arguments[index];");
file.WriteLine("                        if (isArrayLike(array)) var result = result ? arrayPush(baseDifference(result, array), baseDifference(array, result)) : array;");
file.WriteLine("                    }");
file.WriteLine("                    return result ? baseUniq(result) : [];");
file.WriteLine("                }");
file.WriteLine("                function zipObject(props, values) {");
file.WriteLine("                    var index = -1, length = props ? props.length : 0, result = {};");
file.WriteLine("                    if (length && !values && !isArray(props[0])) values = [];");
file.WriteLine("                    for (;++index < length; ) {");
file.WriteLine("                        var key = props[index];");
file.WriteLine("                        if (values) result[key] = values[index]; else if (key) result[key[0]] = key[1];");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function chain(value) {");
file.WriteLine("                    var result = lodash(value);");
file.WriteLine("                    result.__chain__ = !0;");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function tap(value, interceptor, thisArg) {");
file.WriteLine("                    interceptor.call(thisArg, value);");
file.WriteLine("                    return value;");
file.WriteLine("                }");
file.WriteLine("                function thru(value, interceptor, thisArg) {");
file.WriteLine("                    return interceptor.call(thisArg, value);");
file.WriteLine("                }");
file.WriteLine("                function wrapperChain() {");
file.WriteLine("                    return chain(this);");
file.WriteLine("                }");
file.WriteLine("                function wrapperCommit() {");
file.WriteLine("                    return new LodashWrapper(this.value(), this.__chain__);");
file.WriteLine("                }");
file.WriteLine("                function wrapperPlant(value) {");
file.WriteLine("                    for (var result, parent = this; parent instanceof baseLodash; ) {");
file.WriteLine("                        var clone = wrapperClone(parent);");
file.WriteLine("                        if (result) previous.__wrapped__ = clone; else result = clone;");
file.WriteLine("                        var previous = clone;");
file.WriteLine("                        parent = parent.__wrapped__;");
file.WriteLine("                    }");
file.WriteLine("                    previous.__wrapped__ = value;");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function wrapperReverse() {");
file.WriteLine("                    var value = this.__wrapped__, interceptor = function(value) {");
file.WriteLine("                        return wrapped && wrapped.__dir__ < 0 ? value : value.reverse();");
file.WriteLine("                    };");
file.WriteLine("                    if (value instanceof LazyWrapper) {");
file.WriteLine("                        var wrapped = value;");
file.WriteLine("                        if (this.__actions__.length) wrapped = new LazyWrapper(this);");
file.WriteLine("                        wrapped = wrapped.reverse();");
file.WriteLine("                        wrapped.__actions__.push({");
file.WriteLine("                            func: thru,");
file.WriteLine("                            args: [ interceptor ],");
file.WriteLine("                            thisArg: undefined");
file.WriteLine("                        });");
file.WriteLine("                        return new LodashWrapper(wrapped, this.__chain__);");
file.WriteLine("                    }");
file.WriteLine("                    return this.thru(interceptor);");
file.WriteLine("                }");
file.WriteLine("                function wrapperToString() {");
file.WriteLine("                    return this.value() + \"\";");
file.WriteLine("                }");
file.WriteLine("                function wrapperValue() {");
file.WriteLine("                    return baseWrapperValue(this.__wrapped__, this.__actions__);");
file.WriteLine("                }");
file.WriteLine("                function every(collection, predicate, thisArg) {");
file.WriteLine("                    var func = isArray(collection) ? arrayEvery : baseEvery;");
file.WriteLine("                    if (thisArg && isIterateeCall(collection, predicate, thisArg)) predicate = undefined;");
file.WriteLine("                    if (\"function\" != typeof predicate || thisArg !== undefined) predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                    return func(collection, predicate);");
file.WriteLine("                }");
file.WriteLine("                function filter(collection, predicate, thisArg) {");
file.WriteLine("                    var func = isArray(collection) ? arrayFilter : baseFilter;");
file.WriteLine("                    predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                    return func(collection, predicate);");
file.WriteLine("                }");
file.WriteLine("                function findWhere(collection, source) {");
file.WriteLine("                    return find(collection, baseMatches(source));");
file.WriteLine("                }");
file.WriteLine("                function includes(collection, target, fromIndex, guard) {");
file.WriteLine("                    var length = collection ? getLength(collection) : 0;");
file.WriteLine("                    if (!isLength(length)) {");
file.WriteLine("                        collection = values(collection);");
file.WriteLine("                        length = collection.length;");
file.WriteLine("                    }");
file.WriteLine("                    if (\"number\" != typeof fromIndex || guard && isIterateeCall(target, fromIndex, guard)) fromIndex = 0; else fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex || 0;");
file.WriteLine("                    return \"string\" == typeof collection || !isArray(collection) && isString(collection) ? fromIndex <= length && collection.indexOf(target, fromIndex) > -1 : !!length && getIndexOf(collection, target, fromIndex) > -1;");
file.WriteLine("                }");
file.WriteLine("                function map(collection, iteratee, thisArg) {");
file.WriteLine("                    var func = isArray(collection) ? arrayMap : baseMap;");
file.WriteLine("                    iteratee = getCallback(iteratee, thisArg, 3);");
file.WriteLine("                    return func(collection, iteratee);");
file.WriteLine("                }");
file.WriteLine("                function pluck(collection, path) {");
file.WriteLine("                    return map(collection, property(path));");
file.WriteLine("                }");
file.WriteLine("                function reject(collection, predicate, thisArg) {");
file.WriteLine("                    var func = isArray(collection) ? arrayFilter : baseFilter;");
file.WriteLine("                    predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                    return func(collection, function(value, index, collection) {");
file.WriteLine("                        return !predicate(value, index, collection);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                function sample(collection, n, guard) {");
file.WriteLine("                    if (guard ? isIterateeCall(collection, n, guard) : null == n) {");
file.WriteLine("                        collection = toIterable(collection);");
file.WriteLine("                        var length = collection.length;");
file.WriteLine("                        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;");
file.WriteLine("                    }");
file.WriteLine("                    var index = -1, result = toArray(collection), length = result.length, lastIndex = length - 1;");
file.WriteLine("                    n = nativeMin(n < 0 ? 0 : +n || 0, length);");
file.WriteLine("                    for (;++index < n; ) {");
file.WriteLine("                        var rand = baseRandom(index, lastIndex), value = result[rand];");
file.WriteLine("                        result[rand] = result[index];");
file.WriteLine("                        result[index] = value;");
file.WriteLine("                    }");
file.WriteLine("                    result.length = n;");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function shuffle(collection) {");
file.WriteLine("                    return sample(collection, POSITIVE_INFINITY);");
file.WriteLine("                }");
file.WriteLine("                function size(collection) {");
file.WriteLine("                    var length = collection ? getLength(collection) : 0;");
file.WriteLine("                    return isLength(length) ? length : keys(collection).length;");
file.WriteLine("                }");
file.WriteLine("                function some(collection, predicate, thisArg) {");
file.WriteLine("                    var func = isArray(collection) ? arraySome : baseSome;");
file.WriteLine("                    if (thisArg && isIterateeCall(collection, predicate, thisArg)) predicate = undefined;");
file.WriteLine("                    if (\"function\" != typeof predicate || thisArg !== undefined) predicate = getCallback(predicate, thisArg, 3);");
file.WriteLine("                    return func(collection, predicate);");
file.WriteLine("                }");
file.WriteLine("                function sortBy(collection, iteratee, thisArg) {");
file.WriteLine("                    if (null == collection) return [];");
file.WriteLine("                    if (thisArg && isIterateeCall(collection, iteratee, thisArg)) iteratee = undefined;");
file.WriteLine("                    var index = -1;");
file.WriteLine("                    iteratee = getCallback(iteratee, thisArg, 3);");
file.WriteLine("                    return baseSortBy(baseMap(collection, function(value, key, collection) {");
file.WriteLine("                        return {");
file.WriteLine("                            criteria: iteratee(value, key, collection),");
file.WriteLine("                            index: ++index,");
file.WriteLine("                            value: value");
file.WriteLine("                        };");
file.WriteLine("                    }), compareAscending);");
file.WriteLine("                }");
file.WriteLine("                function sortByOrder(collection, iteratees, orders, guard) {");
file.WriteLine("                    if (null == collection) return [];");
file.WriteLine("                    if (guard && isIterateeCall(iteratees, orders, guard)) orders = undefined;");
file.WriteLine("                    if (!isArray(iteratees)) iteratees = null == iteratees ? [] : [ iteratees ];");
file.WriteLine("                    if (!isArray(orders)) orders = null == orders ? [] : [ orders ];");
file.WriteLine("                    return baseSortByOrder(collection, iteratees, orders);");
file.WriteLine("                }");
file.WriteLine("                function where(collection, source) {");
file.WriteLine("                    return filter(collection, baseMatches(source));");
file.WriteLine("                }");
file.WriteLine("                function after(n, func) {");
file.WriteLine("                    if (\"function\" != typeof func) if (\"function\" == typeof n) {");
file.WriteLine("                        var temp = n;");
file.WriteLine("                        n = func;");
file.WriteLine("                        func = temp;");
file.WriteLine("                    } else throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    n = nativeIsFinite(n = +n) ? n : 0;");
file.WriteLine("                    return function() {");
file.WriteLine("                        if (--n < 1) return func.apply(this, arguments);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function ary(func, n, guard) {");
file.WriteLine("                    if (guard && isIterateeCall(func, n, guard)) n = undefined;");
file.WriteLine("                    n = func && null == n ? func.length : nativeMax(+n || 0, 0);");
file.WriteLine("                    return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);");
file.WriteLine("                }");
file.WriteLine("                function before(n, func) {");
file.WriteLine("                    var result;");
file.WriteLine("                    if (\"function\" != typeof func) if (\"function\" == typeof n) {");
file.WriteLine("                        var temp = n;");
file.WriteLine("                        n = func;");
file.WriteLine("                        func = temp;");
file.WriteLine("                    } else throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    return function() {");
file.WriteLine("                        if (--n > 0) result = func.apply(this, arguments);");
file.WriteLine("                        if (n <= 1) func = undefined;");
file.WriteLine("                        return result;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function debounce(func, wait, options) {");
file.WriteLine("                    function cancel() {");
file.WriteLine("                        if (timeoutId) clearTimeout(timeoutId);");
file.WriteLine("                        if (maxTimeoutId) clearTimeout(maxTimeoutId);");
file.WriteLine("                        lastCalled = 0;");
file.WriteLine("                        maxTimeoutId = timeoutId = trailingCall = undefined;");
file.WriteLine("                    }");
file.WriteLine("                    function complete(isCalled, id) {");
file.WriteLine("                        if (id) clearTimeout(id);");
file.WriteLine("                        maxTimeoutId = timeoutId = trailingCall = undefined;");
file.WriteLine("                        if (isCalled) {");
file.WriteLine("                            lastCalled = now();");
file.WriteLine("                            result = func.apply(thisArg, args);");
file.WriteLine("                            if (!timeoutId && !maxTimeoutId) args = thisArg = undefined;");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    function delayed() {");
file.WriteLine("                        var remaining = wait - (now() - stamp);");
file.WriteLine("                        if (remaining <= 0 || remaining > wait) complete(trailingCall, maxTimeoutId); else timeoutId = setTimeout(delayed, remaining);");
file.WriteLine("                    }");
file.WriteLine("                    function maxDelayed() {");
file.WriteLine("                        complete(trailing, timeoutId);");
file.WriteLine("                    }");
file.WriteLine("                    function debounced() {");
file.WriteLine("                        args = arguments;");
file.WriteLine("                        stamp = now();");
file.WriteLine("                        thisArg = this;");
file.WriteLine("                        trailingCall = trailing && (timeoutId || !leading);");
file.WriteLine("                        if (!1 === maxWait) var leadingCall = leading && !timeoutId; else {");
file.WriteLine("                            if (!maxTimeoutId && !leading) lastCalled = stamp;");
file.WriteLine("                            var remaining = maxWait - (stamp - lastCalled), isCalled = remaining <= 0 || remaining > maxWait;");
file.WriteLine("                            if (isCalled) {");
file.WriteLine("                                if (maxTimeoutId) maxTimeoutId = clearTimeout(maxTimeoutId);");
file.WriteLine("                                lastCalled = stamp;");
file.WriteLine("                                result = func.apply(thisArg, args);");
file.WriteLine("                            } else if (!maxTimeoutId) maxTimeoutId = setTimeout(maxDelayed, remaining);");
file.WriteLine("                        }");
file.WriteLine("                        if (isCalled && timeoutId) timeoutId = clearTimeout(timeoutId); else if (!timeoutId && wait !== maxWait) timeoutId = setTimeout(delayed, wait);");
file.WriteLine("                        if (leadingCall) {");
file.WriteLine("                            isCalled = !0;");
file.WriteLine("                            result = func.apply(thisArg, args);");
file.WriteLine("                        }");
file.WriteLine("                        if (isCalled && !timeoutId && !maxTimeoutId) args = thisArg = undefined;");
file.WriteLine("                        return result;");
file.WriteLine("                    }");
file.WriteLine("                    var args, maxTimeoutId, result, stamp, thisArg, timeoutId, trailingCall, lastCalled = 0, maxWait = !1, trailing = !0;");
file.WriteLine("                    if (\"function\" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    wait = wait < 0 ? 0 : +wait || 0;");
file.WriteLine("                    if (!0 === options) {");
file.WriteLine("                        var leading = !0;");
file.WriteLine("                        trailing = !1;");
file.WriteLine("                    } else if (isObject(options)) {");
file.WriteLine("                        leading = !!options.leading;");
file.WriteLine("                        maxWait = \"maxWait\" in options && nativeMax(+options.maxWait || 0, wait);");
file.WriteLine("                        trailing = \"trailing\" in options ? !!options.trailing : trailing;");
file.WriteLine("                    }");
file.WriteLine("                    debounced.cancel = cancel;");
file.WriteLine("                    return debounced;");
file.WriteLine("                }");
file.WriteLine("                function memoize(func, resolver) {");
file.WriteLine("                    if (\"function\" != typeof func || resolver && \"function\" != typeof resolver) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    var memoized = function() {");
file.WriteLine("                        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;");
file.WriteLine("                        if (cache.has(key)) return cache.get(key);");
file.WriteLine("                        var result = func.apply(this, args);");
file.WriteLine("                        memoized.cache = cache.set(key, result);");
file.WriteLine("                        return result;");
file.WriteLine("                    };");
file.WriteLine("                    memoized.cache = new memoize.Cache();");
file.WriteLine("                    return memoized;");
file.WriteLine("                }");
file.WriteLine("                function negate(predicate) {");
file.WriteLine("                    if (\"function\" != typeof predicate) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    return function() {");
file.WriteLine("                        return !predicate.apply(this, arguments);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function once(func) {");
file.WriteLine("                    return before(2, func);");
file.WriteLine("                }");
file.WriteLine("                function restParam(func, start) {");
file.WriteLine("                    if (\"function\" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    start = nativeMax(start === undefined ? func.length - 1 : +start || 0, 0);");
file.WriteLine("                    return function() {");
file.WriteLine("                        for (var args = arguments, index = -1, length = nativeMax(args.length - start, 0), rest = Array(length); ++index < length; ) rest[index] = args[start + index];");
file.WriteLine("                        switch (start) {");
file.WriteLine("                          case 0:");
file.WriteLine("                            return func.call(this, rest);");
file.WriteLine("");
file.WriteLine("                          case 1:");
file.WriteLine("                            return func.call(this, args[0], rest);");
file.WriteLine("");
file.WriteLine("                          case 2:");
file.WriteLine("                            return func.call(this, args[0], args[1], rest);");
file.WriteLine("                        }");
file.WriteLine("                        var otherArgs = Array(start + 1);");
file.WriteLine("                        index = -1;");
file.WriteLine("                        for (;++index < start; ) otherArgs[index] = args[index];");
file.WriteLine("                        otherArgs[start] = rest;");
file.WriteLine("                        return func.apply(this, otherArgs);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function spread(func) {");
file.WriteLine("                    if (\"function\" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    return function(array) {");
file.WriteLine("                        return func.apply(this, array);");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function throttle(func, wait, options) {");
file.WriteLine("                    var leading = !0, trailing = !0;");
file.WriteLine("                    if (\"function\" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    if (!1 === options) leading = !1; else if (isObject(options)) {");
file.WriteLine("                        leading = \"leading\" in options ? !!options.leading : leading;");
file.WriteLine("                        trailing = \"trailing\" in options ? !!options.trailing : trailing;");
file.WriteLine("                    }");
file.WriteLine("                    return debounce(func, wait, {");
file.WriteLine("                        leading: leading,");
file.WriteLine("                        maxWait: +wait,");
file.WriteLine("                        trailing: trailing");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                function wrap(value, wrapper) {");
file.WriteLine("                    wrapper = null == wrapper ? identity : wrapper;");
file.WriteLine("                    return createWrapper(wrapper, PARTIAL_FLAG, undefined, [ value ], []);");
file.WriteLine("                }");
file.WriteLine("                function clone(value, isDeep, customizer, thisArg) {");
file.WriteLine("                    if (isDeep && \"boolean\" != typeof isDeep && isIterateeCall(value, isDeep, customizer)) isDeep = !1; else if (\"function\" == typeof isDeep) {");
file.WriteLine("                        thisArg = customizer;");
file.WriteLine("                        customizer = isDeep;");
file.WriteLine("                        isDeep = !1;");
file.WriteLine("                    }");
file.WriteLine("                    return \"function\" == typeof customizer ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1)) : baseClone(value, isDeep);");
file.WriteLine("                }");
file.WriteLine("                function cloneDeep(value, customizer, thisArg) {");
file.WriteLine("                    return \"function\" == typeof customizer ? baseClone(value, !0, bindCallback(customizer, thisArg, 1)) : baseClone(value, !0);");
file.WriteLine("                }");
file.WriteLine("                function gt(value, other) {");
file.WriteLine("                    return value > other;");
file.WriteLine("                }");
file.WriteLine("                function gte(value, other) {");
file.WriteLine("                    return value >= other;");
file.WriteLine("                }");
file.WriteLine("                function isArguments(value) {");
file.WriteLine("                    return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, \"callee\") && !propertyIsEnumerable.call(value, \"callee\");");
file.WriteLine("                }");
file.WriteLine("                function isBoolean(value) {");
file.WriteLine("                    return !0 === value || !1 === value || isObjectLike(value) && objToString.call(value) == boolTag;");
file.WriteLine("                }");
file.WriteLine("                function isDate(value) {");
file.WriteLine("                    return isObjectLike(value) && objToString.call(value) == dateTag;");
file.WriteLine("                }");
file.WriteLine("                function isElement(value) {");
file.WriteLine("                    return !!value && 1 === value.nodeType && isObjectLike(value) && !isPlainObject(value);");
file.WriteLine("                }");
file.WriteLine("                function isEmpty(value) {");
file.WriteLine("                    if (null == value) return !0;");
file.WriteLine("                    if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || isObjectLike(value) && isFunction(value.splice))) return !value.length; else return !keys(value).length;");
file.WriteLine("                }");
file.WriteLine("                function isEqual(value, other, customizer, thisArg) {");
file.WriteLine("                    customizer = \"function\" == typeof customizer ? bindCallback(customizer, thisArg, 3) : undefined;");
file.WriteLine("                    var result = customizer ? customizer(value, other) : undefined;");
file.WriteLine("                    return result === undefined ? baseIsEqual(value, other, customizer) : !!result;");
file.WriteLine("                }");
file.WriteLine("                function isError(value) {");
file.WriteLine("                    return isObjectLike(value) && \"string\" == typeof value.message && objToString.call(value) == errorTag;");
file.WriteLine("                }");
file.WriteLine("                function isFinite(value) {");
file.WriteLine("                    return \"number\" == typeof value && nativeIsFinite(value);");
file.WriteLine("                }");
file.WriteLine("                function isFunction(value) {");
file.WriteLine("                    return isObject(value) && objToString.call(value) == funcTag;");
file.WriteLine("                }");
file.WriteLine("                function isObject(value) {");
file.WriteLine("                    var type = typeof value;");
file.WriteLine("                    return !!value && (\"object\" == type || \"function\" == type);");
file.WriteLine("                }");
file.WriteLine("                function isMatch(object, source, customizer, thisArg) {");
file.WriteLine("                    customizer = \"function\" == typeof customizer ? bindCallback(customizer, thisArg, 3) : undefined;");
file.WriteLine("                    return baseIsMatch(object, getMatchData(source), customizer);");
file.WriteLine("                }");
file.WriteLine("                function isNaN(value) {");
file.WriteLine("                    return isNumber(value) && value != +value;");
file.WriteLine("                }");
file.WriteLine("                function isNative(value) {");
file.WriteLine("                    if (null == value) return !1;");
file.WriteLine("                    if (isFunction(value)) return reIsNative.test(fnToString.call(value)); else return isObjectLike(value) && reIsHostCtor.test(value);");
file.WriteLine("                }");
file.WriteLine("                function isNull(value) {");
file.WriteLine("                    return null === value;");
file.WriteLine("                }");
file.WriteLine("                function isNumber(value) {");
file.WriteLine("                    return \"number\" == typeof value || isObjectLike(value) && objToString.call(value) == numberTag;");
file.WriteLine("                }");
file.WriteLine("                function isPlainObject(value) {");
file.WriteLine("                    var Ctor;");
file.WriteLine("                    if (!isObjectLike(value) || objToString.call(value) != objectTag || isArguments(value) || !hasOwnProperty.call(value, \"constructor\") && \"function\" == typeof (Ctor = value.constructor) && !(Ctor instanceof Ctor)) return !1;");
file.WriteLine("                    var result;");
file.WriteLine("                    baseForIn(value, function(subValue, key) {");
file.WriteLine("                        result = key;");
file.WriteLine("                    });");
file.WriteLine("                    return result === undefined || hasOwnProperty.call(value, result);");
file.WriteLine("                }");
file.WriteLine("                function isRegExp(value) {");
file.WriteLine("                    return isObject(value) && objToString.call(value) == regexpTag;");
file.WriteLine("                }");
file.WriteLine("                function isString(value) {");
file.WriteLine("                    return \"string\" == typeof value || isObjectLike(value) && objToString.call(value) == stringTag;");
file.WriteLine("                }");
file.WriteLine("                function isTypedArray(value) {");
file.WriteLine("                    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];");
file.WriteLine("                }");
file.WriteLine("                function isUndefined(value) {");
file.WriteLine("                    return value === undefined;");
file.WriteLine("                }");
file.WriteLine("                function lt(value, other) {");
file.WriteLine("                    return value < other;");
file.WriteLine("                }");
file.WriteLine("                function lte(value, other) {");
file.WriteLine("                    return value <= other;");
file.WriteLine("                }");
file.WriteLine("                function toArray(value) {");
file.WriteLine("                    var length = value ? getLength(value) : 0;");
file.WriteLine("                    if (!isLength(length)) return values(value);");
file.WriteLine("                    if (!length) return []; else return arrayCopy(value);");
file.WriteLine("                }");
file.WriteLine("                function toPlainObject(value) {");
file.WriteLine("                    return baseCopy(value, keysIn(value));");
file.WriteLine("                }");
file.WriteLine("                function create(prototype, properties, guard) {");
file.WriteLine("                    var result = baseCreate(prototype);");
file.WriteLine("                    if (guard && isIterateeCall(prototype, properties, guard)) properties = undefined;");
file.WriteLine("                    return properties ? baseAssign(result, properties) : result;");
file.WriteLine("                }");
file.WriteLine("                function functions(object) {");
file.WriteLine("                    return baseFunctions(object, keysIn(object));");
file.WriteLine("                }");
file.WriteLine("                function get(object, path, defaultValue) {");
file.WriteLine("                    var result = null == object ? undefined : baseGet(object, toPath(path), path + \"\");");
file.WriteLine("                    return result === undefined ? defaultValue : result;");
file.WriteLine("                }");
file.WriteLine("                function has(object, path) {");
file.WriteLine("                    if (null == object) return !1;");
file.WriteLine("                    var result = hasOwnProperty.call(object, path);");
file.WriteLine("                    if (!result && !isKey(path)) {");
file.WriteLine("                        path = toPath(path);");
file.WriteLine("                        object = 1 == path.length ? object : baseGet(object, baseSlice(path, 0, -1));");
file.WriteLine("                        if (null == object) return !1;");
file.WriteLine("                        path = last(path);");
file.WriteLine("                        result = hasOwnProperty.call(object, path);");
file.WriteLine("                    }");
file.WriteLine("                    return result || isLength(object.length) && isIndex(path, object.length) && (isArray(object) || isArguments(object));");
file.WriteLine("                }");
file.WriteLine("                function invert(object, multiValue, guard) {");
file.WriteLine("                    if (guard && isIterateeCall(object, multiValue, guard)) multiValue = undefined;");
file.WriteLine("                    for (var index = -1, props = keys(object), length = props.length, result = {}; ++index < length; ) {");
file.WriteLine("                        var key = props[index], value = object[key];");
file.WriteLine("                        if (multiValue) if (hasOwnProperty.call(result, value)) result[value].push(key); else result[value] = [ key ]; else result[value] = key;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function keysIn(object) {");
file.WriteLine("                    if (null == object) return [];");
file.WriteLine("                    if (!isObject(object)) object = Object(object);");
file.WriteLine("                    var length = object.length;");
file.WriteLine("                    length = length && isLength(length) && (isArray(object) || isArguments(object)) && length || 0;");
file.WriteLine("                    for (var Ctor = object.constructor, index = -1, isProto = \"function\" == typeof Ctor && Ctor.prototype === object, result = Array(length), skipIndexes = length > 0; ++index < length; ) result[index] = index + \"\";");
file.WriteLine("                    for (var key in object) if ((!skipIndexes || !isIndex(key, length)) && (\"constructor\" != key || !isProto && hasOwnProperty.call(object, key))) result.push(key);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function pairs(object) {");
file.WriteLine("                    object = toObject(object);");
file.WriteLine("                    for (var index = -1, props = keys(object), length = props.length, result = Array(length); ++index < length; ) {");
file.WriteLine("                        var key = props[index];");
file.WriteLine("                        result[index] = [ key, object[key] ];");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function result(object, path, defaultValue) {");
file.WriteLine("                    var result = null == object ? undefined : object[path];");
file.WriteLine("                    if (result === undefined) {");
file.WriteLine("                        if (null != object && !isKey(path, object)) {");
file.WriteLine("                            path = toPath(path);");
file.WriteLine("                            object = 1 == path.length ? object : baseGet(object, baseSlice(path, 0, -1));");
file.WriteLine("                            result = null == object ? undefined : object[last(path)];");
file.WriteLine("                        }");
file.WriteLine("                        result = result === undefined ? defaultValue : result;");
file.WriteLine("                    }");
file.WriteLine("                    return isFunction(result) ? result.call(object) : result;");
file.WriteLine("                }");
file.WriteLine("                function set(object, path, value) {");
file.WriteLine("                    if (null == object) return object;");
file.WriteLine("                    var pathKey = path + \"\";");
file.WriteLine("                    path = null != object[pathKey] || isKey(path, object) ? [ pathKey ] : toPath(path);");
file.WriteLine("                    for (var index = -1, length = path.length, lastIndex = length - 1, nested = object; null != nested && ++index < length; ) {");
file.WriteLine("                        var key = path[index];");
file.WriteLine("                        if (isObject(nested)) if (index == lastIndex) nested[key] = value; else if (null == nested[key]) nested[key] = isIndex(path[index + 1]) ? [] : {};");
file.WriteLine("                        nested = nested[key];");
file.WriteLine("                    }");
file.WriteLine("                    return object;");
file.WriteLine("                }");
file.WriteLine("                function transform(object, iteratee, accumulator, thisArg) {");
file.WriteLine("                    var isArr = isArray(object) || isTypedArray(object);");
file.WriteLine("                    iteratee = getCallback(iteratee, thisArg, 4);");
file.WriteLine("                    if (null == accumulator) if (isArr || isObject(object)) {");
file.WriteLine("                        var Ctor = object.constructor;");
file.WriteLine("                        if (isArr) accumulator = isArray(object) ? new Ctor() : []; else accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);");
file.WriteLine("                    } else accumulator = {};");
file.WriteLine("                    (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {");
file.WriteLine("                        return iteratee(accumulator, value, index, object);");
file.WriteLine("                    });");
file.WriteLine("                    return accumulator;");
file.WriteLine("                }");
file.WriteLine("                function values(object) {");
file.WriteLine("                    return baseValues(object, keys(object));");
file.WriteLine("                }");
file.WriteLine("                function valuesIn(object) {");
file.WriteLine("                    return baseValues(object, keysIn(object));");
file.WriteLine("                }");
file.WriteLine("                function inRange(value, start, end) {");
file.WriteLine("                    start = +start || 0;");
file.WriteLine("                    if (end === undefined) {");
file.WriteLine("                        end = start;");
file.WriteLine("                        start = 0;");
file.WriteLine("                    } else end = +end || 0;");
file.WriteLine("                    return value >= nativeMin(start, end) && value < nativeMax(start, end);");
file.WriteLine("                }");
file.WriteLine("                function random(min, max, floating) {");
file.WriteLine("                    if (floating && isIterateeCall(min, max, floating)) max = floating = undefined;");
file.WriteLine("                    var noMin = null == min, noMax = null == max;");
file.WriteLine("                    if (null == floating) if (noMax && \"boolean\" == typeof min) {");
file.WriteLine("                        floating = min;");
file.WriteLine("                        min = 1;");
file.WriteLine("                    } else if (\"boolean\" == typeof max) {");
file.WriteLine("                        floating = max;");
file.WriteLine("                        noMax = !0;");
file.WriteLine("                    }");
file.WriteLine("                    if (noMin && noMax) {");
file.WriteLine("                        max = 1;");
file.WriteLine("                        noMax = !1;");
file.WriteLine("                    }");
file.WriteLine("                    min = +min || 0;");
file.WriteLine("                    if (noMax) {");
file.WriteLine("                        max = min;");
file.WriteLine("                        min = 0;");
file.WriteLine("                    } else max = +max || 0;");
file.WriteLine("                    if (floating || min % 1 || max % 1) {");
file.WriteLine("                        var rand = nativeRandom();");
file.WriteLine("                        return nativeMin(min + rand * (max - min + parseFloat(\"1e-\" + ((rand + \"\").length - 1))), max);");
file.WriteLine("                    }");
file.WriteLine("                    return baseRandom(min, max);");
file.WriteLine("                }");
file.WriteLine("                function capitalize(string) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    return string && string.charAt(0).toUpperCase() + string.slice(1);");
file.WriteLine("                }");
file.WriteLine("                function deburr(string) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, \"\");");
file.WriteLine("                }");
file.WriteLine("                function endsWith(string, target, position) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    target += \"\";");
file.WriteLine("                    var length = string.length;");
file.WriteLine("                    position = position === undefined ? length : nativeMin(position < 0 ? 0 : +position || 0, length);");
file.WriteLine("                    position -= target.length;");
file.WriteLine("                    return position >= 0 && string.indexOf(target, position) == position;");
file.WriteLine("                }");
file.WriteLine("                function escape(string) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;");
file.WriteLine("                }");
file.WriteLine("                function escapeRegExp(string) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    return string && reHasRegExpChars.test(string) ? string.replace(reRegExpChars, escapeRegExpChar) : string || \"(?:)\";");
file.WriteLine("                }");
file.WriteLine("                function pad(string, length, chars) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    length = +length;");
file.WriteLine("                    var strLength = string.length;");
file.WriteLine("                    if (strLength >= length || !nativeIsFinite(length)) return string;");
file.WriteLine("                    var mid = (length - strLength) / 2, leftLength = nativeFloor(mid);");
file.WriteLine("                    chars = createPadding(\"\", nativeCeil(mid), chars);");
file.WriteLine("                    return chars.slice(0, leftLength) + string + chars;");
file.WriteLine("                }");
file.WriteLine("                function parseInt(string, radix, guard) {");
file.WriteLine("                    if (guard ? isIterateeCall(string, radix, guard) : null == radix) radix = 0; else if (radix) radix = +radix;");
file.WriteLine("                    string = trim(string);");
file.WriteLine("                    return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));");
file.WriteLine("                }");
file.WriteLine("                function repeat(string, n) {");
file.WriteLine("                    var result = \"\";");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    n = +n;");
file.WriteLine("                    if (n < 1 || !string || !nativeIsFinite(n)) return result;");
file.WriteLine("                    do {");
file.WriteLine("                        if (n % 2) result += string;");
file.WriteLine("                        n = nativeFloor(n / 2);");
file.WriteLine("                        string += string;");
file.WriteLine("                    } while (n);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function startsWith(string, target, position) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    position = null == position ? 0 : nativeMin(position < 0 ? 0 : +position || 0, string.length);");
file.WriteLine("                    return string.lastIndexOf(target, position) == position;");
file.WriteLine("                }");
file.WriteLine("                function template(string, options, otherOptions) {");
file.WriteLine("                    var settings = lodash.templateSettings;");
file.WriteLine("                    if (otherOptions && isIterateeCall(string, options, otherOptions)) options = otherOptions = undefined;");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);");
file.WriteLine("                    var isEscaping, isEvaluating, imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys), index = 0, interpolate = options.interpolate || reNoMatch, source = \"__p += '\", reDelimiters = RegExp((options.escape || reNoMatch).source + \"|\" + interpolate.source + \"|\" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + \"|\" + (options.evaluate || reNoMatch).source + \"|$\", \"g\"), sourceURL = \"//# sourceURL=\" + (\"sourceURL\" in options ? options.sourceURL : \"lodash.templateSources[\" + ++templateCounter + \"]\") + \"\\n\";");
file.WriteLine("                    string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {");
file.WriteLine("                        interpolateValue || (interpolateValue = esTemplateValue);");
file.WriteLine("                        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);");
file.WriteLine("                        if (escapeValue) {");
file.WriteLine("                            isEscaping = !0;");
file.WriteLine("                            source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";");
file.WriteLine("                        }");
file.WriteLine("                        if (evaluateValue) {");
file.WriteLine("                            isEvaluating = !0;");
file.WriteLine("                            source += \"';\\n\" + evaluateValue + \";\\n__p += '\";");
file.WriteLine("                        }");
file.WriteLine("                        if (interpolateValue) source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";");
file.WriteLine("                        index = offset + match.length;");
file.WriteLine("                        return match;");
file.WriteLine("                    });");
file.WriteLine("                    source += \"';\\n\";");
file.WriteLine("                    var variable = options.variable;");
file.WriteLine("                    if (!variable) source = \"with (obj) {\\n\" + source + \"\\n}\\n\";");
file.WriteLine("                    source = (isEvaluating ? source.replace(reEmptyStringLeading, \"\") : source).replace(reEmptyStringMiddle, \"$1\").replace(reEmptyStringTrailing, \"$1;\");");
file.WriteLine("                    source = \"function(\" + (variable || \"obj\") + \") {\\n\" + (variable ? \"\" : \"obj || (obj = {});\\n\") + \"var __t, __p = ''\" + (isEscaping ? \", __e = _.escape\" : \"\") + (isEvaluating ? \", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\" : \";\\n\") + source + \"return __p\\n}\";");
file.WriteLine("                    var result = attempt(function() {");
file.WriteLine("                        return Function(importsKeys, sourceURL + \"return \" + source).apply(undefined, importsValues);");
file.WriteLine("                    });");
file.WriteLine("                    result.source = source;");
file.WriteLine("                    if (isError(result)) throw result;");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function trim(string, chars, guard) {");
file.WriteLine("                    var value = string;");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    if (!string) return string;");
file.WriteLine("                    if (guard ? isIterateeCall(value, chars, guard) : null == chars) return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);");
file.WriteLine("                    chars += \"\";");
file.WriteLine("                    return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);");
file.WriteLine("                }");
file.WriteLine("                function trimLeft(string, chars, guard) {");
file.WriteLine("                    var value = string;");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    if (!string) return string;");
file.WriteLine("                    if (guard ? isIterateeCall(value, chars, guard) : null == chars) return string.slice(trimmedLeftIndex(string)); else return string.slice(charsLeftIndex(string, chars + \"\"));");
file.WriteLine("                }");
file.WriteLine("                function trimRight(string, chars, guard) {");
file.WriteLine("                    var value = string;");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    if (!string) return string;");
file.WriteLine("                    if (guard ? isIterateeCall(value, chars, guard) : null == chars) return string.slice(0, trimmedRightIndex(string) + 1); else return string.slice(0, charsRightIndex(string, chars + \"\") + 1);");
file.WriteLine("                }");
file.WriteLine("                function trunc(string, options, guard) {");
file.WriteLine("                    if (guard && isIterateeCall(string, options, guard)) options = undefined;");
file.WriteLine("                    var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;");
file.WriteLine("                    if (null != options) if (isObject(options)) {");
file.WriteLine("                        var separator = \"separator\" in options ? options.separator : separator;");
file.WriteLine("                        length = \"length\" in options ? +options.length || 0 : length;");
file.WriteLine("                        omission = \"omission\" in options ? baseToString(options.omission) : omission;");
file.WriteLine("                    } else length = +options || 0;");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    if (length >= string.length) return string;");
file.WriteLine("                    var end = length - omission.length;");
file.WriteLine("                    if (end < 1) return omission;");
file.WriteLine("                    var result = string.slice(0, end);");
file.WriteLine("                    if (null == separator) return result + omission;");
file.WriteLine("                    if (isRegExp(separator)) {");
file.WriteLine("                        if (string.slice(end).search(separator)) {");
file.WriteLine("                            var match, newEnd, substring = string.slice(0, end);");
file.WriteLine("                            if (!separator.global) separator = RegExp(separator.source, (reFlags.exec(separator) || \"\") + \"g\");");
file.WriteLine("                            separator.lastIndex = 0;");
file.WriteLine("                            for (;match = separator.exec(substring); ) newEnd = match.index;");
file.WriteLine("                            result = result.slice(0, null == newEnd ? end : newEnd);");
file.WriteLine("                        }");
file.WriteLine("                    } else if (string.indexOf(separator, end) != end) {");
file.WriteLine("                        var index = result.lastIndexOf(separator);");
file.WriteLine("                        if (index > -1) result = result.slice(0, index);");
file.WriteLine("                    }");
file.WriteLine("                    return result + omission;");
file.WriteLine("                }");
file.WriteLine("                function unescape(string) {");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;");
file.WriteLine("                }");
file.WriteLine("                function words(string, pattern, guard) {");
file.WriteLine("                    if (guard && isIterateeCall(string, pattern, guard)) pattern = undefined;");
file.WriteLine("                    string = baseToString(string);");
file.WriteLine("                    return string.match(pattern || reWords) || [];");
file.WriteLine("                }");
file.WriteLine("                function callback(func, thisArg, guard) {");
file.WriteLine("                    if (guard && isIterateeCall(func, thisArg, guard)) thisArg = undefined;");
file.WriteLine("                    return isObjectLike(func) ? matches(func) : baseCallback(func, thisArg);");
file.WriteLine("                }");
file.WriteLine("                function constant(value) {");
file.WriteLine("                    return function() {");
file.WriteLine("                        return value;");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function identity(value) {");
file.WriteLine("                    return value;");
file.WriteLine("                }");
file.WriteLine("                function matches(source) {");
file.WriteLine("                    return baseMatches(baseClone(source, !0));");
file.WriteLine("                }");
file.WriteLine("                function matchesProperty(path, srcValue) {");
file.WriteLine("                    return baseMatchesProperty(path, baseClone(srcValue, !0));");
file.WriteLine("                }");
file.WriteLine("                function mixin(object, source, options) {");
file.WriteLine("                    if (null == options) {");
file.WriteLine("                        var isObj = isObject(source), props = isObj ? keys(source) : undefined, methodNames = props && props.length ? baseFunctions(source, props) : undefined;");
file.WriteLine("                        if (!(methodNames ? methodNames.length : isObj)) {");
file.WriteLine("                            methodNames = !1;");
file.WriteLine("                            options = source;");
file.WriteLine("                            source = object;");
file.WriteLine("                            object = this;");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    if (!methodNames) methodNames = baseFunctions(source, keys(source));");
file.WriteLine("                    var chain = !0, index = -1, isFunc = isFunction(object), length = methodNames.length;");
file.WriteLine("                    if (!1 === options) chain = !1; else if (isObject(options) && \"chain\" in options) chain = options.chain;");
file.WriteLine("                    for (;++index < length; ) {");
file.WriteLine("                        var methodName = methodNames[index], func = source[methodName];");
file.WriteLine("                        object[methodName] = func;");
file.WriteLine("                        if (isFunc) object.prototype[methodName] = function(func) {");
file.WriteLine("                            return function() {");
file.WriteLine("                                var chainAll = this.__chain__;");
file.WriteLine("                                if (chain || chainAll) {");
file.WriteLine("                                    var result = object(this.__wrapped__);");
file.WriteLine("                                    (result.__actions__ = arrayCopy(this.__actions__)).push({");
file.WriteLine("                                        func: func,");
file.WriteLine("                                        args: arguments,");
file.WriteLine("                                        thisArg: object");
file.WriteLine("                                    });");
file.WriteLine("                                    result.__chain__ = chainAll;");
file.WriteLine("                                    return result;");
file.WriteLine("                                }");
file.WriteLine("                                return func.apply(object, arrayPush([ this.value() ], arguments));");
file.WriteLine("                            };");
file.WriteLine("                        }(func);");
file.WriteLine("                    }");
file.WriteLine("                    return object;");
file.WriteLine("                }");
file.WriteLine("                function noConflict() {");
file.WriteLine("                    root._ = oldDash;");
file.WriteLine("                    return this;");
file.WriteLine("                }");
file.WriteLine("                function noop() {}");
file.WriteLine("                function property(path) {");
file.WriteLine("                    return isKey(path) ? baseProperty(path) : basePropertyDeep(path);");
file.WriteLine("                }");
file.WriteLine("                function propertyOf(object) {");
file.WriteLine("                    return function(path) {");
file.WriteLine("                        return baseGet(object, toPath(path), path + \"\");");
file.WriteLine("                    };");
file.WriteLine("                }");
file.WriteLine("                function range(start, end, step) {");
file.WriteLine("                    if (step && isIterateeCall(start, end, step)) end = step = undefined;");
file.WriteLine("                    start = +start || 0;");
file.WriteLine("                    step = null == step ? 1 : +step || 0;");
file.WriteLine("                    if (null == end) {");
file.WriteLine("                        end = start;");
file.WriteLine("                        start = 0;");
file.WriteLine("                    } else end = +end || 0;");
file.WriteLine("                    for (var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length); ++index < length; ) {");
file.WriteLine("                        result[index] = start;");
file.WriteLine("                        start += step;");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function times(n, iteratee, thisArg) {");
file.WriteLine("                    n = nativeFloor(n);");
file.WriteLine("                    if (n < 1 || !nativeIsFinite(n)) return [];");
file.WriteLine("                    var index = -1, result = Array(nativeMin(n, MAX_ARRAY_LENGTH));");
file.WriteLine("                    iteratee = bindCallback(iteratee, thisArg, 1);");
file.WriteLine("                    for (;++index < n; ) if (index < MAX_ARRAY_LENGTH) result[index] = iteratee(index); else iteratee(index);");
file.WriteLine("                    return result;");
file.WriteLine("                }");
file.WriteLine("                function uniqueId(prefix) {");
file.WriteLine("                    var id = ++idCounter;");
file.WriteLine("                    return baseToString(prefix) + id;");
file.WriteLine("                }");
file.WriteLine("                function add(augend, addend) {");
file.WriteLine("                    return (+augend || 0) + (+addend || 0);");
file.WriteLine("                }");
file.WriteLine("                function sum(collection, iteratee, thisArg) {");
file.WriteLine("                    if (thisArg && isIterateeCall(collection, iteratee, thisArg)) iteratee = undefined;");
file.WriteLine("                    iteratee = getCallback(iteratee, thisArg, 3);");
file.WriteLine("                    return 1 == iteratee.length ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee) : baseSum(collection, iteratee);");
file.WriteLine("                }");
file.WriteLine("                context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;");
file.WriteLine("                var Array = context.Array, Date = context.Date, Error = context.Error, Function = context.Function, Math = context.Math, Number = context.Number, Object = context.Object, RegExp = context.RegExp, String = context.String, TypeError = context.TypeError, arrayProto = Array.prototype, objectProto = Object.prototype, stringProto = String.prototype, fnToString = Function.prototype.toString, hasOwnProperty = objectProto.hasOwnProperty, idCounter = 0, objToString = objectProto.toString, oldDash = root._, reIsNative = RegExp(\"^\" + fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"), ArrayBuffer = context.ArrayBuffer, clearTimeout = context.clearTimeout, parseFloat = context.parseFloat, pow = Math.pow, propertyIsEnumerable = objectProto.propertyIsEnumerable, Set = getNative(context, \"Set\"), setTimeout = context.setTimeout, splice = arrayProto.splice, Uint8Array = context.Uint8Array, WeakMap = getNative(context, \"WeakMap\"), nativeCeil = Math.ceil, nativeCreate = getNative(Object, \"create\"), nativeFloor = Math.floor, nativeIsArray = getNative(Array, \"isArray\"), nativeIsFinite = context.isFinite, nativeKeys = getNative(Object, \"keys\"), nativeMax = Math.max, nativeMin = Math.min, nativeNow = getNative(Date, \"now\"), nativeParseInt = context.parseInt, nativeRandom = Math.random, NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY, POSITIVE_INFINITY = Number.POSITIVE_INFINITY, MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1, MAX_SAFE_INTEGER = 9007199254740991, metaMap = WeakMap && new WeakMap(), realNames = {};");
file.WriteLine("                lodash.support = {};");
file.WriteLine("                lodash.templateSettings = {");
file.WriteLine("                    escape: reEscape,");
file.WriteLine("                    evaluate: reEvaluate,");
file.WriteLine("                    interpolate: reInterpolate,");
file.WriteLine("                    variable: \"\",");
file.WriteLine("                    imports: {");
file.WriteLine("                        _: lodash");
file.WriteLine("                    }");
file.WriteLine("                };");
file.WriteLine("                var baseCreate = function() {");
file.WriteLine("                    function object() {}");
file.WriteLine("                    return function(prototype) {");
file.WriteLine("                        if (isObject(prototype)) {");
file.WriteLine("                            object.prototype = prototype;");
file.WriteLine("                            var result = new object();");
file.WriteLine("                            object.prototype = undefined;");
file.WriteLine("                        }");
file.WriteLine("                        return result || {};");
file.WriteLine("                    };");
file.WriteLine("                }(), baseEach = createBaseEach(baseForOwn), baseEachRight = createBaseEach(baseForOwnRight, !0), baseFor = createBaseFor(), baseForRight = createBaseFor(!0), baseSetData = !metaMap ? identity : function(func, data) {");
file.WriteLine("                    metaMap.set(func, data);");
file.WriteLine("                    return func;");
file.WriteLine("                }, getData = !metaMap ? noop : function(func) {");
file.WriteLine("                    return metaMap.get(func);");
file.WriteLine("                }, getLength = baseProperty(\"length\"), setData = function() {");
file.WriteLine("                    var count = 0, lastCalled = 0;");
file.WriteLine("                    return function(key, value) {");
file.WriteLine("                        var stamp = now(), remaining = HOT_SPAN - (stamp - lastCalled);");
file.WriteLine("                        lastCalled = stamp;");
file.WriteLine("                        if (remaining > 0) {");
file.WriteLine("                            if (++count >= HOT_COUNT) return key;");
file.WriteLine("                        } else count = 0;");
file.WriteLine("                        return baseSetData(key, value);");
file.WriteLine("                    };");
file.WriteLine("                }(), difference = restParam(function(array, values) {");
file.WriteLine("                    return isObjectLike(array) && isArrayLike(array) ? baseDifference(array, baseFlatten(values, !1, !0)) : [];");
file.WriteLine("                }), findIndex = createFindIndex(), findLastIndex = createFindIndex(!0), intersection = restParam(function(arrays) {");
file.WriteLine("                    for (var othLength = arrays.length, othIndex = othLength, caches = Array(length), indexOf = getIndexOf(), isCommon = indexOf == baseIndexOf, result = []; othIndex--; ) {");
file.WriteLine("                        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];");
file.WriteLine("                        caches[othIndex] = isCommon && value.length >= 120 ? createCache(othIndex && value) : null;");
file.WriteLine("                    }");
file.WriteLine("                    var array = arrays[0], index = -1, length = array ? array.length : 0, seen = caches[0];");
file.WriteLine("                    outer: for (;++index < length; ) {");
file.WriteLine("                        value = array[index];");
file.WriteLine("                        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {");
file.WriteLine("                            for (var othIndex = othLength; --othIndex; ) {");
file.WriteLine("                                var cache = caches[othIndex];");
file.WriteLine("                                if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) continue outer;");
file.WriteLine("                            }");
file.WriteLine("                            if (seen) seen.push(value);");
file.WriteLine("                            result.push(value);");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                }), pullAt = restParam(function(array, indexes) {");
file.WriteLine("                    indexes = baseFlatten(indexes);");
file.WriteLine("                    var result = baseAt(array, indexes);");
file.WriteLine("                    basePullAt(array, indexes.sort(baseCompareAscending));");
file.WriteLine("                    return result;");
file.WriteLine("                }), sortedIndex = createSortedIndex(), sortedLastIndex = createSortedIndex(!0), union = restParam(function(arrays) {");
file.WriteLine("                    return baseUniq(baseFlatten(arrays, !1, !0));");
file.WriteLine("                }), without = restParam(function(array, values) {");
file.WriteLine("                    return isArrayLike(array) ? baseDifference(array, values) : [];");
file.WriteLine("                }), zip = restParam(unzip), zipWith = restParam(function(arrays) {");
file.WriteLine("                    var length = arrays.length, iteratee = length > 2 ? arrays[length - 2] : undefined, thisArg = length > 1 ? arrays[length - 1] : undefined;");
file.WriteLine("                    if (length > 2 && \"function\" == typeof iteratee) length -= 2; else {");
file.WriteLine("                        iteratee = length > 1 && \"function\" == typeof thisArg ? (--length, thisArg) : undefined;");
file.WriteLine("                        thisArg = undefined;");
file.WriteLine("                    }");
file.WriteLine("                    arrays.length = length;");
file.WriteLine("                    return unzipWith(arrays, iteratee, thisArg);");
file.WriteLine("                }), wrapperConcat = restParam(function(values) {");
file.WriteLine("                    values = baseFlatten(values);");
file.WriteLine("                    return this.thru(function(array) {");
file.WriteLine("                        return arrayConcat(isArray(array) ? array : [ toObject(array) ], values);");
file.WriteLine("                    });");
file.WriteLine("                }), at = restParam(function(collection, props) {");
file.WriteLine("                    return baseAt(collection, baseFlatten(props));");
file.WriteLine("                }), countBy = createAggregator(function(result, value, key) {");
file.WriteLine("                    hasOwnProperty.call(result, key) ? ++result[key] : result[key] = 1;");
file.WriteLine("                }), find = createFind(baseEach), findLast = createFind(baseEachRight, !0), forEach = createForEach(arrayEach, baseEach), forEachRight = createForEach(arrayEachRight, baseEachRight), groupBy = createAggregator(function(result, value, key) {");
file.WriteLine("                    if (hasOwnProperty.call(result, key)) result[key].push(value); else result[key] = [ value ];");
file.WriteLine("                }), indexBy = createAggregator(function(result, value, key) {");
file.WriteLine("                    result[key] = value;");
file.WriteLine("                }), invoke = restParam(function(collection, path, args) {");
file.WriteLine("                    var index = -1, isFunc = \"function\" == typeof path, isProp = isKey(path), result = isArrayLike(collection) ? Array(collection.length) : [];");
file.WriteLine("                    baseEach(collection, function(value) {");
file.WriteLine("                        var func = isFunc ? path : isProp && null != value ? value[path] : undefined;");
file.WriteLine("                        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);");
file.WriteLine("                    });");
file.WriteLine("                    return result;");
file.WriteLine("                }), partition = createAggregator(function(result, value, key) {");
file.WriteLine("                    result[key ? 0 : 1].push(value);");
file.WriteLine("                }, function() {");
file.WriteLine("                    return [ [], [] ];");
file.WriteLine("                }), reduce = createReduce(arrayReduce, baseEach), reduceRight = createReduce(arrayReduceRight, baseEachRight), sortByAll = restParam(function(collection, iteratees) {");
file.WriteLine("                    if (null == collection) return [];");
file.WriteLine("                    var guard = iteratees[2];");
file.WriteLine("                    if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) iteratees.length = 1;");
file.WriteLine("                    return baseSortByOrder(collection, baseFlatten(iteratees), []);");
file.WriteLine("                }), now = nativeNow || function() {");
file.WriteLine("                    return new Date().getTime();");
file.WriteLine("                }, bind = restParam(function(func, thisArg, partials) {");
file.WriteLine("                    var bitmask = BIND_FLAG;");
file.WriteLine("                    if (partials.length) {");
file.WriteLine("                        var holders = replaceHolders(partials, bind.placeholder);");
file.WriteLine("                        bitmask |= PARTIAL_FLAG;");
file.WriteLine("                    }");
file.WriteLine("                    return createWrapper(func, bitmask, thisArg, partials, holders);");
file.WriteLine("                }), bindAll = restParam(function(object, methodNames) {");
file.WriteLine("                    methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);");
file.WriteLine("                    for (var index = -1, length = methodNames.length; ++index < length; ) {");
file.WriteLine("                        var key = methodNames[index];");
file.WriteLine("                        object[key] = createWrapper(object[key], BIND_FLAG, object);");
file.WriteLine("                    }");
file.WriteLine("                    return object;");
file.WriteLine("                }), bindKey = restParam(function(object, key, partials) {");
file.WriteLine("                    var bitmask = BIND_FLAG | BIND_KEY_FLAG;");
file.WriteLine("                    if (partials.length) {");
file.WriteLine("                        var holders = replaceHolders(partials, bindKey.placeholder);");
file.WriteLine("                        bitmask |= PARTIAL_FLAG;");
file.WriteLine("                    }");
file.WriteLine("                    return createWrapper(key, bitmask, object, partials, holders);");
file.WriteLine("                }), curry = createCurry(CURRY_FLAG), curryRight = createCurry(CURRY_RIGHT_FLAG), defer = restParam(function(func, args) {");
file.WriteLine("                    return baseDelay(func, 1, args);");
file.WriteLine("                }), delay = restParam(function(func, wait, args) {");
file.WriteLine("                    return baseDelay(func, wait, args);");
file.WriteLine("                }), flow = createFlow(), flowRight = createFlow(!0), modArgs = restParam(function(func, transforms) {");
file.WriteLine("                    transforms = baseFlatten(transforms);");
file.WriteLine("                    if (\"function\" != typeof func || !arrayEvery(transforms, baseIsFunction)) throw new TypeError(FUNC_ERROR_TEXT);");
file.WriteLine("                    var length = transforms.length;");
file.WriteLine("                    return restParam(function(args) {");
file.WriteLine("                        for (var index = nativeMin(args.length, length); index--; ) args[index] = transforms[index](args[index]);");
file.WriteLine("                        return func.apply(this, args);");
file.WriteLine("                    });");
file.WriteLine("                }), partial = createPartial(PARTIAL_FLAG), partialRight = createPartial(PARTIAL_RIGHT_FLAG), rearg = restParam(function(func, indexes) {");
file.WriteLine("                    return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));");
file.WriteLine("                }), isArray = nativeIsArray || function(value) {");
file.WriteLine("                    return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;");
file.WriteLine("                }, merge = createAssigner(baseMerge), assign = createAssigner(function(object, source, customizer) {");
file.WriteLine("                    return customizer ? assignWith(object, source, customizer) : baseAssign(object, source);");
file.WriteLine("                }), defaults = createDefaults(assign, assignDefaults), defaultsDeep = createDefaults(merge, mergeDefaults), findKey = createFindKey(baseForOwn), findLastKey = createFindKey(baseForOwnRight), forIn = createForIn(baseFor), forInRight = createForIn(baseForRight), forOwn = createForOwn(baseForOwn), forOwnRight = createForOwn(baseForOwnRight), keys = !nativeKeys ? shimKeys : function(object) {");
file.WriteLine("                    var Ctor = null == object ? undefined : object.constructor;");
file.WriteLine("                    if (\"function\" == typeof Ctor && Ctor.prototype === object || \"function\" != typeof object && isArrayLike(object)) return shimKeys(object); else return isObject(object) ? nativeKeys(object) : [];");
file.WriteLine("                }, mapKeys = createObjectMapper(!0), mapValues = createObjectMapper(), omit = restParam(function(object, props) {");
file.WriteLine("                    if (null == object) return {};");
file.WriteLine("                    if (\"function\" != typeof props[0]) {");
file.WriteLine("                        var props = arrayMap(baseFlatten(props), String);");
file.WriteLine("                        return pickByArray(object, baseDifference(keysIn(object), props));");
file.WriteLine("                    }");
file.WriteLine("                    var predicate = bindCallback(props[0], props[1], 3);");
file.WriteLine("                    return pickByCallback(object, function(value, key, object) {");
file.WriteLine("                        return !predicate(value, key, object);");
file.WriteLine("                    });");
file.WriteLine("                }), pick = restParam(function(object, props) {");
file.WriteLine("                    if (null == object) return {}; else return \"function\" == typeof props[0] ? pickByCallback(object, bindCallback(props[0], props[1], 3)) : pickByArray(object, baseFlatten(props));");
file.WriteLine("                }), camelCase = createCompounder(function(result, word, index) {");
file.WriteLine("                    word = word.toLowerCase();");
file.WriteLine("                    return result + (index ? word.charAt(0).toUpperCase() + word.slice(1) : word);");
file.WriteLine("                }), kebabCase = createCompounder(function(result, word, index) {");
file.WriteLine("                    return result + (index ? \"-\" : \"\") + word.toLowerCase();");
file.WriteLine("                }), padLeft = createPadDir(), padRight = createPadDir(!0), snakeCase = createCompounder(function(result, word, index) {");
file.WriteLine("                    return result + (index ? \"_\" : \"\") + word.toLowerCase();");
file.WriteLine("                }), startCase = createCompounder(function(result, word, index) {");
file.WriteLine("                    return result + (index ? \" \" : \"\") + (word.charAt(0).toUpperCase() + word.slice(1));");
file.WriteLine("                }), attempt = restParam(function(func, args) {");
file.WriteLine("                    try {");
file.WriteLine("                        return func.apply(undefined, args);");
file.WriteLine("                    } catch (e) {");
file.WriteLine("                        return isError(e) ? e : new Error(e);");
file.WriteLine("                    }");
file.WriteLine("                }), method = restParam(function(path, args) {");
file.WriteLine("                    return function(object) {");
file.WriteLine("                        return invokePath(object, path, args);");
file.WriteLine("                    };");
file.WriteLine("                }), methodOf = restParam(function(object, args) {");
file.WriteLine("                    return function(path) {");
file.WriteLine("                        return invokePath(object, path, args);");
file.WriteLine("                    };");
file.WriteLine("                }), ceil = createRound(\"ceil\"), floor = createRound(\"floor\"), max = createExtremum(gt, NEGATIVE_INFINITY), min = createExtremum(lt, POSITIVE_INFINITY), round = createRound(\"round\");");
file.WriteLine("                lodash.prototype = baseLodash.prototype;");
file.WriteLine("                LodashWrapper.prototype = baseCreate(baseLodash.prototype);");
file.WriteLine("                LodashWrapper.prototype.constructor = LodashWrapper;");
file.WriteLine("                LazyWrapper.prototype = baseCreate(baseLodash.prototype);");
file.WriteLine("                LazyWrapper.prototype.constructor = LazyWrapper;");
file.WriteLine("                MapCache.prototype[\"delete\"] = mapDelete;");
file.WriteLine("                MapCache.prototype.get = mapGet;");
file.WriteLine("                MapCache.prototype.has = mapHas;");
file.WriteLine("                MapCache.prototype.set = mapSet;");
file.WriteLine("                SetCache.prototype.push = cachePush;");
file.WriteLine("                memoize.Cache = MapCache;");
file.WriteLine("                lodash.after = after;");
file.WriteLine("                lodash.ary = ary;");
file.WriteLine("                lodash.assign = assign;");
file.WriteLine("                lodash.at = at;");
file.WriteLine("                lodash.before = before;");
file.WriteLine("                lodash.bind = bind;");
file.WriteLine("                lodash.bindAll = bindAll;");
file.WriteLine("                lodash.bindKey = bindKey;");
file.WriteLine("                lodash.callback = callback;");
file.WriteLine("                lodash.chain = chain;");
file.WriteLine("                lodash.chunk = chunk;");
file.WriteLine("                lodash.compact = compact;");
file.WriteLine("                lodash.constant = constant;");
file.WriteLine("                lodash.countBy = countBy;");
file.WriteLine("                lodash.create = create;");
file.WriteLine("                lodash.curry = curry;");
file.WriteLine("                lodash.curryRight = curryRight;");
file.WriteLine("                lodash.debounce = debounce;");
file.WriteLine("                lodash.defaults = defaults;");
file.WriteLine("                lodash.defaultsDeep = defaultsDeep;");
file.WriteLine("                lodash.defer = defer;");
file.WriteLine("                lodash.delay = delay;");
file.WriteLine("                lodash.difference = difference;");
file.WriteLine("                lodash.drop = drop;");
file.WriteLine("                lodash.dropRight = dropRight;");
file.WriteLine("                lodash.dropRightWhile = dropRightWhile;");
file.WriteLine("                lodash.dropWhile = dropWhile;");
file.WriteLine("                lodash.fill = fill;");
file.WriteLine("                lodash.filter = filter;");
file.WriteLine("                lodash.flatten = flatten;");
file.WriteLine("                lodash.flattenDeep = flattenDeep;");
file.WriteLine("                lodash.flow = flow;");
file.WriteLine("                lodash.flowRight = flowRight;");
file.WriteLine("                lodash.forEach = forEach;");
file.WriteLine("                lodash.forEachRight = forEachRight;");
file.WriteLine("                lodash.forIn = forIn;");
file.WriteLine("                lodash.forInRight = forInRight;");
file.WriteLine("                lodash.forOwn = forOwn;");
file.WriteLine("                lodash.forOwnRight = forOwnRight;");
file.WriteLine("                lodash.functions = functions;");
file.WriteLine("                lodash.groupBy = groupBy;");
file.WriteLine("                lodash.indexBy = indexBy;");
file.WriteLine("                lodash.initial = initial;");
file.WriteLine("                lodash.intersection = intersection;");
file.WriteLine("                lodash.invert = invert;");
file.WriteLine("                lodash.invoke = invoke;");
file.WriteLine("                lodash.keys = keys;");
file.WriteLine("                lodash.keysIn = keysIn;");
file.WriteLine("                lodash.map = map;");
file.WriteLine("                lodash.mapKeys = mapKeys;");
file.WriteLine("                lodash.mapValues = mapValues;");
file.WriteLine("                lodash.matches = matches;");
file.WriteLine("                lodash.matchesProperty = matchesProperty;");
file.WriteLine("                lodash.memoize = memoize;");
file.WriteLine("                lodash.merge = merge;");
file.WriteLine("                lodash.method = method;");
file.WriteLine("                lodash.methodOf = methodOf;");
file.WriteLine("                lodash.mixin = mixin;");
file.WriteLine("                lodash.modArgs = modArgs;");
file.WriteLine("                lodash.negate = negate;");
file.WriteLine("                lodash.omit = omit;");
file.WriteLine("                lodash.once = once;");
file.WriteLine("                lodash.pairs = pairs;");
file.WriteLine("                lodash.partial = partial;");
file.WriteLine("                lodash.partialRight = partialRight;");
file.WriteLine("                lodash.partition = partition;");
file.WriteLine("                lodash.pick = pick;");
file.WriteLine("                lodash.pluck = pluck;");
file.WriteLine("                lodash.property = property;");
file.WriteLine("                lodash.propertyOf = propertyOf;");
file.WriteLine("                lodash.pull = pull;");
file.WriteLine("                lodash.pullAt = pullAt;");
file.WriteLine("                lodash.range = range;");
file.WriteLine("                lodash.rearg = rearg;");
file.WriteLine("                lodash.reject = reject;");
file.WriteLine("                lodash.remove = remove;");
file.WriteLine("                lodash.rest = rest;");
file.WriteLine("                lodash.restParam = restParam;");
file.WriteLine("                lodash.set = set;");
file.WriteLine("                lodash.shuffle = shuffle;");
file.WriteLine("                lodash.slice = slice;");
file.WriteLine("                lodash.sortBy = sortBy;");
file.WriteLine("                lodash.sortByAll = sortByAll;");
file.WriteLine("                lodash.sortByOrder = sortByOrder;");
file.WriteLine("                lodash.spread = spread;");
file.WriteLine("                lodash.take = take;");
file.WriteLine("                lodash.takeRight = takeRight;");
file.WriteLine("                lodash.takeRightWhile = takeRightWhile;");
file.WriteLine("                lodash.takeWhile = takeWhile;");
file.WriteLine("                lodash.tap = tap;");
file.WriteLine("                lodash.throttle = throttle;");
file.WriteLine("                lodash.thru = thru;");
file.WriteLine("                lodash.times = times;");
file.WriteLine("                lodash.toArray = toArray;");
file.WriteLine("                lodash.toPlainObject = toPlainObject;");
file.WriteLine("                lodash.transform = transform;");
file.WriteLine("                lodash.union = union;");
file.WriteLine("                lodash.uniq = uniq;");
file.WriteLine("                lodash.unzip = unzip;");
file.WriteLine("                lodash.unzipWith = unzipWith;");
file.WriteLine("                lodash.values = values;");
file.WriteLine("                lodash.valuesIn = valuesIn;");
file.WriteLine("                lodash.where = where;");
file.WriteLine("                lodash.without = without;");
file.WriteLine("                lodash.wrap = wrap;");
file.WriteLine("                lodash.xor = xor;");
file.WriteLine("                lodash.zip = zip;");
file.WriteLine("                lodash.zipObject = zipObject;");
file.WriteLine("                lodash.zipWith = zipWith;");
file.WriteLine("                lodash.backflow = flowRight;");
file.WriteLine("                lodash.collect = map;");
file.WriteLine("                lodash.compose = flowRight;");
file.WriteLine("                lodash.each = forEach;");
file.WriteLine("                lodash.eachRight = forEachRight;");
file.WriteLine("                lodash.extend = assign;");
file.WriteLine("                lodash.iteratee = callback;");
file.WriteLine("                lodash.methods = functions;");
file.WriteLine("                lodash.object = zipObject;");
file.WriteLine("                lodash.select = filter;");
file.WriteLine("                lodash.tail = rest;");
file.WriteLine("                lodash.unique = uniq;");
file.WriteLine("                mixin(lodash, lodash);");
file.WriteLine("                lodash.add = add;");
file.WriteLine("                lodash.attempt = attempt;");
file.WriteLine("                lodash.camelCase = camelCase;");
file.WriteLine("                lodash.capitalize = capitalize;");
file.WriteLine("                lodash.ceil = ceil;");
file.WriteLine("                lodash.clone = clone;");
file.WriteLine("                lodash.cloneDeep = cloneDeep;");
file.WriteLine("                lodash.deburr = deburr;");
file.WriteLine("                lodash.endsWith = endsWith;");
file.WriteLine("                lodash.escape = escape;");
file.WriteLine("                lodash.escapeRegExp = escapeRegExp;");
file.WriteLine("                lodash.every = every;");
file.WriteLine("                lodash.find = find;");
file.WriteLine("                lodash.findIndex = findIndex;");
file.WriteLine("                lodash.findKey = findKey;");
file.WriteLine("                lodash.findLast = findLast;");
file.WriteLine("                lodash.findLastIndex = findLastIndex;");
file.WriteLine("                lodash.findLastKey = findLastKey;");
file.WriteLine("                lodash.findWhere = findWhere;");
file.WriteLine("                lodash.first = first;");
file.WriteLine("                lodash.floor = floor;");
file.WriteLine("                lodash.get = get;");
file.WriteLine("                lodash.gt = gt;");
file.WriteLine("                lodash.gte = gte;");
file.WriteLine("                lodash.has = has;");
file.WriteLine("                lodash.identity = identity;");
file.WriteLine("                lodash.includes = includes;");
file.WriteLine("                lodash.indexOf = indexOf;");
file.WriteLine("                lodash.inRange = inRange;");
file.WriteLine("                lodash.isArguments = isArguments;");
file.WriteLine("                lodash.isArray = isArray;");
file.WriteLine("                lodash.isBoolean = isBoolean;");
file.WriteLine("                lodash.isDate = isDate;");
file.WriteLine("                lodash.isElement = isElement;");
file.WriteLine("                lodash.isEmpty = isEmpty;");
file.WriteLine("                lodash.isEqual = isEqual;");
file.WriteLine("                lodash.isError = isError;");
file.WriteLine("                lodash.isFinite = isFinite;");
file.WriteLine("                lodash.isFunction = isFunction;");
file.WriteLine("                lodash.isMatch = isMatch;");
file.WriteLine("                lodash.isNaN = isNaN;");
file.WriteLine("                lodash.isNative = isNative;");
file.WriteLine("                lodash.isNull = isNull;");
file.WriteLine("                lodash.isNumber = isNumber;");
file.WriteLine("                lodash.isObject = isObject;");
file.WriteLine("                lodash.isPlainObject = isPlainObject;");
file.WriteLine("                lodash.isRegExp = isRegExp;");
file.WriteLine("                lodash.isString = isString;");
file.WriteLine("                lodash.isTypedArray = isTypedArray;");
file.WriteLine("                lodash.isUndefined = isUndefined;");
file.WriteLine("                lodash.kebabCase = kebabCase;");
file.WriteLine("                lodash.last = last;");
file.WriteLine("                lodash.lastIndexOf = lastIndexOf;");
file.WriteLine("                lodash.lt = lt;");
file.WriteLine("                lodash.lte = lte;");
file.WriteLine("                lodash.max = max;");
file.WriteLine("                lodash.min = min;");
file.WriteLine("                lodash.noConflict = noConflict;");
file.WriteLine("                lodash.noop = noop;");
file.WriteLine("                lodash.now = now;");
file.WriteLine("                lodash.pad = pad;");
file.WriteLine("                lodash.padLeft = padLeft;");
file.WriteLine("                lodash.padRight = padRight;");
file.WriteLine("                lodash.parseInt = parseInt;");
file.WriteLine("                lodash.random = random;");
file.WriteLine("                lodash.reduce = reduce;");
file.WriteLine("                lodash.reduceRight = reduceRight;");
file.WriteLine("                lodash.repeat = repeat;");
file.WriteLine("                lodash.result = result;");
file.WriteLine("                lodash.round = round;");
file.WriteLine("                lodash.runInContext = runInContext;");
file.WriteLine("                lodash.size = size;");
file.WriteLine("                lodash.snakeCase = snakeCase;");
file.WriteLine("                lodash.some = some;");
file.WriteLine("                lodash.sortedIndex = sortedIndex;");
file.WriteLine("                lodash.sortedLastIndex = sortedLastIndex;");
file.WriteLine("                lodash.startCase = startCase;");
file.WriteLine("                lodash.startsWith = startsWith;");
file.WriteLine("                lodash.sum = sum;");
file.WriteLine("                lodash.template = template;");
file.WriteLine("                lodash.trim = trim;");
file.WriteLine("                lodash.trimLeft = trimLeft;");
file.WriteLine("                lodash.trimRight = trimRight;");
file.WriteLine("                lodash.trunc = trunc;");
file.WriteLine("                lodash.unescape = unescape;");
file.WriteLine("                lodash.uniqueId = uniqueId;");
file.WriteLine("                lodash.words = words;");
file.WriteLine("                lodash.all = every;");
file.WriteLine("                lodash.any = some;");
file.WriteLine("                lodash.contains = includes;");
file.WriteLine("                lodash.eq = isEqual;");
file.WriteLine("                lodash.detect = find;");
file.WriteLine("                lodash.foldl = reduce;");
file.WriteLine("                lodash.foldr = reduceRight;");
file.WriteLine("                lodash.head = first;");
file.WriteLine("                lodash.include = includes;");
file.WriteLine("                lodash.inject = reduce;");
file.WriteLine("                mixin(lodash, function() {");
file.WriteLine("                    var source = {};");
file.WriteLine("                    baseForOwn(lodash, function(func, methodName) {");
file.WriteLine("                        if (!lodash.prototype[methodName]) source[methodName] = func;");
file.WriteLine("                    });");
file.WriteLine("                    return source;");
file.WriteLine("                }(), !1);");
file.WriteLine("                lodash.sample = sample;");
file.WriteLine("                lodash.prototype.sample = function(n) {");
file.WriteLine("                    if (!this.__chain__ && null == n) return sample(this.value()); else return this.thru(function(value) {");
file.WriteLine("                        return sample(value, n);");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                lodash.VERSION = VERSION;");
file.WriteLine("                arrayEach([ \"bind\", \"bindKey\", \"curry\", \"curryRight\", \"partial\", \"partialRight\" ], function(methodName) {");
file.WriteLine("                    lodash[methodName].placeholder = lodash;");
file.WriteLine("                });");
file.WriteLine("                arrayEach([ \"drop\", \"take\" ], function(methodName, index) {");
file.WriteLine("                    LazyWrapper.prototype[methodName] = function(n) {");
file.WriteLine("                        var filtered = this.__filtered__;");
file.WriteLine("                        if (filtered && !index) return new LazyWrapper(this);");
file.WriteLine("                        n = null == n ? 1 : nativeMax(nativeFloor(n) || 0, 0);");
file.WriteLine("                        var result = this.clone();");
file.WriteLine("                        if (filtered) result.__takeCount__ = nativeMin(result.__takeCount__, n); else result.__views__.push({");
file.WriteLine("                            size: n,");
file.WriteLine("                            type: methodName + (result.__dir__ < 0 ? \"Right\" : \"\")");
file.WriteLine("                        });");
file.WriteLine("                        return result;");
file.WriteLine("                    };");
file.WriteLine("                    LazyWrapper.prototype[methodName + \"Right\"] = function(n) {");
file.WriteLine("                        return this.reverse()[methodName](n).reverse();");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("                arrayEach([ \"filter\", \"map\", \"takeWhile\" ], function(methodName, index) {");
file.WriteLine("                    var type = index + 1, isFilter = type != LAZY_MAP_FLAG;");
file.WriteLine("                    LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {");
file.WriteLine("                        var result = this.clone();");
file.WriteLine("                        result.__iteratees__.push({");
file.WriteLine("                            iteratee: getCallback(iteratee, thisArg, 1),");
file.WriteLine("                            type: type");
file.WriteLine("                        });");
file.WriteLine("                        result.__filtered__ = result.__filtered__ || isFilter;");
file.WriteLine("                        return result;");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("                arrayEach([ \"first\", \"last\" ], function(methodName, index) {");
file.WriteLine("                    var takeName = \"take\" + (index ? \"Right\" : \"\");");
file.WriteLine("                    LazyWrapper.prototype[methodName] = function() {");
file.WriteLine("                        return this[takeName](1).value()[0];");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("                arrayEach([ \"initial\", \"rest\" ], function(methodName, index) {");
file.WriteLine("                    var dropName = \"drop\" + (index ? \"\" : \"Right\");");
file.WriteLine("                    LazyWrapper.prototype[methodName] = function() {");
file.WriteLine("                        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("                arrayEach([ \"pluck\", \"where\" ], function(methodName, index) {");
file.WriteLine("                    var operationName = index ? \"filter\" : \"map\", createCallback = index ? baseMatches : property;");
file.WriteLine("                    LazyWrapper.prototype[methodName] = function(value) {");
file.WriteLine("                        return this[operationName](createCallback(value));");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("                LazyWrapper.prototype.compact = function() {");
file.WriteLine("                    return this.filter(identity);");
file.WriteLine("                };");
file.WriteLine("                LazyWrapper.prototype.reject = function(predicate, thisArg) {");
file.WriteLine("                    predicate = getCallback(predicate, thisArg, 1);");
file.WriteLine("                    return this.filter(function(value) {");
file.WriteLine("                        return !predicate(value);");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                LazyWrapper.prototype.slice = function(start, end) {");
file.WriteLine("                    start = null == start ? 0 : +start || 0;");
file.WriteLine("                    var result = this;");
file.WriteLine("                    if (result.__filtered__ && (start > 0 || end < 0)) return new LazyWrapper(result);");
file.WriteLine("                    if (start < 0) result = result.takeRight(-start); else if (start) result = result.drop(start);");
file.WriteLine("                    if (end !== undefined) {");
file.WriteLine("                        end = +end || 0;");
file.WriteLine("                        result = end < 0 ? result.dropRight(-end) : result.take(end - start);");
file.WriteLine("                    }");
file.WriteLine("                    return result;");
file.WriteLine("                };");
file.WriteLine("                LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {");
file.WriteLine("                    return this.reverse().takeWhile(predicate, thisArg).reverse();");
file.WriteLine("                };");
file.WriteLine("                LazyWrapper.prototype.toArray = function() {");
file.WriteLine("                    return this.take(POSITIVE_INFINITY);");
file.WriteLine("                };");
file.WriteLine("                baseForOwn(LazyWrapper.prototype, function(func, methodName) {");
file.WriteLine("                    var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName), retUnwrapped = /^(?:first|last)$/.test(methodName), lodashFunc = lodash[retUnwrapped ? \"take\" + (\"last\" == methodName ? \"Right\" : \"\") : methodName];");
file.WriteLine("                    if (lodashFunc) lodash.prototype[methodName] = function() {");
file.WriteLine("                        var args = retUnwrapped ? [ 1 ] : arguments, chainAll = this.__chain__, value = this.__wrapped__, isHybrid = !!this.__actions__.length, isLazy = value instanceof LazyWrapper, iteratee = args[0], useLazy = isLazy || isArray(value);");
file.WriteLine("                        if (useLazy && checkIteratee && \"function\" == typeof iteratee && 1 != iteratee.length) isLazy = useLazy = !1;");
file.WriteLine("                        var interceptor = function(value) {");
file.WriteLine("                            return retUnwrapped && chainAll ? lodashFunc(value, 1)[0] : lodashFunc.apply(undefined, arrayPush([ value ], args));");
file.WriteLine("                        }, action = {");
file.WriteLine("                            func: thru,");
file.WriteLine("                            args: [ interceptor ],");
file.WriteLine("                            thisArg: undefined");
file.WriteLine("                        }, onlyLazy = isLazy && !isHybrid;");
file.WriteLine("                        if (retUnwrapped && !chainAll) {");
file.WriteLine("                            if (onlyLazy) {");
file.WriteLine("                                value = value.clone();");
file.WriteLine("                                value.__actions__.push(action);");
file.WriteLine("                                return func.call(value);");
file.WriteLine("                            }");
file.WriteLine("                            return lodashFunc.call(undefined, this.value())[0];");
file.WriteLine("                        }");
file.WriteLine("                        if (!retUnwrapped && useLazy) {");
file.WriteLine("                            value = onlyLazy ? value : new LazyWrapper(this);");
file.WriteLine("                            var result = func.apply(value, args);");
file.WriteLine("                            result.__actions__.push(action);");
file.WriteLine("                            return new LodashWrapper(result, chainAll);");
file.WriteLine("                        }");
file.WriteLine("                        return this.thru(interceptor);");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("                arrayEach([ \"join\", \"pop\", \"push\", \"replace\", \"shift\", \"sort\", \"splice\", \"split\", \"unshift\" ], function(methodName) {");
file.WriteLine("                    var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? \"tap\" : \"thru\", retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);");
file.WriteLine("                    lodash.prototype[methodName] = function() {");
file.WriteLine("                        var args = arguments;");
file.WriteLine("                        if (retUnwrapped && !this.__chain__) return func.apply(this.value(), args); else return this[chainName](function(value) {");
file.WriteLine("                            return func.apply(value, args);");
file.WriteLine("                        });");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("                baseForOwn(LazyWrapper.prototype, function(func, methodName) {");
file.WriteLine("                    var lodashFunc = lodash[methodName];");
file.WriteLine("                    if (lodashFunc) {");
file.WriteLine("                        var key = lodashFunc.name;");
file.WriteLine("                        (realNames[key] || (realNames[key] = [])).push({");
file.WriteLine("                            name: methodName,");
file.WriteLine("                            func: lodashFunc");
file.WriteLine("                        });");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("                realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [ {");
file.WriteLine("                    name: \"wrapper\",");
file.WriteLine("                    func: undefined");
file.WriteLine("                } ];");
file.WriteLine("                LazyWrapper.prototype.clone = lazyClone;");
file.WriteLine("                LazyWrapper.prototype.reverse = lazyReverse;");
file.WriteLine("                LazyWrapper.prototype.value = lazyValue;");
file.WriteLine("                lodash.prototype.chain = wrapperChain;");
file.WriteLine("                lodash.prototype.commit = wrapperCommit;");
file.WriteLine("                lodash.prototype.concat = wrapperConcat;");
file.WriteLine("                lodash.prototype.plant = wrapperPlant;");
file.WriteLine("                lodash.prototype.reverse = wrapperReverse;");
file.WriteLine("                lodash.prototype.toString = wrapperToString;");
file.WriteLine("                lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;");
file.WriteLine("                lodash.prototype.collect = lodash.prototype.map;");
file.WriteLine("                lodash.prototype.head = lodash.prototype.first;");
file.WriteLine("                lodash.prototype.select = lodash.prototype.filter;");
file.WriteLine("                lodash.prototype.tail = lodash.prototype.rest;");
file.WriteLine("                return lodash;");
file.WriteLine("            }");
file.WriteLine("            var undefined, VERSION = \"3.10.1\", BIND_FLAG = 1, BIND_KEY_FLAG = 2, CURRY_BOUND_FLAG = 4, CURRY_FLAG = 8, CURRY_RIGHT_FLAG = 16, PARTIAL_FLAG = 32, PARTIAL_RIGHT_FLAG = 64, ARY_FLAG = 128, REARG_FLAG = 256, DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = \"...\", HOT_COUNT = 150, HOT_SPAN = 16, LARGE_ARRAY_SIZE = 200, LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, FUNC_ERROR_TEXT = \"Expected a function\", PLACEHOLDER = \"__lodash_placeholder__\", argsTag = \"[object Arguments]\", arrayTag = \"[object Array]\", boolTag = \"[object Boolean]\", dateTag = \"[object Date]\", errorTag = \"[object Error]\", funcTag = \"[object Function]\", numberTag = \"[object Number]\", objectTag = \"[object Object]\", regexpTag = \"[object RegExp]\", stringTag = \"[object String]\", arrayBufferTag = \"[object ArrayBuffer]\", float32Tag = \"[object Float32Array]\", float64Tag = \"[object Float64Array]\", int8Tag = \"[object Int8Array]\", int16Tag = \"[object Int16Array]\", int32Tag = \"[object Int32Array]\", uint8Tag = \"[object Uint8Array]\", uint8ClampedTag = \"[object Uint8ClampedArray]\", uint16Tag = \"[object Uint16Array]\", uint32Tag = \"[object Uint32Array]\", reEmptyStringLeading = /\\b__p \\+= '';/g, reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g, reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g, reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g, reUnescapedHtml = /[&<>\"'`]/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source), reEscape = /<%-([\\s\\S]+?)%>/g, reEvaluate = /<%([\\s\\S]+?)%>/g, reInterpolate = /<%=([\\s\\S]+?)%>/g, reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/, reIsPlainProp = /^\\w*$/, rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g, reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g, reHasRegExpChars = RegExp(reRegExpChars.source), reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g, reEscapeChar = /\\\\(\\\\)?/g, reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g, reFlags = /\\w*$/, reHasHexPrefix = /^0[xX]/, reIsHostCtor = /^\\[object .+?Constructor\\]$/, reIsUint = /^\\d+$/, reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g, reNoMatch = /($^)/, reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g, reWords = function() {");
file.WriteLine("                var upper = \"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]\", lower = \"[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+\";");
file.WriteLine("                return RegExp(upper + \"+(?=\" + upper + lower + \")|\" + upper + \"?\" + lower + \"|\" + upper + \"+|[0-9]+\", \"g\");");
file.WriteLine("            }(), contextProps = [ \"Array\", \"ArrayBuffer\", \"Date\", \"Error\", \"Float32Array\", \"Float64Array\", \"Function\", \"Int8Array\", \"Int16Array\", \"Int32Array\", \"Math\", \"Number\", \"Object\", \"RegExp\", \"Set\", \"String\", \"_\", \"clearTimeout\", \"isFinite\", \"parseFloat\", \"parseInt\", \"setTimeout\", \"TypeError\", \"Uint8Array\", \"Uint8ClampedArray\", \"Uint16Array\", \"Uint32Array\", \"WeakMap\" ], templateCounter = -1, typedArrayTags = {};");
file.WriteLine("            typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = !0;");
file.WriteLine("            typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[\"[object Map]\"] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[\"[object Set]\"] = typedArrayTags[stringTag] = typedArrayTags[\"[object WeakMap]\"] = !1;");
file.WriteLine("            var cloneableTags = {};");
file.WriteLine("            cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[stringTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = !0;");
file.WriteLine("            cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[\"[object Map]\"] = cloneableTags[\"[object Set]\"] = cloneableTags[\"[object WeakMap]\"] = !1;");
file.WriteLine("            var deburredLetters = {");
file.WriteLine("                \"À\": \"A\",");
file.WriteLine("                \"Á\": \"A\",");
file.WriteLine("                \"Â\": \"A\",");
file.WriteLine("                \"Ã\": \"A\",");
file.WriteLine("                \"Ä\": \"A\",");
file.WriteLine("                \"Å\": \"A\",");
file.WriteLine("                \"à\": \"a\",");
file.WriteLine("                \"á\": \"a\",");
file.WriteLine("                \"â\": \"a\",");
file.WriteLine("                \"ã\": \"a\",");
file.WriteLine("                \"ä\": \"a\",");
file.WriteLine("                \"å\": \"a\",");
file.WriteLine("                \"Ç\": \"C\",");
file.WriteLine("                \"ç\": \"c\",");
file.WriteLine("                \"Ð\": \"D\",");
file.WriteLine("                \"ð\": \"d\",");
file.WriteLine("                \"È\": \"E\",");
file.WriteLine("                \"É\": \"E\",");
file.WriteLine("                \"Ê\": \"E\",");
file.WriteLine("                \"Ë\": \"E\",");
file.WriteLine("                \"è\": \"e\",");
file.WriteLine("                \"é\": \"e\",");
file.WriteLine("                \"ê\": \"e\",");
file.WriteLine("                \"ë\": \"e\",");
file.WriteLine("                \"Ì\": \"I\",");
file.WriteLine("                \"Í\": \"I\",");
file.WriteLine("                \"Î\": \"I\",");
file.WriteLine("                \"Ï\": \"I\",");
file.WriteLine("                \"ì\": \"i\",");
file.WriteLine("                \"í\": \"i\",");
file.WriteLine("                \"î\": \"i\",");
file.WriteLine("                \"ï\": \"i\",");
file.WriteLine("                \"Ñ\": \"N\",");
file.WriteLine("                \"ñ\": \"n\",");
file.WriteLine("                \"Ò\": \"O\",");
file.WriteLine("                \"Ó\": \"O\",");
file.WriteLine("                \"Ô\": \"O\",");
file.WriteLine("                \"Õ\": \"O\",");
file.WriteLine("                \"Ö\": \"O\",");
file.WriteLine("                \"Ø\": \"O\",");
file.WriteLine("                \"ò\": \"o\",");
file.WriteLine("                \"ó\": \"o\",");
file.WriteLine("                \"ô\": \"o\",");
file.WriteLine("                \"õ\": \"o\",");
file.WriteLine("                \"ö\": \"o\",");
file.WriteLine("                \"ø\": \"o\",");
file.WriteLine("                \"Ù\": \"U\",");
file.WriteLine("                \"Ú\": \"U\",");
file.WriteLine("                \"Û\": \"U\",");
file.WriteLine("                \"Ü\": \"U\",");
file.WriteLine("                \"ù\": \"u\",");
file.WriteLine("                \"ú\": \"u\",");
file.WriteLine("                \"û\": \"u\",");
file.WriteLine("                \"ü\": \"u\",");
file.WriteLine("                \"Ý\": \"Y\",");
file.WriteLine("                \"ý\": \"y\",");
file.WriteLine("                \"ÿ\": \"y\",");
file.WriteLine("                \"Æ\": \"Ae\",");
file.WriteLine("                \"æ\": \"ae\",");
file.WriteLine("                \"Þ\": \"Th\",");
file.WriteLine("                \"þ\": \"th\",");
file.WriteLine("                \"ß\": \"ss\"");
file.WriteLine("            }, htmlEscapes = {");
file.WriteLine("                \"&\": \"&amp;\",");
file.WriteLine("                \"<\": \"&lt;\",");
file.WriteLine("                \">\": \"&gt;\",");
file.WriteLine("                '\"': \"&quot;\",");
file.WriteLine("                \"'\": \"&#39;\",");
file.WriteLine("                \"`\": \"&#96;\"");
file.WriteLine("            }, htmlUnescapes = {");
file.WriteLine("                \"&amp;\": \"&\",");
file.WriteLine("                \"&lt;\": \"<\",");
file.WriteLine("                \"&gt;\": \">\",");
file.WriteLine("                \"&quot;\": '\"',");
file.WriteLine("                \"&#39;\": \"'\",");
file.WriteLine("                \"&#96;\": \"`\"");
file.WriteLine("            }, objectTypes = {");
file.WriteLine("                \"function\": !0,");
file.WriteLine("                object: !0");
file.WriteLine("            }, regexpEscapes = {");
file.WriteLine("                \"0\": \"x30\",");
file.WriteLine("                \"1\": \"x31\",");
file.WriteLine("                \"2\": \"x32\",");
file.WriteLine("                \"3\": \"x33\",");
file.WriteLine("                \"4\": \"x34\",");
file.WriteLine("                \"5\": \"x35\",");
file.WriteLine("                \"6\": \"x36\",");
file.WriteLine("                \"7\": \"x37\",");
file.WriteLine("                \"8\": \"x38\",");
file.WriteLine("                \"9\": \"x39\",");
file.WriteLine("                A: \"x41\",");
file.WriteLine("                B: \"x42\",");
file.WriteLine("                C: \"x43\",");
file.WriteLine("                D: \"x44\",");
file.WriteLine("                E: \"x45\",");
file.WriteLine("                F: \"x46\",");
file.WriteLine("                a: \"x61\",");
file.WriteLine("                b: \"x62\",");
file.WriteLine("                c: \"x63\",");
file.WriteLine("                d: \"x64\",");
file.WriteLine("                e: \"x65\",");
file.WriteLine("                f: \"x66\",");
file.WriteLine("                n: \"x6e\",");
file.WriteLine("                r: \"x72\",");
file.WriteLine("                t: \"x74\",");
file.WriteLine("                u: \"x75\",");
file.WriteLine("                v: \"x76\",");
file.WriteLine("                x: \"x78\"");
file.WriteLine("            }, stringEscapes = {");
file.WriteLine("                \"\\\\\": \"\\\\\",");
file.WriteLine("                \"'\": \"'\",");
file.WriteLine("                \"\\n\": \"n\",");
file.WriteLine("                \"\\r\": \"r\",");
file.WriteLine("                \"\\u2028\": \"u2028\",");
file.WriteLine("                \"\\u2029\": \"u2029\"");
file.WriteLine("            }, freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports, freeModule = objectTypes[typeof module] && module && !module.nodeType && module, freeGlobal = freeExports && freeModule && \"object\" == typeof global && global && global.Object && global, freeSelf = objectTypes[typeof self] && self && self.Object && self, freeWindow = objectTypes[typeof window] && window && window.Object && window, moduleExports = freeModule && freeModule.exports === freeExports && freeExports, root = freeGlobal || freeWindow !== (this && this.window) && freeWindow || freeSelf || this, _ = runInContext();");
file.WriteLine("            if (!0) {");
file.WriteLine("                root._ = _;");
file.WriteLine("                (__WEBPACK_AMD_DEFINE_RESULT__ = function() {");
file.WriteLine("                    return _;");
file.WriteLine("                }.call(exports, __webpack_require__, exports, module)) !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__);");
file.WriteLine("            } else if (freeExports && freeModule) if (moduleExports) (freeModule.exports = _)._ = _; else freeExports._ = _; else root._ = _;");
file.WriteLine("        }).call(this);");
file.WriteLine("    }).call(exports, __webpack_require__(130)(module), __webpack_require__(48));");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseGet(object, path, pathKey) {");
file.WriteLine("        if (null != object) {");
file.WriteLine("            if (pathKey !== undefined && pathKey in toObject(object)) path = [ pathKey ];");
file.WriteLine("            for (var index = 0, length = path.length; null != object && index < length; ) object = object[path[index++]];");
file.WriteLine("            return index && index == length ? object : undefined;");
file.WriteLine("        }");
file.WriteLine("    }");
file.WriteLine("    var toObject = __webpack_require__(67);");
file.WriteLine("    module.exports = baseGet;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {");
file.WriteLine("        if (value === other) return !0;");
file.WriteLine("        if (null == value || null == other || !isObject(value) && !isObjectLike(other)) return value !== value && other !== other; else return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);");
file.WriteLine("    }");
file.WriteLine("    var baseIsEqualDeep = __webpack_require__(434), isObject = __webpack_require__(42), isObjectLike = __webpack_require__(79);");
file.WriteLine("    module.exports = baseIsEqual;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function baseProperty(key) {");
file.WriteLine("        return function(object) {");
file.WriteLine("            return null == object ? undefined : object[key];");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    module.exports = baseProperty;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function isKey(value, object) {");
file.WriteLine("        var type = typeof value;");
file.WriteLine("        if (\"string\" == type && reIsPlainProp.test(value) || \"number\" == type) return !0;");
file.WriteLine("        if (isArray(value)) return !1; else return !reIsDeepProp.test(value) || null != object && value in toObject(object);");
file.WriteLine("    }");
file.WriteLine("    var isArray = __webpack_require__(68), toObject = __webpack_require__(67), reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/, reIsPlainProp = /^\\w*$/;");
file.WriteLine("    module.exports = isKey;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function isStrictComparable(value) {");
file.WriteLine("        return value === value && !isObject(value);");
file.WriteLine("    }");
file.WriteLine("    var isObject = __webpack_require__(42);");
file.WriteLine("    module.exports = isStrictComparable;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function toPath(value) {");
file.WriteLine("        if (isArray(value)) return value;");
file.WriteLine("        var result = [];");
file.WriteLine("        baseToString(value).replace(rePropName, function(match, number, quote, string) {");
file.WriteLine("            result.push(quote ? string.replace(reEscapeChar, \"$1\") : number || match);");
file.WriteLine("        });");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    var baseToString = __webpack_require__(440), isArray = __webpack_require__(68), rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g, reEscapeChar = /\\\\(\\\\)?/g;");
file.WriteLine("    module.exports = toPath;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function isArguments(value) {");
file.WriteLine("        return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, \"callee\") && !propertyIsEnumerable.call(value, \"callee\");");
file.WriteLine("    }");
file.WriteLine("    var isArrayLike = __webpack_require__(169), isObjectLike = __webpack_require__(79), objectProto = Object.prototype, hasOwnProperty = objectProto.hasOwnProperty, propertyIsEnumerable = objectProto.propertyIsEnumerable;");
file.WriteLine("    module.exports = isArguments;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    var getNative = __webpack_require__(128), isArrayLike = __webpack_require__(169), isObject = __webpack_require__(42), shimKeys = __webpack_require__(453), nativeKeys = getNative(Object, \"keys\"), keys = !nativeKeys ? shimKeys : function(object) {");
file.WriteLine("        var Ctor = null == object ? undefined : object.constructor;");
file.WriteLine("        if (\"function\" == typeof Ctor && Ctor.prototype === object || \"function\" != typeof object && isArrayLike(object)) return shimKeys(object); else return isObject(object) ? nativeKeys(object) : [];");
file.WriteLine("    };");
file.WriteLine("    module.exports = keys;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function identity(value) {");
file.WriteLine("        return value;");
file.WriteLine("    }");
file.WriteLine("    module.exports = identity;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {");
file.WriteLine("        return typeof obj;");
file.WriteLine("    } : function(obj) {");
file.WriteLine("        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;");
file.WriteLine("    }, _config = __webpack_require__(6), _config2 = _interopRequireDefault(_config), _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _logs = __webpack_require__(16), _system = __webpack_require__(1), hashPath = \"HKLM\\\\SOFTWARE\\\\drpsu\\\\hash\", methods = {");
file.WriteLine("        get: _system.httpget,");
file.WriteLine("        post: _system.httppost,");
file.WriteLine("        put: _system.httpput,");
file.WriteLine("        img: _system.sendImg");
file.WriteLine("    }, Metric = function() {");
file.WriteLine("        function Metric() {");
file.WriteLine("            _classCallCheck(this, Metric);");
file.WriteLine("            this.hash = (0, _system.RegRead)(hashPath);");
file.WriteLine("        }");
file.WriteLine("        Metric.prototype.encode = function(value) {");
file.WriteLine("            if (\"object\" === (void 0 === value ? \"undefined\" : _typeof(value))) value = JSON.stringify(value);");
file.WriteLine("            return encodeURIComponent(value);");
file.WriteLine("        };");
file.WriteLine("        Metric.prototype.formatUri = function(endpoint, query) {");
file.WriteLine("            var _this = this, url = _config2[\"default\"].metrics.serverURL + endpoint;");
file.WriteLine("            if (query) url += \"?\" + Object.entries(query).map(function(_ref) {");
file.WriteLine("                var key = _ref[0], value = _ref[1];");
file.WriteLine("                return key + \"=\" + _this.encode(value);");
file.WriteLine("            }).join(\"&\");");
file.WriteLine("            return url;");
file.WriteLine("        };");
file.WriteLine("        Metric.prototype.request = function(method, endpoint, query, body) {");
file.WriteLine("            var promise = methods[method](this.formatUri(endpoint, query), body);");
file.WriteLine("            promise.then(function() {");
file.WriteLine("                (0, _logs.log)(\"[Metric] Sent \" + method.toUpperCase() + \" '\" + endpoint + \"' request\", {");
file.WriteLine("                    query: query,");
file.WriteLine("                    body: body");
file.WriteLine("                });");
file.WriteLine("            }, function(err) {");
file.WriteLine("                (0, _logs.log)(\"[Metric] Error sending \" + method.toUpperCase() + \" '\" + endpoint + \"' request\", {");
file.WriteLine("                    query: query,");
file.WriteLine("                    body: body");
file.WriteLine("                }, err);");
file.WriteLine("            });");
file.WriteLine("            return promise;");
file.WriteLine("        };");
file.WriteLine("        Metric.prototype.get = function(endpoint, query) {");
file.WriteLine("            return this.request(\"get\", endpoint, query);");
file.WriteLine("        };");
file.WriteLine("        Metric.prototype.post = function(endpoint, data, query) {");
file.WriteLine("            return this.request(\"post\", endpoint, query, data);");
file.WriteLine("        };");
file.WriteLine("        Metric.prototype.put = function(endpoint, data, query) {");
file.WriteLine("            return this.request(\"put\", endpoint, query, data);");
file.WriteLine("        };");
file.WriteLine("        Metric.prototype.img = function(endpoint, query) {");
file.WriteLine("            return this.request(\"img\", endpoint, query);");
file.WriteLine("        };");
file.WriteLine("        Metric.prototype.send = function(metric, data) {");
file.WriteLine("            var _this2 = this, id = _statistics2[\"default\"].computerId;");
file.WriteLine("            if (id && this.hash) {");
file.WriteLine("                var json = {");
file.WriteLine("                    id: id,");
file.WriteLine("                    hash: this.hash,");
file.WriteLine("                    data: data");
file.WriteLine("                };");
file.WriteLine("                return this.post(\"/collect/\" + metric, json)[\"catch\"](function() {");
file.WriteLine("                    return _this2.img(\"/collect\", {");
file.WriteLine("                        metric: metric,");
file.WriteLine("                        data: json");
file.WriteLine("                    });");
file.WriteLine("                });");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        return Metric;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Metric;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _system = __webpack_require__(1), localeHex = (0, _system.RegRead)(\"HKCU\\\\Control Panel\\\\International\\\\Locale\"), locale = parseInt(\"0x\" + localeHex, 16), lang = \"en\";");
file.WriteLine("    switch (locale) {");
file.WriteLine("      case 9:");
file.WriteLine("      case 3081:");
file.WriteLine("      case 10249:");
file.WriteLine("      case 4105:");
file.WriteLine("      case 9225:");
file.WriteLine("      case 16393:");
file.WriteLine("      case 6153:");
file.WriteLine("      case 8201:");
file.WriteLine("      case 17417:");
file.WriteLine("      case 5129:");
file.WriteLine("      case 13321:");
file.WriteLine("      case 18441:");
file.WriteLine("      case 7177:");
file.WriteLine("      case 11273:");
file.WriteLine("      case 2057:");
file.WriteLine("      case 1033:");
file.WriteLine("      case 12297:");
file.WriteLine("      case 15369:");
file.WriteLine("      case 14345:");
file.WriteLine("        lang = \"en\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 12:");
file.WriteLine("      case 2060:");
file.WriteLine("      case 11276:");
file.WriteLine("      case 3084:");
file.WriteLine("      case 9228:");
file.WriteLine("      case 12300:");
file.WriteLine("      case 15372:");
file.WriteLine("      case 1036:");
file.WriteLine("      case 5132:");
file.WriteLine("      case 13324:");
file.WriteLine("      case 6156:");
file.WriteLine("      case 14348:");
file.WriteLine("      case 58380:");
file.WriteLine("      case 8204:");
file.WriteLine("      case 10252:");
file.WriteLine("      case 4108:");
file.WriteLine("      case 7180:");
file.WriteLine("        lang = \"fr\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 10:");
file.WriteLine("      case 15370:");
file.WriteLine("      case 5130:");
file.WriteLine("      case 7178:");
file.WriteLine("      case 12298:");
file.WriteLine("      case 17418:");
file.WriteLine("      case 4106:");
file.WriteLine("      case 18442:");
file.WriteLine("      case 3082:");
file.WriteLine("      case 13322:");
file.WriteLine("      case 19466:");
file.WriteLine("      case 2058:");
file.WriteLine("      case 10250:");
file.WriteLine("      case 20490:");
file.WriteLine("      case 1034:");
file.WriteLine("      case 14346:");
file.WriteLine("      case 8202:");
file.WriteLine("      case 6154:");
file.WriteLine("      case 11274:");
file.WriteLine("      case 16394:");
file.WriteLine("      case 22538:");
file.WriteLine("      case 21514:");
file.WriteLine("        lang = \"es\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 9226:");
file.WriteLine("        lang = \"co\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 7:");
file.WriteLine("      case 3079:");
file.WriteLine("      case 1031:");
file.WriteLine("      case 5127:");
file.WriteLine("      case 4103:");
file.WriteLine("      case 2055:");
file.WriteLine("        lang = \"de\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1079:");
file.WriteLine("        lang = \"ka\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 44:");
file.WriteLine("      case 29740:");
file.WriteLine("      case 2092:");
file.WriteLine("      case 30764:");
file.WriteLine("      case 1068:");
file.WriteLine("        lang = \"az\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 16:");
file.WriteLine("      case 1040:");
file.WriteLine("      case 2064:");
file.WriteLine("        lang = \"it\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 25:");
file.WriteLine("      case 1049:");
file.WriteLine("      case 2073:");
file.WriteLine("        lang = \"ru\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 34:");
file.WriteLine("      case 1058:");
file.WriteLine("        lang = \"uk\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 31:");
file.WriteLine("      case 1055:");
file.WriteLine("        lang = \"tr\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 39:");
file.WriteLine("      case 1063:");
file.WriteLine("        lang = \"lt\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 19:");
file.WriteLine("      case 1043:");
file.WriteLine("      case 2067:");
file.WriteLine("        lang = \"nl\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 6170:");
file.WriteLine("      case 2074:");
file.WriteLine("        lang = \"srl\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 3098:");
file.WriteLine("      case 7194:");
file.WriteLine("        lang = \"sr\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1:");
file.WriteLine("      case 5121:");
file.WriteLine("      case 15361:");
file.WriteLine("      case 3073:");
file.WriteLine("      case 2049:");
file.WriteLine("      case 11265:");
file.WriteLine("      case 13313:");
file.WriteLine("      case 12289:");
file.WriteLine("      case 4097:");
file.WriteLine("      case 6145:");
file.WriteLine("      case 8193:");
file.WriteLine("      case 16385:");
file.WriteLine("      case 1025:");
file.WriteLine("      case 10241:");
file.WriteLine("      case 7169:");
file.WriteLine("      case 14337:");
file.WriteLine("      case 9217:");
file.WriteLine("        lang = \"ar\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1045:");
file.WriteLine("        lang = \"pl\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1067:");
file.WriteLine("        lang = \"hy\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1029:");
file.WriteLine("        lang = \"cs\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1030:");
file.WriteLine("        lang = \"da\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1059:");
file.WriteLine("        lang = \"be\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1046:");
file.WriteLine("      case 2070:");
file.WriteLine("        lang = \"pt\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 2052:");
file.WriteLine("      case 4100:");
file.WriteLine("      case 1028:");
file.WriteLine("      case 3076:");
file.WriteLine("      case 5124:");
file.WriteLine("        lang = \"zh\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1065:");
file.WriteLine("        lang = \"fa\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1032:");
file.WriteLine("        lang = \"el\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1037:");
file.WriteLine("        lang = \"he\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1038:");
file.WriteLine("        lang = \"hu\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1057:");
file.WriteLine("        lang = \"id\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1170:");
file.WriteLine("        lang = \"ku\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1060:");
file.WriteLine("        lang = \"sl\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1051:");
file.WriteLine("        lang = \"sk\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1048:");
file.WriteLine("      case 2072:");
file.WriteLine("        lang = \"ro\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1092:");
file.WriteLine("        lang = \"tt\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1050:");
file.WriteLine("      case 4122:");
file.WriteLine("        lang = \"hr\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      case 1061:");
file.WriteLine("      case 1066:");
file.WriteLine("        lang = \"vi\";");
file.WriteLine("        break;");
file.WriteLine("");
file.WriteLine("      default:");
file.WriteLine("        lang = \"en\";");
file.WriteLine("    }");
file.WriteLine("    exports[\"default\"] = window.lang = lang;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _lodash = __webpack_require__(206), _getDiagnostics2 = __webpack_require__(69), _getDiagnostics3 = _interopRequireDefault(_getDiagnostics2), _system = __webpack_require__(1), _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _utils = __webpack_require__(2), _Antivirus = __webpack_require__(178), _Antivirus2 = _interopRequireDefault(_Antivirus), _softByType = __webpack_require__(494), _softByType2 = _interopRequireDefault(_softByType), normalize = function(str) {");
file.WriteLine("        return str.toLowerCase().trim();");
file.WriteLine("    }, urls = {");
file.WriteLine("        tool: \"https://aamuntyan.typeform.com/to/LxJb27\",");
file.WriteLine("        favorite: \"https://aamuntyan.typeform.com/to/pFRZpy\",");
file.WriteLine("        drivers: \"https://aamuntyan.typeform.com/to/T17zIn\"");
file.WriteLine("    }, CustDev = function() {");
file.WriteLine("        function CustDev() {");
file.WriteLine("            _classCallCheck(this, CustDev);");
file.WriteLine("            var _getDiagnostics = (0, _getDiagnostics3[\"default\"])(\"soft\"), Software = _getDiagnostics.Software;");
file.WriteLine("            this.soft = Software[\"Installed Software\"].map(function(item) {");
file.WriteLine("                return {");
file.WriteLine("                    name: normalize(item.Program),");
file.WriteLine("                    key: normalize(item[\"Registry Path\"])");
file.WriteLine("                };");
file.WriteLine("            });");
file.WriteLine("        }");
file.WriteLine("        CustDev.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var label;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        label = this.getLabel();");
file.WriteLine("                        if (!label) {");
file.WriteLine("                            _context.next = 5;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 4;");
file.WriteLine("                        return this.showNotification(label);");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"targeting \" + label,");
file.WriteLine("                            params: {");
file.WriteLine("                                targetingParams: this.params");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        CustDev.prototype.getLabel = function() {");
file.WriteLine("            var _checkSoft = this.checkSoft(), browsers = _checkSoft.browsers, tools = _checkSoft.tools, cleaners = _checkSoft.cleaners, daysSinceLastUpdate = this.getDaysSinceLastUpdate(), driverpackRuns = this.getDriverpackRuns(), antivirus = this.checkAntivirus();");
file.WriteLine("            this.params = {");
file.WriteLine("                browsers: String(browsers),");
file.WriteLine("                tools: String(tools),");
file.WriteLine("                cleaners: String(cleaners),");
file.WriteLine("                daysSinceLastUpdate: daysSinceLastUpdate,");
file.WriteLine("                driverpackRuns: String(driverpackRuns),");
file.WriteLine("                antivirus: String(antivirus)");
file.WriteLine("            };");
file.WriteLine("            if ((browsers > 1 || tools > 0) && daysSinceLastUpdate > 60) return \"tool\"; else if (cleaners > 0 && antivirus) return \"favorite\"; else if (driverpackRuns > 1) return \"drivers\";");
file.WriteLine("        };");
file.WriteLine("        CustDev.prototype.checkSoft = function() {");
file.WriteLine("            var res = {};");
file.WriteLine("            for (var key in _softByType2[\"default\"]) {");
file.WriteLine("                for (var names = _softByType2[\"default\"][key].map(normalize), counter = 0, _iterator = this.soft, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ;) {");
file.WriteLine("                    var _ref3;");
file.WriteLine("                    if (\"break\" === function() {");
file.WriteLine("                        if (_isArray) {");
file.WriteLine("                            if (_i >= _iterator.length) return \"break\";");
file.WriteLine("                            _ref3 = _iterator[_i++];");
file.WriteLine("                        } else {");
file.WriteLine("                            _i = _iterator.next();");
file.WriteLine("                            if (_i.done) return \"break\";");
file.WriteLine("                            _ref3 = _i.value;");
file.WriteLine("                        }");
file.WriteLine("                        var _ref2 = _ref3, name = _ref2.name, key = _ref2.key;");
file.WriteLine("                        if (names.some(function(expected) {");
file.WriteLine("                            return (0, _lodash.includes)(\"\\\\\" + name + \"\\\\\", expected) || (0, _lodash.includes)(key, expected);");
file.WriteLine("                        })) counter++;");
file.WriteLine("                    }()) break;");
file.WriteLine("                }");
file.WriteLine("                res[key] = counter;");
file.WriteLine("            }");
file.WriteLine("            return res;");
file.WriteLine("        };");
file.WriteLine("        CustDev.prototype.checkAntivirus = function() {");
file.WriteLine("            var controller = new _Antivirus2[\"default\"]();");
file.WriteLine("            if (controller.isSecurityCenterServiceRunning()) return controller.scanAntiviruses().some(function(antivirus) {");
file.WriteLine("                return !controller.isNotWorking(antivirus);");
file.WriteLine("            }); else return !1;");
file.WriteLine("        };");
file.WriteLine("        CustDev.prototype.getLastUpdate = function() {");
file.WriteLine("            var session = new ActiveXObject(\"Microsoft.Update.Session\"), searcher = session.CreateUpdateSearcher(), history = searcher.QueryHistory(1, 1);");
file.WriteLine("            if (history.count) {");
file.WriteLine("                var e = new Enumerator(history);");
file.WriteLine("                return new Date(e.item().Date);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        CustDev.prototype.getDaysSinceLastUpdate = function() {");
file.WriteLine("            var lastUpdate = this.getLastUpdate(), date = lastUpdate || new Date(0), days = (Date.now() - date.valueOf()) / 864e5;");
file.WriteLine("            return Math.round(days);");
file.WriteLine("        };");
file.WriteLine("        CustDev.prototype.getDriverpackRuns = function() {");
file.WriteLine("            var res = [];");
file.WriteLine("            try {");
file.WriteLine("                var folder = _system.fso.GetFolder(_system.AppData + \"\\\\DRPSu\\\\Logs\");");
file.WriteLine("                (0, _system.iterate)(folder.Files, function(file) {");
file.WriteLine("                    res.push(new Date(file.DateCreated));");
file.WriteLine("                });");
file.WriteLine("            } catch (err) {}");
file.WriteLine("            return (0, _lodash.uniq)(res.map(function(date) {");
file.WriteLine("                return date.toISOString().slice(0, 10);");
file.WriteLine("            })).length;");
file.WriteLine("        };");
file.WriteLine("        CustDev.prototype.showNotification = function() {");
file.WriteLine("            function showNotification(_x) {");
file.WriteLine("                return _ref4.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(label) {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"custdev-invite\", {");
file.WriteLine("                            label: label");
file.WriteLine("                        });");
file.WriteLine("                        _context2.next = 3;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        status = _context2.sent;");
file.WriteLine("                        if (\"ok\" === status) (0, _utils.goToUrl)(urls[label]);");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return showNotification;");
file.WriteLine("        }();");
file.WriteLine("        return CustDev;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = CustDev;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _uniq = __webpack_require__(429), _uniq2 = _interopRequireDefault(_uniq), _config = __webpack_require__(6), _config2 = _interopRequireDefault(_config), _DeloreanTransport = __webpack_require__(58), _DeloreanTransport2 = _interopRequireDefault(_DeloreanTransport), _os = __webpack_require__(15), _system = __webpack_require__(1), _wget = __webpack_require__(22), _wget2 = _interopRequireDefault(_wget), _getDiagnostics2 = __webpack_require__(69), _getDiagnostics3 = _interopRequireDefault(_getDiagnostics2), _getDrivers = __webpack_require__(248), _getHardware = __webpack_require__(249), _getModel = __webpack_require__(250), _utils = __webpack_require__(2), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _config$monitoring$Dr = _config2[\"default\"].monitoring.DriverPack, apiEndpoint = _config$monitoring$Dr.apiEndpoint, protectThreshold = _config$monitoring$Dr.protectThreshold, protectThresholdUseful = _config$monitoring$Dr.protectThresholdUseful, sampling = _config$monitoring$Dr.sampling, timeout = _config$monitoring$Dr.timeout, tries = _config$monitoring$Dr.tries, checkProgram = function(program) {");
file.WriteLine("        if (/microsoft/i.test(program.Program)) return !1;");
file.WriteLine("        if (/microsoft/i.test(program.Publisher)) return !1;");
file.WriteLine("        if (!program.Uninstaller) return !1;");
file.WriteLine("        if (/dpinst/i.test(program.Uninstaller)) return !1; else return !0;");
file.WriteLine("    }, driverPackFile = _utils.AppPath + \"\\\\temp\\\\driverpack.json\", DriverPack = function() {");
file.WriteLine("        function DriverPack() {");
file.WriteLine("            _classCallCheck(this, DriverPack);");
file.WriteLine("        }");
file.WriteLine("        DriverPack.prototype.run = function() {");
file.WriteLine("            function run(_x) {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(newPrograms) {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (!newPrograms) {");
file.WriteLine("                            _context.next = 6;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 3;");
file.WriteLine("                        return this.checkNewPrograms(newPrograms);");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        _context.t0 = _context.sent;");
file.WriteLine("                        _context.next = 14;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        _context.next = 8;");
file.WriteLine("                        return this.checkDrivers();");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                        _context.t1 = _context.sent;");
file.WriteLine("                        if (_context.t1) {");
file.WriteLine("                            _context.next = 13;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 12;");
file.WriteLine("                        return this.checkProtect();");
file.WriteLine("");
file.WriteLine("                      case 12:");
file.WriteLine("                        _context.t1 = _context.sent;");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        _context.t0 = _context.t1;");
file.WriteLine("");
file.WriteLine("                      case 14:");
file.WriteLine("                        return _context.abrupt(\"return\", _context.t0);");
file.WriteLine("");
file.WriteLine("                      case 15:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        DriverPack.prototype.checkDrivers = function() {");
file.WriteLine("            function checkDrivers() {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                var installed, query, _ref3, data, count;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (this.verifyCheckCondition(\"drivers\")) {");
file.WriteLine("                            _context2.next = 2;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context2.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                        installed = {};");
file.WriteLine("                        (0, _getDrivers.getDrivers)().forEach(function(item) {");
file.WriteLine("                            installed[item.deviceId] = item;");
file.WriteLine("                        });");
file.WriteLine("                        query = {");
file.WriteLine("                            devices: (0, _getHardware.getHardware)(),");
file.WriteLine("                            model: (0, _getModel.getModel)(),");
file.WriteLine("                            windows: {");
file.WriteLine("                                ver: _os.OSVersionS,");
file.WriteLine("                                arch: _os.is64 ? \"64\" : \"86\"");
file.WriteLine("                            },");
file.WriteLine("                            markers: [ \"hooks\" ],");
file.WriteLine("                            limit: 5");
file.WriteLine("                        };");
file.WriteLine("                        _context2.next = 7;");
file.WriteLine("                        return this.query(\"select\", query);");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        _ref3 = _context2.sent;");
file.WriteLine("                        data = _ref3.body.data;");
file.WriteLine("                        count = 0;");
file.WriteLine("                        data.forEach(function(_ref4) {");
file.WriteLine("                            var deviceId = _ref4.deviceId, drivers = _ref4.drivers, current = (installed[deviceId] || {}).date || \"\";");
file.WriteLine("                            drivers.forEach(function(_ref5) {");
file.WriteLine("                                var date = _ref5.date;");
file.WriteLine("                                if (date && date > current) count++;");
file.WriteLine("                            });");
file.WriteLine("                        });");
file.WriteLine("                        if (!(count > 0)) {");
file.WriteLine("                            _context2.next = 15;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context2.next = 14;");
file.WriteLine("                        return this.showNotification(\"drivers\", {");
file.WriteLine("                            count: count");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 14:");
file.WriteLine("                        return _context2.abrupt(\"return\", _context2.sent);");
file.WriteLine("");
file.WriteLine("                      case 15:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkDrivers;");
file.WriteLine("        }();");
file.WriteLine("        DriverPack.prototype.getNotificationLang = function() {");
file.WriteLine("            var countryCode = window.geoip && window.geoip.geoip_country_code || \"\", lang = window.lang;");
file.WriteLine("            if (\"ru\" === lang || \"ru\" === countryCode.toLowerCase()) return \"ru\"; else if (\"es\" === lang || \"es\" === countryCode.toLowerCase() || \"mx\" === countryCode.toLowerCase() || \"pe\" === countryCode.toLowerCase() || \"ar\" === countryCode.toLowerCase() || \"sv\" === countryCode.toLowerCase()) return \"es\"; else if (\"fr\" === lang || \"fr\" === countryCode.toLowerCase()) return \"fr\"; else return \"en\";");
file.WriteLine("        };");
file.WriteLine("        DriverPack.prototype.checkNewPrograms = function() {");
file.WriteLine("            function checkNewPrograms(_x2) {");
file.WriteLine("                return _ref6.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(newPrograms) {");
file.WriteLine("                var query, _ref7, data, driverpackData, _iterator, _isArray, _i, _ref9, _ref10, Program, Version, imageurl, uninstallrate, usefulness, source, lang, notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        query = (0, _uniq2[\"default\"])(newPrograms.filter(checkProgram), \"Uninstaller\");");
file.WriteLine("                        _context3.next = 3;");
file.WriteLine("                        return this.query(\"cleaner\", query);");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        _ref7 = _context3.sent;");
file.WriteLine("                        data = _ref7.body.data;");
file.WriteLine("                        driverpackData = void 0;");
file.WriteLine("                        _iterator = data, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        if (!_isArray) {");
file.WriteLine("                            _context3.next = 13;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        if (!(_i >= _iterator.length)) {");
file.WriteLine("                            _context3.next = 10;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context3.abrupt(\"break\", 31);");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        _ref9 = _iterator[_i++];");
file.WriteLine("                        _context3.next = 17;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        _i = _iterator.next();");
file.WriteLine("                        if (!_i.done) {");
file.WriteLine("                            _context3.next = 16;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context3.abrupt(\"break\", 31);");
file.WriteLine("");
file.WriteLine("                      case 16:");
file.WriteLine("                        _ref9 = _i.value;");
file.WriteLine("");
file.WriteLine("                      case 17:");
file.WriteLine("                        _ref10 = _ref9;");
file.WriteLine("                        Program = _ref10.Program, Version = _ref10.Version, imageurl = _ref10.imageurl, ");
file.WriteLine("                        uninstallrate = _ref10.uninstallrate;");
file.WriteLine("                        if (!uninstallrate) {");
file.WriteLine("                            _context3.next = 29;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        usefulness = uninstallrate < protectThresholdUseful ? \"useful\" : uninstallrate >= protectThreshold ? \"harmful\" : \"neutral\";");
file.WriteLine("                        source = \"notification new program \" + usefulness;");
file.WriteLine("                        lang = this.getNotificationLang();");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"driverpack-new-program-\" + usefulness, {");
file.WriteLine("                            lang: lang,");
file.WriteLine("                            name: Program.length > 11 ? Program.substr(0, 11) + \"…\" : Program,");
file.WriteLine("                            uninstallRate: uninstallrate,");
file.WriteLine("                            icon: imageurl");
file.WriteLine("                        });");
file.WriteLine("                        _context3.next = 26;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 26:");
file.WriteLine("                        status = _context3.sent;");
file.WriteLine("                        if ([ \"ok\", \"unsubscribe\" ].includes(status)) driverpackData = \"ok\" === status ? {");
file.WriteLine("                            source: source,");
file.WriteLine("                            action: \"uninstall_single_program\",");
file.WriteLine("                            program: {");
file.WriteLine("                                Program: Program,");
file.WriteLine("                                Version: Version");
file.WriteLine("                            }");
file.WriteLine("                        } : {");
file.WriteLine("                            source: source,");
file.WriteLine("                            action: \"open_protect\"");
file.WriteLine("                        };");
file.WriteLine("                        this.performDriverPackAction(driverpackData);");
file.WriteLine("");
file.WriteLine("                      case 29:");
file.WriteLine("                        _context3.next = 7;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 31:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkNewPrograms;");
file.WriteLine("        }();");
file.WriteLine("        DriverPack.prototype.checkProtect = function() {");
file.WriteLine("            function checkProtect() {");
file.WriteLine("                return _ref11.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {");
file.WriteLine("                var _getDiagnostics, Software, query, _ref12, data, count;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context4) {");
file.WriteLine("                    for (;;) switch (_context4.prev = _context4.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (this.verifyCheckCondition(\"protect\")) {");
file.WriteLine("                            _context4.next = 2;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context4.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                        _getDiagnostics = (0, _getDiagnostics3[\"default\"])(\"soft\"), Software = _getDiagnostics.Software;");
file.WriteLine("                        query = (0, _uniq2[\"default\"])(Software[\"Installed Software\"].filter(checkProgram), \"Uninstaller\");");
file.WriteLine("                        _context4.next = 6;");
file.WriteLine("                        return this.query(\"cleaner\", query);");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        _ref12 = _context4.sent;");
file.WriteLine("                        data = _ref12.body.data;");
file.WriteLine("                        count = 0;");
file.WriteLine("                        data.forEach(function(_ref13) {");
file.WriteLine("                            var uninstallrate = _ref13.uninstallrate;");
file.WriteLine("                            if (uninstallrate && uninstallrate > protectThreshold) count++;");
file.WriteLine("                        });");
file.WriteLine("                        if (!(count > 0)) {");
file.WriteLine("                            _context4.next = 14;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context4.next = 13;");
file.WriteLine("                        return this.showNotification(\"protect\", {");
file.WriteLine("                            count: count");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        return _context4.abrupt(\"return\", _context4.sent);");
file.WriteLine("");
file.WriteLine("                      case 14:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context4.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee4, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkProtect;");
file.WriteLine("        }();");
file.WriteLine("        DriverPack.prototype.verifyCheckCondition = function(type) {");
file.WriteLine("            var notification = new _Notification2[\"default\"](\"driverpack-\" + type), checked = notification.get(\"checked\");");
file.WriteLine("            if (!checked) {");
file.WriteLine("                if (Math.random() < sampling) return;");
file.WriteLine("            } else if (Date.now() - checked < timeout) return;");
file.WriteLine("            notification.set(\"checked\", Date.now()).save();");
file.WriteLine("            return !0;");
file.WriteLine("        };");
file.WriteLine("        DriverPack.prototype.query = function(endpoint, data) {");
file.WriteLine("            var uri = apiEndpoint + \"/\" + endpoint;");
file.WriteLine("            return new _DeloreanTransport2[\"default\"](uri, undefined, tries).send(data);");
file.WriteLine("        };");
file.WriteLine("        DriverPack.prototype.performDriverPackAction = function(data) {");
file.WriteLine("            if (data) {");
file.WriteLine("                try {");
file.WriteLine("                    var file = _system.fso.OpenTextFile(driverPackFile, 2, !0);");
file.WriteLine("                    file.write(JSON.stringify(data));");
file.WriteLine("                    file.Close();");
file.WriteLine("                } catch (err) {}");
file.WriteLine("                return this.launchDriverPack();");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        DriverPack.prototype.launchDriverPack = function() {");
file.WriteLine("            function launchDriverPack(_x3) {");
file.WriteLine("                return _ref14.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref14 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(type) {");
file.WriteLine("                var events, filename, link, dirPath;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context5) {");
file.WriteLine("                    for (;;) switch (_context5.prev = _context5.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        events = {");
file.WriteLine("                            beforeDownloading: function() {},");
file.WriteLine("                            afterDownloading: function() {}");
file.WriteLine("                        };");
file.WriteLine("                        filename = void 0, link = void 0;");
file.WriteLine("                        if (!type) {");
file.WriteLine("                            filename = \"DriverPack-17-Online.exe\";");
file.WriteLine("                            link = \"http://download.drp.su/\" + filename;");
file.WriteLine("                        } else {");
file.WriteLine("                            filename = \"DriverPack-Online-\" + type + \".exe\";");
file.WriteLine("                            link = \"http://download0.drp.su/\" + filename;");
file.WriteLine("                        }");
file.WriteLine("                        dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                        _context5.next = 6;");
file.WriteLine("                        return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                            link: link");
file.WriteLine("                        } ]);");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        (0, _utils.startCommand)(dirPath + \"\\\\\" + filename);");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context5.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee5, this);");
file.WriteLine("            }));");
file.WriteLine("            return launchDriverPack;");
file.WriteLine("        }();");
file.WriteLine("        DriverPack.prototype.showNotification = function() {");
file.WriteLine("            function showNotification(_x4, _x5) {");
file.WriteLine("                return _ref15.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(type, args) {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context6) {");
file.WriteLine("                    for (;;) switch (_context6.prev = _context6.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"driverpack-\" + type, args);");
file.WriteLine("                        _context6.next = 3;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        status = _context6.sent;");
file.WriteLine("                        if (\"ok\" !== status) {");
file.WriteLine("                            _context6.next = 8;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context6.next = 7;");
file.WriteLine("                        return this.launchDriverPack(type);");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        return _context6.abrupt(\"return\", !0);");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context6.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee6, this);");
file.WriteLine("            }));");
file.WriteLine("            return showNotification;");
file.WriteLine("        }();");
file.WriteLine("        return DriverPack;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = DriverPack;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _config = __webpack_require__(6), _config2 = _interopRequireDefault(_config), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _utils = __webpack_require__(2), _system = __webpack_require__(1), _os = __webpack_require__(15), AppExecutable = _config2[\"default\"].application.AppExecutable, App = _utils.AppPath + \"\\\\\" + AppExecutable, AppCommand = '\"' + App + '\" --file_association true --fullfilepath \"%1\"', ExtensionSoft = {");
file.WriteLine("        \"WinRAR (Russian)\": {");
file.WriteLine("            extensions: [ \".001\", \".7z\", \".arj\", \".bz2\", \".bzip2\", \".cab\", \".cpio\", \".deb\", \".dmg\", \".fat\", \".gz\", \".gzip\", \".hfs\", \".iso\", \".lha\", \".lzh\", \".lzma\", \".ntfs\", \".rar\", \".squashfs\", \".swm\", \".tar\", \".taz\", \".tbz\", \".tbz2\", \".tgz\", \".tpz\", \".txz\", \".vhd\", \".xar\", \".xz\", \".wim\", \".z\", \".zip\" ],");
file.WriteLine("            url: \"http://download.drp.su/soft/WinRARx86Rus.exe\",");
file.WriteLine("            keys: \"/S\",");
file.WriteLine("            installedSoftLocation: _utils.ProgramFiles + \"\\\\WinRAR\\\\WinRAR.exe\",");
file.WriteLine("            category: \"Archiver\"");
file.WriteLine("        },");
file.WriteLine("        PotPlayer: {");
file.WriteLine("            extensions: [ \".3g2\", \".3gp2\", \".3gp\", \".3gpp\", \".amr\", \".amv\", \".asf\", \".avi\", \".dat\", \".divx\", \".dmskm\", \".dpg\", \".dvr-ms\", \".evo\", \".ifo\", \".f4v\", \".flv\", \".k3g\", \".lmp4\", \".m1v\", \".m2t\", \".m2ts\", \".m2v\", \".m4p\", \".m4v\", \".mkv\", \".mov\", \".mp2v\", \".mp4\", \".mpe\", \".mpeg\", \".mpg\", \".mpv2\", \".mqv\", \".mts\", \".mxf\", \".nsr\", \".nsv\", \".ogm\", \".ogv\", \".qt\", \".rm\", \".ram\", \".rmvb\", \".rpm.skm\", \".swf\", \".ts\", \".tp\", \".tpr\", \".trp\", \".vob\", \".webm\", \".wm\", \".wmp\", \".wmv\", \".ass\", \".idx\", \".smi\", \".srt\", \".ssa\", \".sub\", \".asx\", \".dpl\", \".mpl\", \".mpls\", \".wvx\", \".dts\", \".dtshd\", \"eac3\", \".m1a\", \".m2a\", \".mka\", \".mpa\", \".ra\" ],");
file.WriteLine("            url: \"http://download.drp.su/soft/PotPlayer.exe\",");
file.WriteLine("            keys: \"/S /Video-1 /Audio-0 /Sub-1 /Lists-0 /Shortcut-1010110 /AutoPlayVideo-1 /AutoPlayAudio-0 /ImpIni\",");
file.WriteLine("            installedSoftLocation: _utils.ProgramFiles + \"\\\\Daum\\\\PotPlayer\\\\PotPlayerMini.exe\",");
file.WriteLine("            category: \"Player\"");
file.WriteLine("        },");
file.WriteLine("        \"Foxit PDF Reader\": {");
file.WriteLine("            extensions: [ \".fdf\", \".pdf\", \".xfdf\", \".xdp\" ],");
file.WriteLine("            url: \"http://download.drp.su/soft/FoxitReader.exe\",");
file.WriteLine("            keys: \"-ai1MUD -gm1 -fm0\",");
file.WriteLine("            installedSoftLocation: _utils.ProgramFiles + \"\\\\Foxit Software\\\\Foxit Reader\\\\FoxitReader.exe\",");
file.WriteLine("            category: \"Viewer\"");
file.WriteLine("        },");
file.WriteLine("        uTorrent: {");
file.WriteLine("            extensions: [ \".download\", \".torrent\", \".!ut\" ],");
file.WriteLine("            url: \"http://download.drp.su/soft/uTorrent.exe\",");
file.WriteLine("            keys: \"/S\",");
file.WriteLine("            installedSoftLocation: _utils.ProgramFiles + \"\\\\uTorrent\\\\uTorrent.exe\",");
file.WriteLine("            category: \"Internet\"");
file.WriteLine("        }");
file.WriteLine("    }, FileAssociationsManager = function() {");
file.WriteLine("        function FileAssociationsManager() {");
file.WriteLine("            _classCallCheck(this, FileAssociationsManager);");
file.WriteLine("            this.HKCU = _utils.UserHK;");
file.WriteLine("        }");
file.WriteLine("        FileAssociationsManager.prototype.run = function() {");
file.WriteLine("            var _this = this;");
file.WriteLine("            if (_os.OSVersion < 10) {");
file.WriteLine("                this.defineNotifierAssociation();");
file.WriteLine("                for (var soft in ExtensionSoft) {");
file.WriteLine("                    ExtensionSoft[soft].extensions.forEach(function(extension) {");
file.WriteLine("                        if (!_this.checkExtensionHasAssociations(extension)) _this.setFileAssociation(extension);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        FileAssociationsManager.prototype.checkExtensionHasAssociations = function(extension) {");
file.WriteLine("            var result = !1;");
file.WriteLine("            try {");
file.WriteLine("                result = !!_system.WshShell.RegRead(\"HKLM\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            if (!result) try {");
file.WriteLine("                result = !!_system.WshShell.RegRead(this.HKCU + \"\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            for (var regKeys = [ \"HKLM\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\OpenWithProgIDs\\\\\", \"HKLM\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\OpenWithList\\\\\", \"HKLM\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\ShellEx\\\\\", this.HKCU + \"\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\OpenWithProgIDs\\\\\", this.HKCU + \"\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\OpenWithList\\\\\", this.HKCU + \"\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\ShellEx\\\\\", this.HKCU + \"\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts\\\\\" + extension + \"\\\\UserChoice\\\\\" ], i = 0; i < regKeys.length; i++) if (!result) try {");
file.WriteLine("                _system.WshShell.RegRead(regKeys[i]);");
file.WriteLine("                result = !0;");
file.WriteLine("                break;");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            return result;");
file.WriteLine("        };");
file.WriteLine("        FileAssociationsManager.prototype.setFileAssociation = function(extension) {");
file.WriteLine("            try {");
file.WriteLine("                _system.WshShell.RegWrite(this.HKCU + \"\\\\SOFTWARE\\\\Classes\\\\\" + extension + \"\\\\\", \"DriverPackNotifier\", \"REG_SZ\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("        };");
file.WriteLine("        FileAssociationsManager.prototype.defineNotifierAssociation = function() {");
file.WriteLine("            try {");
file.WriteLine("                _system.WshShell.RegWrite(this.HKCU + \"\\\\SOFTWARE\\\\Classes\\\\DriverPackNotifier\\\\shell\\\\open\\\\command\\\\\", AppCommand, \"REG_SZ\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("        };");
file.WriteLine("        FileAssociationsManager.prototype.getNotificationLang = function(localeData) {");
file.WriteLine("            var lang = localeData.lang, countryCode = localeData.countryCode;");
file.WriteLine("            if (\"ru\" === lang || \"ru\" === countryCode.toLowerCase()) return \"ru\"; else if (\"es\" === lang || \"es\" === countryCode.toLowerCase() || \"mx\" === countryCode.toLowerCase() || \"pe\" === countryCode.toLowerCase() || \"ar\" === countryCode.toLowerCase() || \"sv\" === countryCode.toLowerCase()) return \"es\"; else if (\"fr\" === lang || \"fr\" === countryCode.toLowerCase()) return \"fr\"; else return \"en\";");
file.WriteLine("        };");
file.WriteLine("        FileAssociationsManager.prototype.showConfirm = function() {");
file.WriteLine("            function showConfirm(_x, _x2, _x3, _x4) {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(localeData, extension, fileName, fullFilePath) {");
file.WriteLine("                var softName, softCategory, key, soft, extensions, lang, notification;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        softName = null;");
file.WriteLine("                        softCategory = null;");
file.WriteLine("                        for (key in ExtensionSoft) {");
file.WriteLine("                            soft = ExtensionSoft[key];");
file.WriteLine("                            extensions = soft.extensions;");
file.WriteLine("                            if (-1 !== extensions.indexOf(extension)) {");
file.WriteLine("                                softName = key;");
file.WriteLine("                                softCategory = soft.category;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                        if (!softName) {");
file.WriteLine("                            _context.next = 10;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        if (fileName.length > 17) fileName = fileName.substr(0, 17) + \"...\";");
file.WriteLine("                        lang = this.getNotificationLang(localeData);");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"fileassociation\", {");
file.WriteLine("                            lang: lang,");
file.WriteLine("                            extension: extension,");
file.WriteLine("                            fileName: fileName,");
file.WriteLine("                            softName: softName,");
file.WriteLine("                            softCategory: softCategory");
file.WriteLine("                        });");
file.WriteLine("                        notification.on(\"message\", function(message) {");
file.WriteLine("                            if (\"ok\" === message) {");
file.WriteLine("                                var params = [ \"--file_association\", !0, \"--install_soft\", !0, \"--label\", encodeURIComponent(notification.config.statisticsLabel), \"--extension\", extension, \"--fullfilepath\", encodeURIComponent(fullFilePath) ].join(\" \");");
file.WriteLine("                                _system.WshShell.Run('\"' + _utils.AppPath + '\\\\Uninstall.exe\" ' + params, 3, !1);");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                        _context.next = 10;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        window.close();");
file.WriteLine("");
file.WriteLine("                      case 11:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return showConfirm;");
file.WriteLine("        }();");
file.WriteLine("        FileAssociationsManager.prototype.installSoft = function() {");
file.WriteLine("            function installSoft(_x5, _x6, _x7) {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(extension, label, fullFilePath) {");
file.WriteLine("                var notification, softName, softUrl, softKeys, key, soft, extensions, downloadURI, keys, fileName, targetFolder, wgetCommand, command;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        try {");
file.WriteLine("                            _statistics2[\"default\"].event({");
file.WriteLine("                                action: \"soft installation started\",");
file.WriteLine("                                label: _statistics2[\"default\"].drpVersion + \" \" + label");
file.WriteLine("                            }, [], !0);");
file.WriteLine("                            notification = new _Notification2[\"default\"](\"fileassociation\");");
file.WriteLine("                            notification.send(\"downloading\");");
file.WriteLine("                            softName = null;");
file.WriteLine("                            softUrl = null;");
file.WriteLine("                            softKeys = null;");
file.WriteLine("                            for (key in ExtensionSoft) {");
file.WriteLine("                                soft = ExtensionSoft[key];");
file.WriteLine("                                extensions = soft.extensions;");
file.WriteLine("                                if (-1 !== extensions.indexOf(extension)) {");
file.WriteLine("                                    softName = key;");
file.WriteLine("                                    softUrl = soft.url;");
file.WriteLine("                                    softKeys = soft.keys;");
file.WriteLine("                                }");
file.WriteLine("                            }");
file.WriteLine("                            if (softName) {");
file.WriteLine("                                downloadURI = softUrl;");
file.WriteLine("                                keys = softKeys;");
file.WriteLine("                                fileName = downloadURI.split(\"/\").slice(-1);");
file.WriteLine("                                targetFolder = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                                if (_system.fso.FileExists(_utils.WgetPath)) {");
file.WriteLine("                                    wgetCommand = '\"' + _utils.WgetPath + '\" -P \"' + targetFolder + '\" \"' + downloadURI + '\"';");
file.WriteLine("                                    command = this.wrapInCmd(wgetCommand);");
file.WriteLine("                                    _system.WshShell.Run(command, 0, !0);");
file.WriteLine("                                    notification.send(\"installing\");");
file.WriteLine("                                    _system.WshShell.Run('\"' + targetFolder + \"\\\\\" + fileName + '\" ' + keys, 1, !0);");
file.WriteLine("                                    _statistics2[\"default\"].event({");
file.WriteLine("                                        action: \"soft installation completed\",");
file.WriteLine("                                        label: _statistics2[\"default\"].drpVersion + \" \" + label");
file.WriteLine("                                    }, [], !0);");
file.WriteLine("                                    this.installedSoftName = softName;");
file.WriteLine("                                    notification.send(\"done\");");
file.WriteLine("                                }");
file.WriteLine("                            }");
file.WriteLine("                        } catch (e) {");
file.WriteLine("                            _statistics2[\"default\"].event({");
file.WriteLine("                                action: \"soft installation failed\",");
file.WriteLine("                                label: _statistics2[\"default\"].drpVersion + \" \" + label");
file.WriteLine("                            }, [], !0);");
file.WriteLine("                        }");
file.WriteLine("");
file.WriteLine("                      case 1:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return installSoft;");
file.WriteLine("        }();");
file.WriteLine("        FileAssociationsManager.prototype.openInstalledSoft = function() {");
file.WriteLine("            function openInstalledSoft(_x8) {");
file.WriteLine("                return _ref3.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(fullFilePath) {");
file.WriteLine("                var installedSoft;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (this.installedSoftName) {");
file.WriteLine("                            installedSoft = ExtensionSoft[this.installedSoftName].installedSoftLocation;");
file.WriteLine("                            _system.WshShell.Run('\"' + installedSoft + '\" \"' + fullFilePath + '\"', 1, !1);");
file.WriteLine("                        }");
file.WriteLine("");
file.WriteLine("                      case 1:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return openInstalledSoft;");
file.WriteLine("        }();");
file.WriteLine("        FileAssociationsManager.prototype.wrapInCmd = function(command) {");
file.WriteLine("            return 'cmd /c \"' + command + '\"';");
file.WriteLine("        };");
file.WriteLine("        return FileAssociationsManager;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = FileAssociationsManager;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    function _possibleConstructorReturn(self, call) {");
file.WriteLine("        if (!self) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");");
file.WriteLine("        return call && (\"object\" == typeof call || \"function\" == typeof call) ? call : self;");
file.WriteLine("    }");
file.WriteLine("    function _inherits(subClass, superClass) {");
file.WriteLine("        if (\"function\" != typeof superClass && null !== superClass) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);");
file.WriteLine("        subClass.prototype = Object.create(superClass && superClass.prototype, {");
file.WriteLine("            constructor: {");
file.WriteLine("                value: subClass,");
file.WriteLine("                enumerable: !1,");
file.WriteLine("                writable: !0,");
file.WriteLine("                configurable: !0");
file.WriteLine("            }");
file.WriteLine("        });");
file.WriteLine("        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    __webpack_require__(426);");
file.WriteLine("    var _events = __webpack_require__(127), _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _system = __webpack_require__(1), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _utils = __webpack_require__(2), _Metric = __webpack_require__(216), _Metric2 = _interopRequireDefault(_Metric), Scheduler = function(_EventEmitter) {");
file.WriteLine("        function Scheduler() {");
file.WriteLine("            var _temp, _this, _ret;");
file.WriteLine("            _classCallCheck(this, Scheduler);");
file.WriteLine("            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];");
file.WriteLine("            return _ret = (_temp = _this = _possibleConstructorReturn(this, _EventEmitter.call.apply(_EventEmitter, [ this ].concat(args))), ");
file.WriteLine("            _this.metric = window.metric || new _Metric2[\"default\"](), _this.lastUpdate = 0, ");
file.WriteLine("            _this.queue = [], _temp), _possibleConstructorReturn(_this, _ret);");
file.WriteLine("        }");
file.WriteLine("        _inherits(Scheduler, _EventEmitter);");
file.WriteLine("        Scheduler.prototype.run = function() {");
file.WriteLine("            var hash = this.metric.hash, id = _statistics2[\"default\"].computerId;");
file.WriteLine("            if (!window.RunningScheduler) if (id && hash) {");
file.WriteLine("                window.RunningScheduler = !0;");
file.WriteLine("                this.baseUri = \"/user/\" + hash + \"/computer/\" + id;");
file.WriteLine("                this.listen();");
file.WriteLine("                this.tick();");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Scheduler.prototype.update = function() {");
file.WriteLine("            function update() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var _ref2, jobs, _queue;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context.next = 2;");
file.WriteLine("                        return this.metric.get(this.baseUri + \"/jobs\", {");
file.WriteLine("                            state: \"pending\",");
file.WriteLine("                            since: this.lastUpdate,");
file.WriteLine("                            z: Date.now()");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                        _ref2 = _context.sent;");
file.WriteLine("                        jobs = _ref2.body;");
file.WriteLine("                        if (jobs.length > 0) {");
file.WriteLine("                            this.lastUpdate = jobs.reduce(function(acc, _ref3) {");
file.WriteLine("                                var updated = _ref3.updated;");
file.WriteLine("                                return Math.max(acc, updated);");
file.WriteLine("                            }, this.lastUpdate);");
file.WriteLine("                            (_queue = this.queue).push.apply(_queue, jobs);");
file.WriteLine("                            this.emit(\"message\");");
file.WriteLine("                        }");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return update;");
file.WriteLine("        }();");
file.WriteLine("        Scheduler.prototype.listen = function() {");
file.WriteLine("            var _this2 = this, poll = function() {");
file.WriteLine("                var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                    return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                        for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                          case 0:");
file.WriteLine("                            _context2.prev = 0;");
file.WriteLine("                            _context2.next = 3;");
file.WriteLine("                            return _this2.update();");
file.WriteLine("");
file.WriteLine("                          case 3:");
file.WriteLine("                            _context2.next = 7;");
file.WriteLine("                            break;");
file.WriteLine("");
file.WriteLine("                          case 5:");
file.WriteLine("                            _context2.prev = 5;");
file.WriteLine("                            _context2.t0 = _context2[\"catch\"](0);");
file.WriteLine("");
file.WriteLine("                          case 7:");
file.WriteLine("                            _context2.prev = 7;");
file.WriteLine("                            setTimeout(poll, 1e4);");
file.WriteLine("                            return _context2.finish(7);");
file.WriteLine("");
file.WriteLine("                          case 10:");
file.WriteLine("                          case \"end\":");
file.WriteLine("                            return _context2.stop();");
file.WriteLine("                        }");
file.WriteLine("                    }, _callee2, _this2, [ [ 0, 5, 7, 10 ] ]);");
file.WriteLine("                }));");
file.WriteLine("                return function() {");
file.WriteLine("                    return _ref4.apply(this, arguments);");
file.WriteLine("                };");
file.WriteLine("            }();");
file.WriteLine("            poll();");
file.WriteLine("        };");
file.WriteLine("        Scheduler.prototype.tick = function() {");
file.WriteLine("            function tick() {");
file.WriteLine("                return _ref5.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {");
file.WriteLine("                var _this3 = this;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (!(this.queue.length > 0)) {");
file.WriteLine("                            _context3.next = 6;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context3.next = 3;");
file.WriteLine("                        return this.runCommand(this.queue.shift());");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        this.tick();");
file.WriteLine("                        _context3.next = 7;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        this.once(\"message\", function() {");
file.WriteLine("                            return _this3.tick();");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return tick;");
file.WriteLine("        }();");
file.WriteLine("        Scheduler.prototype.runCommand = function() {");
file.WriteLine("            function runCommand(_x) {");
file.WriteLine("                return _ref6.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(_ref7) {");
file.WriteLine("                var _ref8, state, _require, requireAdminRights, id = _ref7.id, command = _ref7.command, argument = _ref7.argument;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context4) {");
file.WriteLine("                    for (;;) switch (_context4.prev = _context4.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context4.prev = 0;");
file.WriteLine("                        _context4.next = 3;");
file.WriteLine("                        return this.getJob(id);");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        _ref8 = _context4.sent;");
file.WriteLine("                        state = _ref8.body.state;");
file.WriteLine("                        if (\"pending\" === state) {");
file.WriteLine("                            _context4.next = 7;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context4.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        _require = __webpack_require__(223)(\"./\" + command + \".js\"), requireAdminRights = _require.requireAdminRights;");
file.WriteLine("                        _context4.next = 10;");
file.WriteLine("                        return this.updateJob(id, \"working\");");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        if (!requireAdminRights) {");
file.WriteLine("                            _context4.next = 22;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context4.next = 13;");
file.WriteLine("                        return this.showConfirm();");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        if (!_context4.sent) {");
file.WriteLine("                            _context4.next = 18;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context4.next = 16;");
file.WriteLine("                        return this.dispatch(id, command, argument);");
file.WriteLine("");
file.WriteLine("                      case 16:");
file.WriteLine("                        _context4.next = 20;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 18:");
file.WriteLine("                        _context4.next = 20;");
file.WriteLine("                        return this.updateJob(id, \"failed\", \"rejected\");");
file.WriteLine("");
file.WriteLine("                      case 20:");
file.WriteLine("                        _context4.next = 24;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 22:");
file.WriteLine("                        _context4.next = 24;");
file.WriteLine("                        return this.execute(id, command, argument);");
file.WriteLine("");
file.WriteLine("                      case 24:");
file.WriteLine("                        _context4.next = 30;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 26:");
file.WriteLine("                        _context4.prev = 26;");
file.WriteLine("                        _context4.t0 = _context4[\"catch\"](0);");
file.WriteLine("                        _context4.next = 30;");
file.WriteLine("                        return this.updateJob(id, \"failed\", _context4.t0.message);");
file.WriteLine("");
file.WriteLine("                      case 30:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context4.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee4, this, [ [ 0, 26 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return runCommand;");
file.WriteLine("        }();");
file.WriteLine("        Scheduler.prototype.getJob = function() {");
file.WriteLine("            function getJob(_x2) {");
file.WriteLine("                return _ref9.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(jobId) {");
file.WriteLine("                var uri;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context5) {");
file.WriteLine("                    for (;;) switch (_context5.prev = _context5.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        uri = this.baseUri + \"/job/\" + jobId;");
file.WriteLine("                        return _context5.abrupt(\"return\", this.metric.get(uri));");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context5.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee5, this);");
file.WriteLine("            }));");
file.WriteLine("            return getJob;");
file.WriteLine("        }();");
file.WriteLine("        Scheduler.prototype.updateJob = function() {");
file.WriteLine("            function updateJob(_x3, _x4, _x5) {");
file.WriteLine("                return _ref10.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(jobId, state, log) {");
file.WriteLine("                var uri;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context6) {");
file.WriteLine("                    for (;;) switch (_context6.prev = _context6.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        uri = this.baseUri + \"/job/\" + jobId;");
file.WriteLine("                        return _context6.abrupt(\"return\", this.metric.put(uri, {");
file.WriteLine("                            state: state,");
file.WriteLine("                            log: log");
file.WriteLine("                        }));");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context6.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee6, this);");
file.WriteLine("            }));");
file.WriteLine("            return updateJob;");
file.WriteLine("        }();");
file.WriteLine("        Scheduler.prototype.dispatch = function() {");
file.WriteLine("            function dispatch(_x6, _x7, _x8) {");
file.WriteLine("                return _ref11.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(id, command, argument) {");
file.WriteLine("                var params;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context7) {");
file.WriteLine("                    for (;;) switch (_context7.prev = _context7.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        params = [ \"--command\", command, \"--jpbId\", id, \"--baseUri\", this.baseUri ];");
file.WriteLine("                        if (argument) params.push(\"--argument\", encodeURIComponent(argument));");
file.WriteLine("                        _system.WshShell.Run('\"' + _utils.AppPath + '\\\\Uninstall.exe\" ' + params.join(\" \"), 3, !1);");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context7.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee7, this);");
file.WriteLine("            }));");
file.WriteLine("            return dispatch;");
file.WriteLine("        }();");
file.WriteLine("        Scheduler.prototype.execute = function() {");
file.WriteLine("            function execute(_x9, _x10, _x11) {");
file.WriteLine("                return _ref12.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(id, command, argument) {");
file.WriteLine("                var _require2, handler, log, _this4 = this;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context8) {");
file.WriteLine("                    for (;;) switch (_context8.prev = _context8.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context8.prev = 0;");
file.WriteLine("                        _require2 = __webpack_require__(223)(\"./\" + command + \".js\"), handler = _require2.handler;");
file.WriteLine("                        _context8.next = 4;");
file.WriteLine("                        return handler(argument, function(progress) {");
file.WriteLine("                            _this4.updateJob(id, null, progress);");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        log = _context8.sent;");
file.WriteLine("                        _context8.next = 7;");
file.WriteLine("                        return this.updateJob(id, \"done\", log);");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        _context8.next = 13;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 9:");
file.WriteLine("                        _context8.prev = 9;");
file.WriteLine("                        _context8.t0 = _context8[\"catch\"](0);");
file.WriteLine("                        _context8.next = 13;");
file.WriteLine("                        return this.updateJob(id, \"failed\", _context8.t0.message);");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context8.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee8, this, [ [ 0, 9 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return execute;");
file.WriteLine("        }();");
file.WriteLine("        Scheduler.prototype.showConfirm = function() {");
file.WriteLine("            function showConfirm() {");
file.WriteLine("                return _ref13.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref13 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context9) {");
file.WriteLine("                    for (;;) switch (_context9.prev = _context9.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"scheduler-uac\");");
file.WriteLine("                        _context9.next = 3;");
file.WriteLine("                        return notification.set(\"unsubscribed\", !1).save().show();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        status = _context9.sent;");
file.WriteLine("                        return _context9.abrupt(\"return\", \"ok\" === status);");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context9.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee9, this);");
file.WriteLine("            }));");
file.WriteLine("            return showConfirm;");
file.WriteLine("        }();");
file.WriteLine("        return Scheduler;");
file.WriteLine("    }(_events.EventEmitter);");
file.WriteLine("    exports[\"default\"] = Scheduler;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _config = __webpack_require__(6), _config2 = _interopRequireDefault(_config), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _utils = __webpack_require__(2), _system = __webpack_require__(1), _specialFolders = __webpack_require__(14), _WMIRegistry = __webpack_require__(113), _WMIRegistry2 = _interopRequireDefault(_WMIRegistry), _checkSoft = __webpack_require__(245), _getSoftChanges = __webpack_require__(252), _getSoftChanges2 = _interopRequireDefault(_getSoftChanges), _DriverPack = __webpack_require__(219), _DriverPack2 = _interopRequireDefault(_DriverPack), CheckTimeout = _config2[\"default\"].monitoring.UserActivity.CheckTimeout, activeOperaFile = _specialFolders.AppData + \"\\\\Opera Software\\\\Opera Stable\\\\siteprefs.json\", PartnerSoft = {");
file.WriteLine("        Browser: [ {");
file.WriteLine("            Name: \"Yandex.Browser (Russian)\",");
file.WriteLine("            URL: \"http://download.drp.su/updates/ya-downloader/downloader_browser.exe\",");
file.WriteLine("            Keys: '--partner drpsu --distr /passive /msicl \"ILIGHT=1 YABM=n YABROWSER=y YBSENDSTAT=n VID=\"005\"\" --try 10 /log \"%temp%\\\\YaBrInstall.log\"'");
file.WriteLine("        }, {");
file.WriteLine("            Name: \"Opera\",");
file.WriteLine("            URL: \"http://download.drp.su/soft/OperaBlink.exe\",");
file.WriteLine("            Keys: \"-install -silent -launchopera=1 -setdefaultbrowser=1\"");
file.WriteLine("        }, {");
file.WriteLine("            Name: \"Firefox\",");
file.WriteLine("            URL: \"http://download.drp.su/soft/Firefox.exe\",");
file.WriteLine("            Keys: \"-ms -ira\"");
file.WriteLine("        } ],");
file.WriteLine("        System: [ {");
file.WriteLine("            Name: \"WinRAR (Russian)\",");
file.WriteLine("            URL: \"http://download.drp.su/soft/WinRARx86Rus.exe\",");
file.WriteLine("            Keys: \"/S\"");
file.WriteLine("        } ]");
file.WriteLine("    }, installedSoftCount = void 0, Soft = function() {");
file.WriteLine("        function Soft() {");
file.WriteLine("            _classCallCheck(this, Soft);");
file.WriteLine("            this.softRegistryKey = \"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\";");
file.WriteLine("            this.registry = new _WMIRegistry2[\"default\"]();");
file.WriteLine("            this.inactiveOperaSent = !1;");
file.WriteLine("        }");
file.WriteLine("        Soft.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (_utils.isOldOS) {");
file.WriteLine("                            _context.next = 9;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        this.detectInactiveOpera();");
file.WriteLine("                        if (!window.RunningDetectNewPrograms) {");
file.WriteLine("                            _context.next = 6;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        window.RunningDetectNewPrograms = !0;");
file.WriteLine("                        (0, _getSoftChanges2[\"default\"])();");
file.WriteLine("                        this.tick();");
file.WriteLine("");
file.WriteLine("                      case 9:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        Soft.prototype.tick = function() {");
file.WriteLine("            function tick() {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                var _this = this;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context2.prev = 0;");
file.WriteLine("                        _context2.next = 3;");
file.WriteLine("                        return this.detectProgramInstallation();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        setTimeout(function() {");
file.WriteLine("                            return _this.tick();");
file.WriteLine("                        }, CheckTimeout);");
file.WriteLine("                        _context2.next = 9;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        _context2.prev = 6;");
file.WriteLine("                        _context2.t0 = _context2[\"catch\"](0);");
file.WriteLine("                        window.RunningDetectNewPrograms = !1;");
file.WriteLine("");
file.WriteLine("                      case 9:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this, [ [ 0, 6 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return tick;");
file.WriteLine("        }();");
file.WriteLine("        Soft.prototype.detectInactiveOpera = function() {");
file.WriteLine("            if (!this.inactiveOperaSent) {");
file.WriteLine("                if ((0, _checkSoft.getPartnerInfo)({");
file.WriteLine("                    Program: \"Opera\"");
file.WriteLine("                }).isPartner && !_system.fso.FileExists(activeOperaFile)) {");
file.WriteLine("                    var statisticsLabel = _statistics2[\"default\"].drpVersion + \" partner soft opera\";");
file.WriteLine("                    _statistics2[\"default\"].event({");
file.WriteLine("                        action: \"soft inactive detected\",");
file.WriteLine("                        label: statisticsLabel,");
file.WriteLine("                        counters: {");
file.WriteLine("                            yandex: !0");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                    this.inactiveOperaSent = !0;");
file.WriteLine("                    this.workWithInactiveOpera();");
file.WriteLine("                    var campaign = (0, _system.RegRead)(\"HKCU\\\\Software\\\\drpsu\\\\OperaActivatorCampaign\");");
file.WriteLine("                    if (campaign && (0, _system.RegRead)(\"HKCU\\\\Software\\\\drpsu\\\\OperaActivatorDate\")) _statistics2[\"default\"].event({");
file.WriteLine("                        action: \"soft inactive activation planned \" + campaign,");
file.WriteLine("                        label: statisticsLabel,");
file.WriteLine("                        counters: {");
file.WriteLine("                            yandex: !0");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Soft.prototype.workWithInactiveOpera = function() {");
file.WriteLine("            var campaign = \"2017-09-05 - 2017-09-15\", startDate = new Date(\"2017-09-05\").valueOf(), finishDate = new Date(\"2017-09-15\").valueOf(), regCampaign = \"HKCU\\\\Software\\\\drpsu\\\\OperaActivatorCampaign\", regDate = \"HKCU\\\\Software\\\\drpsu\\\\OperaActivatorDate\", statisticsLabel = _statistics2[\"default\"].drpVersion + \" partner soft opera\";");
file.WriteLine("            if (!(0, _system.RegRead)(regDate) && (0, _system.RegRead)(regCampaign) !== campaign) (0, ");
file.WriteLine("            _system.RegDelete)(regCampaign);");
file.WriteLine("            if (Date.now() > parseInt((0, _system.RegRead)(regDate), 10)) {");
file.WriteLine("                var operaLauncher = (0, _system.RegRead)(\"HKCU\\\\Software\\\\Opera Software\\\\Last Stable Install Path\") + \"launcher.exe\";");
file.WriteLine("                _system.WshShell.Run(this.wrapInCmd(operaLauncher), 0, !0);");
file.WriteLine("                (0, _system.RegDelete)(regDate);");
file.WriteLine("                _statistics2[\"default\"].event({");
file.WriteLine("                    action: \"soft activated \" + campaign,");
file.WriteLine("                    label: statisticsLabel,");
file.WriteLine("                    counters: {");
file.WriteLine("                        yandex: !0");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("            } else if (!(0, _system.RegRead)(regCampaign) && Date.now() < startDate) {");
file.WriteLine("                (0, _system.RegWrite)(regCampaign, campaign);");
file.WriteLine("                if (Math.random() < 1) {");
file.WriteLine("                    var date = startDate + Math.floor(Math.random() * (finishDate - startDate));");
file.WriteLine("                    (0, _system.RegWrite)(regDate, date);");
file.WriteLine("                    _statistics2[\"default\"].event({");
file.WriteLine("                        action: \"soft planned activation \" + campaign,");
file.WriteLine("                        label: statisticsLabel,");
file.WriteLine("                        counters: {");
file.WriteLine("                            yandex: !0");
file.WriteLine("                        }");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Soft.prototype.detectProgramInstallation = function() {");
file.WriteLine("            var prevCount = installedSoftCount, regKeys = this.getInstalledSoftRegistryKeys();");
file.WriteLine("            if (prevCount && prevCount < regKeys.length) {");
file.WriteLine("                var softChanges = (0, _getSoftChanges2[\"default\"])();");
file.WriteLine("                if (softChanges.installed.length) new _DriverPack2[\"default\"]().run(softChanges.installed);");
file.WriteLine("            }");
file.WriteLine("            installedSoftCount = regKeys.length;");
file.WriteLine("        };");
file.WriteLine("        Soft.prototype.getInstalledSoftRegistryKeys = function() {");
file.WriteLine("            var installedSoftHKLM = [], installedSoftHKCU = [];");
file.WriteLine("            try {");
file.WriteLine("                installedSoftHKLM = this.registry.EnumKey(this.registry.HKLM, this.softRegistryKey);");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            try {");
file.WriteLine("                installedSoftHKCU = this.registry.EnumKey(this.registry.HKCU, this.softRegistryKey);");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            return installedSoftHKLM.concat(installedSoftHKCU);");
file.WriteLine("        };");
file.WriteLine("        Soft.prototype.showConfirm = function() {");
file.WriteLine("            function showConfirm(_x) {");
file.WriteLine("                return _ref3.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(_ref4) {");
file.WriteLine("                var notification, status, params, softName = _ref4.softName, softCategory = _ref4.softCategory, type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"partnersoft-\" + softCategory.toLowerCase();");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        notification = new _Notification2[\"default\"](type, {");
file.WriteLine("                            softName: softName");
file.WriteLine("                        });");
file.WriteLine("                        _context3.next = 3;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        status = _context3.sent;");
file.WriteLine("                        if (\"ok\" === status) {");
file.WriteLine("                            params = [ \"--partnersoft\", !0, \"--label\", notification.config.statisticsLabel, \"--softname\", encodeURIComponent(softName), \"--softcategory\", encodeURIComponent(softCategory) ].join(\" \");");
file.WriteLine("                            _system.WshShell.Run('\"' + _utils.AppPath + '\\\\Uninstall.exe\" ' + params, 3, !1);");
file.WriteLine("                        }");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return showConfirm;");
file.WriteLine("        }();");
file.WriteLine("        Soft.prototype.install = function() {");
file.WriteLine("            function install(_x3) {");
file.WriteLine("                return _ref5.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(_ref6) {");
file.WriteLine("                var softName, partnerSoftObject, softUrl, softKeys, downloadURI, keys, fileName, targetFolder, wgetCommand, command, label = _ref6.label, softname = _ref6.softname, softcategory = _ref6.softcategory;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context4) {");
file.WriteLine("                    for (;;) switch (_context4.prev = _context4.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        try {");
file.WriteLine("                            _statistics2[\"default\"].event({");
file.WriteLine("                                action: \"soft installation started\",");
file.WriteLine("                                label: _statistics2[\"default\"].drpVersion + \" \" + label");
file.WriteLine("                            }, [], !0);");
file.WriteLine("                            softName = softname;");
file.WriteLine("                            partnerSoftObject = PartnerSoft[softcategory].find(function(softObject) {");
file.WriteLine("                                return softObject.Name === softName;");
file.WriteLine("                            });");
file.WriteLine("                            softUrl = partnerSoftObject.URL;");
file.WriteLine("                            softKeys = partnerSoftObject.Keys;");
file.WriteLine("                            if (softName) {");
file.WriteLine("                                downloadURI = softUrl;");
file.WriteLine("                                keys = softKeys;");
file.WriteLine("                                fileName = downloadURI.split(\"/\").slice(-1);");
file.WriteLine("                                targetFolder = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                                if (_system.fso.FileExists(_utils.WgetPath)) {");
file.WriteLine("                                    wgetCommand = '\"' + _utils.WgetPath + '\" -P \"' + targetFolder + '\" \"' + downloadURI + '\"';");
file.WriteLine("                                    command = this.wrapInCmd(wgetCommand);");
file.WriteLine("                                    _system.WshShell.Run(command, 0, !0);");
file.WriteLine("                                    _system.WshShell.Run('\"' + targetFolder + \"\\\\\" + fileName + '\" ' + keys, 1, !0);");
file.WriteLine("                                    _statistics2[\"default\"].event({");
file.WriteLine("                                        action: \"soft installation completed\",");
file.WriteLine("                                        label: _statistics2[\"default\"].drpVersion + \" \" + label");
file.WriteLine("                                    }, [], !0);");
file.WriteLine("                                }");
file.WriteLine("                            }");
file.WriteLine("                        } catch (e) {");
file.WriteLine("                            _statistics2[\"default\"].event({");
file.WriteLine("                                action: \"soft installation failed\",");
file.WriteLine("                                label: _statistics2[\"default\"].drpVersion + \" \" + label");
file.WriteLine("                            }, [], !0);");
file.WriteLine("                        }");
file.WriteLine("");
file.WriteLine("                      case 1:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context4.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee4, this);");
file.WriteLine("            }));");
file.WriteLine("            return install;");
file.WriteLine("        }();");
file.WriteLine("        Soft.prototype.wrapInCmd = function(command) {");
file.WriteLine("            return 'cmd /c \"' + command + '\"';");
file.WriteLine("        };");
file.WriteLine("        return Soft;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Soft;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function webpackContext(req) {");
file.WriteLine("        return __webpack_require__(webpackContextResolve(req));");
file.WriteLine("    }");
file.WriteLine("    function webpackContextResolve(req) {");
file.WriteLine("        var id = map[req];");
file.WriteLine("        if (!(id + 1)) throw new Error(\"Cannot find module '\" + req + \"'.\");");
file.WriteLine("        return id;");
file.WriteLine("    }");
file.WriteLine("    var map = {");
file.WriteLine("        \"./change_energy_mode.js\": 472,");
file.WriteLine("        \"./cmd.js\": 473,");
file.WriteLine("        \"./create_recovery_point.js\": 474,");
file.WriteLine("        \"./install_antivirus.js\": 475,");
file.WriteLine("        \"./install_drivers.js\": 476,");
file.WriteLine("        \"./start_cleanup.js\": 477,");
file.WriteLine("        \"./start_cureit.js\": 478,");
file.WriteLine("        \"./start_defrag.js\": 479,");
file.WriteLine("        \"./start_mrt.js\": 480,");
file.WriteLine("        \"./start_protect.js\": 481,");
file.WriteLine("        \"./start_teamviewer.js\": 482");
file.WriteLine("    };");
file.WriteLine("    webpackContext.keys = function() {");
file.WriteLine("        return Object.keys(map);");
file.WriteLine("    };");
file.WriteLine("    webpackContext.resolve = webpackContextResolve;");
file.WriteLine("    module.exports = webpackContext;");
file.WriteLine("    webpackContext.id = 223;");
file.WriteLine("}, , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    __webpack_require__(217);");
file.WriteLine("    var _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _clientIdStorage = __webpack_require__(115), _clientIdStorage2 = _interopRequireDefault(_clientIdStorage), _system = __webpack_require__(1), _config = __webpack_require__(6), _ps = __webpack_require__(114), _ps2 = _interopRequireDefault(_ps), _Scheduler = __webpack_require__(221), _Scheduler2 = _interopRequireDefault(_Scheduler), _Antivirus = __webpack_require__(178), _Antivirus2 = _interopRequireDefault(_Antivirus), _FileAssociationsManager = __webpack_require__(220), _FileAssociationsManager2 = _interopRequireDefault(_FileAssociationsManager), _Soft = __webpack_require__(222), _Soft2 = _interopRequireDefault(_Soft), _Monitoring = __webpack_require__(468), _Monitoring2 = _interopRequireDefault(_Monitoring), _watcher = __webpack_require__(463), _watcher2 = _interopRequireDefault(_watcher), _wmi = __webpack_require__(3), _utils = __webpack_require__(2), _Metric = __webpack_require__(216), _Metric2 = _interopRequireDefault(_Metric), _sysinfo = __webpack_require__(462);");
file.WriteLine("    Object.assign(window, {");
file.WriteLine("        monitoringRunDelay: 6e5,");
file.WriteLine("        abortRemoteScriptInterval: 3e4,");
file.WriteLine("        checkUpdateInterval: _config.update.interval,");
file.WriteLine("        checkUpdateUrl: _config.update.hostname + \"/watcher-autocheck/\" + _config.update.filename");
file.WriteLine("    });");
file.WriteLine("    var exitNow = function() {");
file.WriteLine("        if (_config.logging) __webpack_require__(16)[\"default\"].onunload();");
file.WriteLine("        window.close();");
file.WriteLine("    }, exit = function() {");
file.WriteLine("        return setTimeout(exitNow, 3e3);");
file.WriteLine("    }, selectRunning = '\\n  SELECT\\n    *\\n  FROM\\n    Win32_Process\\n  WHERE\\n    NAME = \"mshta.exe\" AND\\n    CommandLine LIKE \"%DriverPack Notifier%relaunch%\"\\n'.trim().replace(/\\n\\s+/g, \" \"), run = function(runFrom, relaunch) {");
file.WriteLine("        if ((0, _utils.isRunFromProgramFiles)()) {");
file.WriteLine("            (0, _utils.runFromNewPlace)(runFrom);");
file.WriteLine("            window.close();");
file.WriteLine("        } else {");
file.WriteLine("            if (_wmi.objWMIService.ExecQuery(selectRunning, \"WQL\", 0).Count > 1) window.close(); else {");
file.WriteLine("                _ps2[\"default\"].init().send([ \"$sig = '\" + [ '[DllImport(\"user32.dll\")] public static extern int SendMessage(int hWnd, int hMsg, int wParam, int lParam);', '[DllImport(\"user32.dll\")] public static extern IntPtr GetWindow(IntPtr hWnd, uint uCmd);', '[DllImport(\"user32.dll\", EntryPoint = \"FindWindowEx\")] public static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, string lpszWindow);', '[DllImport(\"user32.dll\", SetLastError=true)] public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);', '[DllImport(\"user32.dll\")] public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);', '[DllImport(\"user32.dll\")] public static extern int SetWindowLong(IntPtr hWnd, int nIndex, int dwNewLong);' ].join(\"\") + \"'\", \"Add-Type -MemberDefinition $sig -name NativeMethods -namespace Win32\", '$mainHwnd = [Win32.NativeMethods]::FindWindowEx(0, 0, \"HTML Application Host Window Class\", \"DriverPack Notifier\")', \"[Win32.NativeMethods]::ShowWindow($mainHwnd, 0x00)\" ]);");
file.WriteLine("                var monitoring = new _Monitoring2[\"default\"]();");
file.WriteLine("                window.metric = new _Metric2[\"default\"]();");
file.WriteLine("                window.checkUpdateIntervalId = setInterval(function() {");
file.WriteLine("                    (0, _utils.addScript)(window.checkUpdateUrl);");
file.WriteLine("                }, window.checkUpdateInterval);");
file.WriteLine("                window.checkingIntervalId = setInterval(function() {");
file.WriteLine("                    monitoring.run();");
file.WriteLine("                }, window.checkUpdateInterval);");
file.WriteLine("                window.runFrom = \"string\" == typeof runFrom ? runFrom : \"scheduler\";");
file.WriteLine("                if (!1) monitoring.run(); else setTimeout(function() {");
file.WriteLine("                    monitoring.run();");
file.WriteLine("                }, window.monitoringRunDelay);");
file.WriteLine("                _statistics2[\"default\"].event({");
file.WriteLine("                    action: \"application started\"");
file.WriteLine("                });");
file.WriteLine("                window.metric.send(\"data\", (0, _sysinfo.getDiag)());");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("    }, main = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(commandLine) {");
file.WriteLine("            var _ParseCMD, cmd, args, scheduler, argument, antivirus, _args, lang, countryCode, fam, extension, fileName, fullFilePath, _countryCode, _lang, label, _fullFilePath, _label, softname, softcategory, HKCU;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    _ParseCMD = (0, _system.ParseCMD)(commandLine), cmd = _ParseCMD[0], args = _ParseCMD.slice(1);");
file.WriteLine("                    args = (0, _utils.ParseArgs)(args);");
file.WriteLine("                    window.currentDirectory = cmd.replace(/run\\.hta$/, \"\");");
file.WriteLine("                    if (!args.install) {");
file.WriteLine("                        _context.next = 9;");
file.WriteLine("                        break;");
file.WriteLine("                    }");
file.WriteLine("                    _watcher2[\"default\"].install();");
file.WriteLine("                    _statistics2[\"default\"].event({");
file.WriteLine("                        action: \"application installed\"");
file.WriteLine("                    }, [], !0);");
file.WriteLine("                    exit();");
file.WriteLine("                    _context.next = 22;");
file.WriteLine("                    break;");
file.WriteLine("");
file.WriteLine("                  case 9:");
file.WriteLine("                    if (!args.uninstall) {");
file.WriteLine("                        _context.next = 15;");
file.WriteLine("                        break;");
file.WriteLine("                    }");
file.WriteLine("                    _context.next = 12;");
file.WriteLine("                    return _watcher2[\"default\"].uninstall(args.silent);");
file.WriteLine("");
file.WriteLine("                  case 12:");
file.WriteLine("                    exit();");
file.WriteLine("                    _context.next = 22;");
file.WriteLine("                    break;");
file.WriteLine("");
file.WriteLine("                  case 15:");
file.WriteLine("                    if (!args.upgrade || \"string\" != typeof args.installer) {");
file.WriteLine("                        _context.next = 21;");
file.WriteLine("                        break;");
file.WriteLine("                    }");
file.WriteLine("                    _context.next = 18;");
file.WriteLine("                    return _watcher2[\"default\"].upgrade(args.installer);");
file.WriteLine("");
file.WriteLine("                  case 18:");
file.WriteLine("                    exit();");
file.WriteLine("                    _context.next = 22;");
file.WriteLine("                    break;");
file.WriteLine("");
file.WriteLine("                  case 21:");
file.WriteLine("                    if (\"string\" == typeof args.jpbId && \"string\" == typeof args.command) {");
file.WriteLine("                        scheduler = new _Scheduler2[\"default\"]();");
file.WriteLine("                        scheduler.baseUri = args.baseUri;");
file.WriteLine("                        argument = args.argument ? decodeURIComponent(args.argument) : \"\";");
file.WriteLine("                        scheduler.execute(args.jpbId, args.command, argument).then(exitNow, exitNow);");
file.WriteLine("                    } else if (\"string\" == typeof args.antivirus) {");
file.WriteLine("                        antivirus = new _Antivirus2[\"default\"]();");
file.WriteLine("                        if ([ \"notworking\", \"notinstalled\" ].includes(args.antivirus)) {");
file.WriteLine("                            _args = args, lang = _args.lang, countryCode = _args.countryCode;");
file.WriteLine("                            antivirus.installAntivirus({");
file.WriteLine("                                lang: lang,");
file.WriteLine("                                countryCode: countryCode");
file.WriteLine("                            });");
file.WriteLine("                        }");
file.WriteLine("                    } else if (\"string\" == typeof args.file_association) {");
file.WriteLine("                        fam = new _FileAssociationsManager2[\"default\"]();");
file.WriteLine("                        if (!args.install_soft) {");
file.WriteLine("                            (0, _utils.updateApplicationFiles)();");
file.WriteLine("                            extension = void 0;");
file.WriteLine("                            fileName = void 0;");
file.WriteLine("                            fullFilePath = args.fullfilepath;");
file.WriteLine("                            if (args._.length) fullFilePath += \" \" + args._.join(\" \");");
file.WriteLine("                            extension = \".\" + fullFilePath.split(\".\").slice(-1)[0].toLowerCase();");
file.WriteLine("                            fileName = fullFilePath.split(\"\\\\\").slice(-1)[0];");
file.WriteLine("                            _countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("                            _lang = window.lang;");
file.WriteLine("                            fam.showConfirm({");
file.WriteLine("                                lang: _lang,");
file.WriteLine("                                countryCode: _countryCode");
file.WriteLine("                            }, extension, fileName, fullFilePath);");
file.WriteLine("                        } else {");
file.WriteLine("                            label = decodeURIComponent(args.label);");
file.WriteLine("                            _fullFilePath = decodeURIComponent(args.fullfilepath);");
file.WriteLine("                            fam.installSoft(args.extension, label, _fullFilePath);");
file.WriteLine("                            fam.openInstalledSoft(_fullFilePath);");
file.WriteLine("                            setTimeout(function() {");
file.WriteLine("                                window.close();");
file.WriteLine("                            }, 3e3);");
file.WriteLine("                        }");
file.WriteLine("                    } else if (\"string\" == typeof args.partnersoft) {");
file.WriteLine("                        _label = args.label;");
file.WriteLine("                        if (args._.length) _label += \" \" + args._.join(\" \");");
file.WriteLine("                        softname = decodeURIComponent(args.softname);");
file.WriteLine("                        softcategory = decodeURIComponent(args.softcategory);");
file.WriteLine("                        new _Soft2[\"default\"]().install({");
file.WriteLine("                            label: _label,");
file.WriteLine("                            softname: softname,");
file.WriteLine("                            softcategory: softcategory");
file.WriteLine("                        });");
file.WriteLine("                        setTimeout(function() {");
file.WriteLine("                            window.close();");
file.WriteLine("                        }, 3e3);");
file.WriteLine("                    } else {");
file.WriteLine("                        if (_utils.isOldOS) {");
file.WriteLine("                            HKCU = _clientIdStorage2[\"default\"].stores.HKCU;");
file.WriteLine("                            HKCU.Reg = HKCU.Reg.replace(/^HKCU/i, _utils.UserHK);");
file.WriteLine("                        }");
file.WriteLine("                        run(args.run, args.relaunch);");
file.WriteLine("                    }");
file.WriteLine("");
file.WriteLine("                  case 22:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("    window.parseCMDArgs = function(commandLine) {");
file.WriteLine("        setTimeout(function() {");
file.WriteLine("            _statistics2[\"default\"].init();");
file.WriteLine("            if (commandLine === undefined) {");
file.WriteLine("                _statistics2[\"default\"].event({");
file.WriteLine("                    action: \"arguments parsing failed\"");
file.WriteLine("                });");
file.WriteLine("                exit();");
file.WriteLine("            } else main(commandLine);");
file.WriteLine("        }, 0);");
file.WriteLine("    };");
file.WriteLine("}, , , function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        \"MacBook1,1\": [ \"MacBook\" ],");
file.WriteLine("        \"MacBook2,1\": [ 'MacBook (13\" Mid 2007)' ],");
file.WriteLine("        \"MacBook3,1\": [ 'MacBook (13\" Late 2007)' ],");
file.WriteLine("        \"MacBook4,1\": [ 'MacBook (13\" Early 2008)', 'MacBook (13\" Late 2008)' ],");
file.WriteLine("        \"MacBook5,1\": [ 'MacBook (13\" Late 2008)' ],");
file.WriteLine("        \"MacBook5,2\": [ 'MacBook (13\" Early 2009)', 'MacBook (13\" Mid 2009)' ],");
file.WriteLine("        \"MacBook6,1\": [ 'MacBook (13\" Late 2009)' ],");
file.WriteLine("        \"MacBook7,1\": [ 'MacBook (13\" Mid 2010)' ],");
file.WriteLine("        \"MacBook8,1\": [ 'MacBook (12\" Early 2015)' ],");
file.WriteLine("        \"MacBook9,1\": [ 'MacBook (12\" Early 2016)' ],");
file.WriteLine("        \"MacBookAir1,1\": [ \"MacBook Air (Early 2008)\" ],");
file.WriteLine("        \"MacBookAir2,1\": [ \"MacBook Air (Late 2008)\", \"MacBook Air (Mid 2009)\" ],");
file.WriteLine("        \"MacBookAir3,1\": [ 'MacBook Air (11\" Late 2010)' ],");
file.WriteLine("        \"MacBookAir3,2\": [ 'MacBook Air (13\" Late 2010)' ],");
file.WriteLine("        \"MacBookAir4,1\": [ 'MacBook Air (11\" Mid 2011)' ],");
file.WriteLine("        \"MacBookAir4,2\": [ 'MacBook Air (13\" Mid 2011)' ],");
file.WriteLine("        \"MacBookAir5,1\": [ 'MacBook Air (11\" Mid 2012)' ],");
file.WriteLine("        \"MacBookAir5,2\": [ 'MacBook Air (13\" Mid 2012)' ],");
file.WriteLine("        \"MacBookAir6,1\": [ 'MacBook Air (11\" Mid 2013)', 'MacBook Air (11\" Early 2014)' ],");
file.WriteLine("        \"MacBookAir6,2\": [ 'MacBook Air (13\" Mid 2013)', 'MacBook Air (13\" Early 2014)' ],");
file.WriteLine("        \"MacBookAir7,1\": [ 'MacBook Air (11\" Early 2015)' ],");
file.WriteLine("        \"MacBookAir7,2\": [ 'MacBook Air (13\" Early 2015)' ],");
file.WriteLine("        \"MacBookPro1,1\": [ 'MacBook Pro (15\" Early 2006)' ],");
file.WriteLine("        \"MacBookPro1,2\": [ 'MacBook Pro (17\" Early 2006)' ],");
file.WriteLine("        \"MacBookPro2,1\": [ 'MacBook Pro (17\" Late 2006)' ],");
file.WriteLine("        \"MacBookPro2,2\": [ 'MacBook Pro (15\" Late 2006)' ],");
file.WriteLine("        \"MacBookPro3,1\": [ 'MacBook Pro (15\" Mid 2007)', 'MacBook Pro (17\" Late 2007)' ],");
file.WriteLine("        \"MacBookPro4,1\": [ 'MacBook Pro (17\" Early 2008)', 'MacBook Pro (17\" Late 2008)' ],");
file.WriteLine("        \"MacBookPro5,1\": [ 'MacBook Pro (15\" Late 2008)', 'MacBook Pro (15\" Early 2009)', 'MacBook Pro (15\" Mid 2009)' ],");
file.WriteLine("        \"MacBookPro5,2\": [ 'MacBook Pro (17\" Early 2009)', 'MacBook Pro (17\" Mid 2009)' ],");
file.WriteLine("        \"MacBookPro5,3\": [ 'MacBook Pro (15\" Mid 2009)' ],");
file.WriteLine("        \"MacBookPro5,4\": [ 'MacBook Pro (15\" Mid 2009)' ],");
file.WriteLine("        \"MacBookPro5,5\": [ 'MacBook Pro (13\" Mid 2009)' ],");
file.WriteLine("        \"MacBookPro6,1\": [ 'MacBook Pro (17\" Mid 2010)' ],");
file.WriteLine("        \"MacBookPro6,2\": [ 'MacBook Pro (15\" Mid 2010)' ],");
file.WriteLine("        \"MacBookPro7,1\": [ 'MacBook Pro (13\" Mid 2010)' ],");
file.WriteLine("        \"MacBookPro8,1\": [ 'MacBook Pro (13\" Early 2011)', 'MacBook Pro (13\" Late 2011)' ],");
file.WriteLine("        \"MacBookPro8,2\": [ 'MacBook Pro (15\" Early 2011)', 'MacBook Pro (15\" Late 2011)' ],");
file.WriteLine("        \"MacBookPro8,3\": [ 'MacBook Pro (17\" Early 2011)', 'MacBook Pro (17\" Late 2011)' ],");
file.WriteLine("        \"MacBookPro9,1\": [ 'MacBook Pro (15\" Mid 2012)' ],");
file.WriteLine("        \"MacBookPro9,2\": [ 'MacBook Pro (13\" Mid 2012)' ],");
file.WriteLine("        \"MacBookPro10,1\": [ 'MacBook Pro (15\" Mid 2012)', 'MacBook Pro (15\" Early 2013)' ],");
file.WriteLine("        \"MacBookPro10,2\": [ 'MacBook Pro (13\" Late 2012)', 'MacBook Pro (13\" Early 2013)' ],");
file.WriteLine("        \"MacBookPro11,1\": [ 'MacBook Pro (13\" Late 2013)', 'MacBook Pro (13\" Mid 2014)' ],");
file.WriteLine("        \"MacBookPro11,2\": [ 'MacBook Pro (15\" Late 2013)', 'MacBook Pro (15\" Mid 2014)' ],");
file.WriteLine("        \"MacBookPro11,3\": [ 'MacBook Pro (15\" Late 2013)', 'MacBook Pro (15\" Mid 2014)' ],");
file.WriteLine("        \"MacBookPro12,1\": [ 'MacBook Pro (13\" Early 2015)' ],");
file.WriteLine("        \"MacBookPro11,4\": [ 'MacBook Pro (15 \" Mid 2015)' ],");
file.WriteLine("        \"MacBookPro11,5\": [ 'MacBook Pro (15\" Mid 2015)' ]");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        acer: [ \"Aspier XXXX\", \"Aspire XXXX\", \"Aspire xxxx\", \"AS XXXX\", \"ChiefRiver Platform\", \"Columbia\", \"Sabine Platform\", \"None\", \"T\", \"Tahoe\", \"YYpire 5600\", \"YYpire 5920G\", \"YYTÿÿÿÿÿÿÿÿÿÿÿÿ\", \"YYÿÿÿÿÿÿÿÿÿÿÿÿÿ\" ],");
file.WriteLine("        advance: [ \"Default\", \"Modelo A\" ],");
file.WriteLine("        aquarius: [ \"Cmp NS735\", \"Pro, Std, Elt Series\", \"Intel powered classmate PC\", \"NE405\" ],");
file.WriteLine("        bgh: [ \"BGH e-Nova\", \"e-Nova\", \"POSITIVO BGH\" ],");
file.WriteLine("        bytespeed: [ \"V10IS\" ],");
file.WriteLine("        cce: [ \"Capella & IbexPeak-M Chipset\" ],");
file.WriteLine("        czc: [ \"czc\" ],");
file.WriteLine("        dell: [ \"Vostro 3558tion\" ],");
file.WriteLine("        digitron: [ \"B14HM21\" ],");
file.WriteLine("        dixonsxp: [ \"00000000000000000\", \"Calistoga & ICH7M Chipset\", \"Crestline+ICH8M\" ],");
file.WriteLine("        dns: [ \"ChiefRiver Platform\" ],");
file.WriteLine("        \"epson-direct\": [ \"Endeavor NJ2100\" ],");
file.WriteLine("        fujitsu: [ \"00000000\", \"0000000000\", \"00000000000000000\" ],");
file.WriteLine("        giada: [ \"CedarTrail Platform\" ],");
file.WriteLine("        goclever: [ \"INSIGNIA 800 WIN\" ],");
file.WriteLine("        google: [ \"Falco\", \"Peppy\" ],");
file.WriteLine("        hasee: [ \"Calistoga & ICH7M Chipset\" ],");
file.WriteLine("        \"high-tech\": [ \"Shift\" ],");
file.WriteLine("        hp: [ \"0\", \"000\", \"00000000000000000000000000000000\", \"1000\", \"Pavilion dvxxxx\", \"ProBook -----\" ],");
file.WriteLine("        hyrican: [ \"VN800\" ],");
file.WriteLine("        iball: [ \"V8T\" ],");
file.WriteLine("        intel: [ \"Calpella Platform\", \"CedarTrail\", \"Cedar Trail\", \"CedarTrail Platform\", \"ChiefRiver Platform\", \"HuronRiver Platform\", \"OakTrail Platform\", \"Pine Trail - M\", \"Pine Trail - M CRB\", \"SandyBridge Platform\", \"SharkBay Platform\", \"Skylake Platform\" ],");
file.WriteLine("        isonic: [ \"ISO-91010\", \"ISO-A1005\" ],");
file.WriteLine("        \"jp-sa-couto\": [ \"Intel powered classmate PC\" ],");
file.WriteLine("        jumper: [ \"JUMPER\" ],");
file.WriteLine("        \"k-systems\": [ \"1234\", \"Crestline+ICH8M\" ],");
file.WriteLine("        kraftway: [ \"GEG\" ],");
file.WriteLine("        lenovo: [ \"00000000000000000000000000000000\", \"0.1\", \"C-Notebook XXXX\", \"Convertible\", \"INVALID\", \"Product\", \"Rev 1\", \"Rev 1.0\", 'ThinkPad Edge 13\"\"IAL#', \"ÿÿÿÿÿÿÿU410ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\", \"ÿÿÿÿÿÿÿZ580ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\" ],");
file.WriteLine("        \"llc-avangard\": [ \"Expertline notebook\" ],");
file.WriteLine("        maguay: [ \"MYWAY\" ],");
file.WriteLine("        medion: [ \"To be filled by O.E.M.\" ],");
file.WriteLine("        microboard: [ \"Cantiga & ICH9M Chipset\", \"T100\" ],");
file.WriteLine("        mipi: [ \"Mini PC\" ],");
file.WriteLine("        msi: [ \"Calpella platform\", \"To be filled by O.E.M.\" ],");
file.WriteLine("        mugen: [ \"mugen\" ],");
file.WriteLine("        nec: [ \"00000000000000000000000\" ],");
file.WriteLine("        neo: [ \"Basic\", \"Elan L5750 Series\", \"NeoNBK\" ],");
file.WriteLine("        noname: [ \"223 Series\", \"255/259 Series\", \"A01 platform\", \"BayTrail\", \"BONEFISH\", \"C93i\", \"CherryTrail\", \"ChiefRiver Platform\", \"Default string\", \"E450\", \"EM200\", \"Generic\", \"H34\", \"KENNEX\", \"KN1\", \"LM1W\", \"M31EI Series\", \"Nobilis\", \"None\", \"Notebook\", \"N/A\", \"ODM\", \"oem\", \"Parallels Virtual Platform\", \"Patriot\", \"PCSMART\", \"Positivo BGH\", \"Pro Tab 7\", \"PS-3315\", \"PS-3316\", \"S16\", \"S62H\", \"S96S\", \"Spring Peak\", \"To Be Filled By O.E.M.\", \"To Be Filled by O.E.M.\", \"To be filled by O.E.M.\", \"Turbo X\", \"V5\", \"W115\", \"X20IA Series\", \"Z96FM\", \"Z96J\", \"Z96JS\", \"Z97V\" ],");
file.WriteLine("        \"notion-ink\": [ \"CN8I8955G\" ],");
file.WriteLine("        \"packard-bell\": [ \"00000000000000000000000\" ],");
file.WriteLine("        \"pc-smart\": [ \"LAPTOP\" ],");
file.WriteLine("        philco: [ \"TO be filled by O.E.M\" ],");
file.WriteLine("        positivo: [ \"POS\" ],");
file.WriteLine("        quanta: [ \"00000000000000000\" ],");
file.WriteLine("        render: [ \"Pinetrail\", \"Pine trail\" ],");
file.WriteLine("        rm: [ \"RM\" ],");
file.WriteLine("        samsung: [ \"3\", \"Aquila Slim Platform\", \"Galaxy TabPro S\", \"Mobile System\" ],");
file.WriteLine("        sony: [ \"VAIO Reserved\" ],");
file.WriteLine("        tcl: [ \"T51\" ],");
file.WriteLine("        topstar: [ \"Cantiga & ICH9M Chipset\" ],");
file.WriteLine("        toshiba: [ \"000000\", \"00000000000000000000\", \"SandyBridge Platform\", \"To Be Filled By O.E.M.\", \"To be filled by O.E.M.\" ],");
file.WriteLine("        vestel: [ \"Calistoga & ICH7M Chipset\" ],");
file.WriteLine("        yekani: [ \"Intel (R) Education Tablet\" ],");
file.WriteLine("        zet: [ \"To be filled by O.E.M.\" ],");
file.WriteLine("        zoostorm: [ \"Cantiga & ICH9M Chipset\" ]");
file.WriteLine("    };");
file.WriteLine("}, , , , , , , , , , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    Object.defineProperty(exports, \"__esModule\", {");
file.WriteLine("        value: !0");
file.WriteLine("    });");
file.WriteLine("    var baseTimestamp = Date.UTC(1601, 0, 1);");
file.WriteLine("    exports.fileTimeToDate = function(fileTime) {");
file.WriteLine("        return new Date(baseTimestamp + fileTime / 1e4);");
file.WriteLine("    }, exports.dateToFileTime = function(date) {");
file.WriteLine("        return 1e4 * (date.getTime() - baseTimestamp);");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getPartnerInfo = exports.checkSoftInstalled = undefined;");
file.WriteLine("    var _getDiagnostics = __webpack_require__(69), _getDiagnostics2 = _interopRequireDefault(_getDiagnostics), _partnerSoft = __webpack_require__(253), _partnerSoft2 = _interopRequireDefault(_partnerSoft), installedSoftCache = void 0, getInstalledSoft = function() {");
file.WriteLine("        if (!installedSoftCache) installedSoftCache = (0, _getDiagnostics2[\"default\"])(\"soft\").Software[\"Installed Software\"];");
file.WriteLine("        return installedSoftCache;");
file.WriteLine("    };");
file.WriteLine("    exports.checkSoftInstalled = function(nameReg, installedSoft) {");
file.WriteLine("        if (!installedSoft) installedSoft = getInstalledSoft();");
file.WriteLine("        return installedSoft.some(function(soft) {");
file.WriteLine("            return nameReg.test(soft.Program);");
file.WriteLine("        });");
file.WriteLine("    }, exports.getPartnerInfo = function(soft) {");
file.WriteLine("        var pSoft = _partnerSoft2[\"default\"].find(function(_ref) {");
file.WriteLine("            return _ref.nameReg.test(soft.Program);");
file.WriteLine("        });");
file.WriteLine("        if (!pSoft) return {");
file.WriteLine("            isPartner: !1");
file.WriteLine("        };");
file.WriteLine("        if (!pSoft.getClids) return {");
file.WriteLine("            title: pSoft.title,");
file.WriteLine("            isPartner: !0");
file.WriteLine("        };");
file.WriteLine("        var clids = pSoft.getClids();");
file.WriteLine("        return {");
file.WriteLine("            title: pSoft.title,");
file.WriteLine("            clids: clids,");
file.WriteLine("            isPartner: clids.some(function(clid) {");
file.WriteLine("                return pSoft.clidsReg.test(clid);");
file.WriteLine("            })");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _os = __webpack_require__(15), _registry = __webpack_require__(27), _getNotebookVendor = __webpack_require__(181), _getNotebookVendor2 = _interopRequireDefault(_getNotebookVendor), _getNotebookModel = __webpack_require__(180), _getNotebookModel2 = _interopRequireDefault(_getNotebookModel);");
file.WriteLine("    (0, _registry.RegWrite)(\"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\services\\\\eventlog\\\\Microsoft-Windows-Diagnostics-Performance/Operational\\\\\", \"\");");
file.WriteLine("    var parseWinDate = function(date) {");
file.WriteLine("        return new Date(parseInt(date.slice(0, 4), 10), parseInt(date.slice(4, 6), 10) - 1, parseInt(date.slice(6, 8), 10), parseInt(date.slice(8, 10), 10), parseInt(date.slice(10, 12), 10), parseInt(date.slice(12, 14), 10));");
file.WriteLine("    }, convertToWinDate = function(date) {");
file.WriteLine("        return date.getFullYear() + \"\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + (\"0\" + date.getDate()).slice(-2) + (\"0\" + date.getHours()).slice(-2) + (\"0\" + date.getMinutes()).slice(-2) + (\"0\" + date.getSeconds()).slice(-2) + \".\" + (\"00000\" + date.getMilliseconds()).slice(-6) + \"+\" + date.getTimezoneOffset();");
file.WriteLine("    };");
file.WriteLine("    exports[\"default\"] = {");
file.WriteLine("        Computer: {");
file.WriteLine("            Summary: {");
file.WriteLine("                type: \"object\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                groups: [ {");
file.WriteLine("                    name: \"Computer\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Manufacturer\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystemProduct\",");
file.WriteLine("                            fields: [ \"Vendor\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref) {");
file.WriteLine("                            var Vendor = _ref.Vendor;");
file.WriteLine("                            return (0, _getNotebookVendor2[\"default\"])(Vendor);");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Model\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystemProduct\",");
file.WriteLine("                            fields: [ \"Vendor\", \"Name\", \"Version\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref2) {");
file.WriteLine("                            var Vendor = _ref2.Vendor, Name = _ref2.Name, Version = _ref2.Version;");
file.WriteLine("                            return (0, _getNotebookModel2[\"default\"])({");
file.WriteLine("                                Vendor: (0, _getNotebookVendor2[\"default\"])(Vendor),");
file.WriteLine("                                Name: Name,");
file.WriteLine("                                Version: Version");
file.WriteLine("                            });");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Computer Type\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystem\",");
file.WriteLine("                            fields: [ \"SystemType\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Operating System\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"Caption\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Service Pack\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"CSDVersion\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Internet Explorer\",");
file.WriteLine("                        reg: {");
file.WriteLine("                            source: [ \"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\svcVersion\", \"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Version\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Computer Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystem\",");
file.WriteLine("                            fields: [ \"Caption\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"User Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystem\",");
file.WriteLine("                            fields: [ \"UserName\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Logon Domain\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystem\",");
file.WriteLine("                            fields: [ \"Domain\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Date / Time\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"LocalDateTime\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref3) {");
file.WriteLine("                            var LocalDateTime = _ref3.LocalDateTime;");
file.WriteLine("                            return parseWinDate(LocalDateTime).toString();");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Temperature\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"CPU Temperature\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\OpenHardwareMonitor:Sensor\",");
file.WriteLine("                            fields: [ \"Value\", \"Identifier\" ],");
file.WriteLine("                            filter: function(_ref4) {");
file.WriteLine("                                return /\\/(intel|amd|generic)cpu\\/.*?\\/temperature\\/.*?/.test(_ref4.Identifier);");
file.WriteLine("                            }");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref5) {");
file.WriteLine("                            var Value = _ref5.Value, formatedValue = Math.ceil(Value);");
file.WriteLine("                            if (formatedValue >= 0) return formatedValue + \" °C\"; else return null;");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"GPU Temperature\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\OpenHardwareMonitor:Sensor\",");
file.WriteLine("                            fields: [ \"Value\", \"Name\", \"SensorType\" ],");
file.WriteLine("                            filter: function(_ref6) {");
file.WriteLine("                                var Name = _ref6.Name, SensorType = _ref6.SensorType;");
file.WriteLine("                                return 0 === Name.indexOf(\"GPU\") && \"Temperature\" === SensorType;");
file.WriteLine("                            }");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref7) {");
file.WriteLine("                            var Value = _ref7.Value, formatedValue = Math.ceil(Value);");
file.WriteLine("                            if (formatedValue >= 0) return formatedValue + \" °C\"; else return null;");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Motherboard Temperature\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\OpenHardwareMonitor:Sensor\",");
file.WriteLine("                            fields: [ \"Value\", \"Name\", \"SensorType\" ],");
file.WriteLine("                            filter: function(_ref8) {");
file.WriteLine("                                var Name = _ref8.Name, SensorType = _ref8.SensorType;");
file.WriteLine("                                return 0 === Name.indexOf(\"System\") && \"Temperature\" === SensorType;");
file.WriteLine("                            }");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref9) {");
file.WriteLine("                            var Value = _ref9.Value, formatedValue = Math.ceil(Value);");
file.WriteLine("                            if (formatedValue >= 0) return formatedValue + \" °C\"; else return null;");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"HDD Temperature\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\OpenHardwareMonitor:Sensor\",");
file.WriteLine("                            fields: [ \"Value\", \"Name\", \"SensorType\" ],");
file.WriteLine("                            filter: function(_ref10) {");
file.WriteLine("                                var Name = _ref10.Name, SensorType = _ref10.SensorType;");
file.WriteLine("                                return 0 === Name.indexOf(\"Temperature\") && \"Temperature\" === SensorType;");
file.WriteLine("                            }");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref11) {");
file.WriteLine("                            var Value = _ref11.Value, formatedValue = Math.ceil(Value);");
file.WriteLine("                            if (formatedValue >= 0) return formatedValue + \" °C\"; else return null;");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Motherboard\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"CPU Type\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Processor\",");
file.WriteLine("                            fields: [ \"Name\", \"MaxClockSpeed\", \"NumberOfCores\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref12) {");
file.WriteLine("                            return _ref12.Name + \", \" + _ref12.MaxClockSpeed + \" MHz, \" + _ref12.NumberOfCores + \"-core\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Motherboard Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_BaseBoard\",");
file.WriteLine("                            fields: [ \"Name\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"System Memory\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystem\",");
file.WriteLine("                            fields: [ \"TotalPhysicalMemory\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref13) {");
file.WriteLine("                            var TotalPhysicalMemory = _ref13.TotalPhysicalMemory;");
file.WriteLine("                            return Math.ceil(parseFloat(TotalPhysicalMemory) / 1024 / 1024) + \" MB\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"BIOS Type\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_BIOS\",");
file.WriteLine("                            fields: [ \"SMBIOSBIOSVersion\", \"ReleaseDate\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref14) {");
file.WriteLine("                            var SMBIOSBIOSVersion = (_ref14.Manufacturer, _ref14.SMBIOSBIOSVersion), ReleaseDate = _ref14.ReleaseDate;");
file.WriteLine("                            return SMBIOSBIOSVersion + \" (\" + [ ReleaseDate.slice(0, 4), ReleaseDate.slice(4, 6), ReleaseDate.slice(6, 8) ].join(\".\") + \")\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Display\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Video Adapter\",");
file.WriteLine("                        targets: [ \"check\" ],");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_VideoController\",");
file.WriteLine("                            fields: [ \"Name\", \"AdapterRAM\", \"ConfigManagerErrorCode\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref15) {");
file.WriteLine("                            var Name = _ref15.Name, AdapterRAM = _ref15.AdapterRAM, ConfigManagerErrorCode = _ref15.ConfigManagerErrorCode, res = Name;");
file.WriteLine("                            if (AdapterRAM > 0) res += \" (\" + Math.ceil(parseFloat(AdapterRAM) / 1024 / 1024) + \" MB)\";");
file.WriteLine("                            if (ConfigManagerErrorCode) res += \" (Status: ERROR)\";");
file.WriteLine("                            return res;");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Monitor\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_DesktopMonitor\",");
file.WriteLine("                            fields: [ \"Name\", \"MonitorType\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref16) {");
file.WriteLine("                            var Name = _ref16.Name;");
file.WriteLine("                            return _ref16.MonitorType + \" \" + Name;");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Multimedia\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Audio Adapter\",");
file.WriteLine("                        targets: [ \"check\" ],");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_SoundDevice\",");
file.WriteLine("                            fields: [ \"Name\", \"ConfigManagerErrorCode\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref17) {");
file.WriteLine("                            var Name = _ref17.Name, ConfigManagerErrorCode = _ref17.ConfigManagerErrorCode, res = Name;");
file.WriteLine("                            if (ConfigManagerErrorCode) res += \" (Status: ERROR)\";");
file.WriteLine("                            return res;");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Storage\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"IDE Controller\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_IDEController\",");
file.WriteLine("                            fields: [ \"Caption\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Disk Drive\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_DiskDrive\",");
file.WriteLine("                            fields: [ \"Caption\", \"Status\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref18) {");
file.WriteLine("                            return _ref18.Caption + \" (SMART \" + _ref18.Status + \")\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Optical Drive\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_CDROMDrive\",");
file.WriteLine("                            fields: [ \"Caption\" ]");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Partitions\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Partition\",");
file.WriteLine("                        targets: [ \"targeting\" ],");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_LogicalDisk\",");
file.WriteLine("                            fields: [ \"Name\", \"FileSystem\", \"Size\", \"FreeSpace\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref19) {");
file.WriteLine("                            var Name = _ref19.Name, FileSystem = _ref19.FileSystem, Size = _ref19.Size, FreeSpace = _ref19.FreeSpace;");
file.WriteLine("                            return Name + \" (\" + FileSystem + \") \" + Math.ceil(parseFloat(Size) / 1024 / 1024 / 1024 * 100) / 100 + \" GB (\" + Math.ceil(parseFloat(FreeSpace) / 1024 / 1024 / 1024 * 100) / 100 + \" GB free)\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Input\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Keyboard\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Keyboard\",");
file.WriteLine("                            fields: [ \"Description\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Mouse\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_PointingDevice\",");
file.WriteLine("                            fields: [ \"Description\" ]");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Network\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Network Adapter\",");
file.WriteLine("                        targets: [ \"check\" ],");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_NetworkAdapter\",");
file.WriteLine("                            fields: [ \"Description\", \"MACAddress\", \"PhysicalAdapter\", \"ConfigManagerErrorCode\" ],");
file.WriteLine("                            filter: function(_ref20) {");
file.WriteLine("                                return !1 !== _ref20.PhysicalAdapter;");
file.WriteLine("                            }");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref21) {");
file.WriteLine("                            var Description = _ref21.Description, MACAddress = _ref21.MACAddress, ConfigManagerErrorCode = _ref21.ConfigManagerErrorCode, res = Description;");
file.WriteLine("                            if (MACAddress) res += \" (MAC \" + MACAddress + \")\";");
file.WriteLine("                            if (ConfigManagerErrorCode && 22 !== ConfigManagerErrorCode) res += \" (Status: ERROR)\";");
file.WriteLine("                            return res;");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Peripherals\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Printer\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Printer\",");
file.WriteLine("                            fields: [ \"Name\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"USB Controller\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_USBController\",");
file.WriteLine("                            fields: [ \"Name\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Battery\",");
file.WriteLine("                        multi: !0,");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Battery\",");
file.WriteLine("                            fields: [ \"Name\" ]");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"DMI\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"DMI BIOS Vendor\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_BIOS\",");
file.WriteLine("                            fields: [ \"Manufacturer\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI BIOS Version\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_BIOS\",");
file.WriteLine("                            fields: [ \"SMBIOSBIOSVersion\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI System Manufacturer\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystemProduct\",");
file.WriteLine("                            fields: [ \"Vendor\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI System Product\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystemProduct\",");
file.WriteLine("                            fields: [ \"Name\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI System Version\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystemProduct\",");
file.WriteLine("                            fields: [ \"Version\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI System Serial Number\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystemProduct\",");
file.WriteLine("                            fields: [ \"IdentifyingNumber\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI System UUID\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystemProduct\",");
file.WriteLine("                            fields: [ \"UUID\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Motherboard Manufacturer\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Baseboard\",");
file.WriteLine("                            fields: [ \"Manufacturer\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Motherboard Product\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Baseboard\",");
file.WriteLine("                            fields: [ \"Product\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Motherboard Version\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Baseboard\",");
file.WriteLine("                            fields: [ \"Version\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Motherboard Serial Number\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Baseboard\",");
file.WriteLine("                            fields: [ \"SerialNumber\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Chassis Manufacturer\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_SystemEnclosure\",");
file.WriteLine("                            fields: [ \"Manufacturer\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Chassis Version\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_SystemEnclosure\",");
file.WriteLine("                            fields: [ \"Version\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Chassis Serial Number\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_SystemEnclosure\",");
file.WriteLine("                            fields: [ \"SerialNumber\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Chassis Asset Tag\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_SystemEnclosure\",");
file.WriteLine("                            fields: [ \"SMBIOSAssetTag\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"DMI Chassis Type\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_SystemEnclosure\",");
file.WriteLine("                            fields: [ \"ChassisTypes\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref22) {");
file.WriteLine("                            var ChassisTypes = _ref22.ChassisTypes;");
file.WriteLine("                            if (ChassisTypes) switch (ChassisTypes[0]) {");
file.WriteLine("                              case 1:");
file.WriteLine("                                return \"Other\";");
file.WriteLine("");
file.WriteLine("                              case 2:");
file.WriteLine("                                return \"Unknown\";");
file.WriteLine("");
file.WriteLine("                              case 3:");
file.WriteLine("                                return \"Desktop\";");
file.WriteLine("");
file.WriteLine("                              case 4:");
file.WriteLine("                                return \"Low Profile Desktop\";");
file.WriteLine("");
file.WriteLine("                              case 5:");
file.WriteLine("                                return \"Pizza Box\";");
file.WriteLine("");
file.WriteLine("                              case 6:");
file.WriteLine("                                return \"Mini Tower\";");
file.WriteLine("");
file.WriteLine("                              case 7:");
file.WriteLine("                                return \"Tower\";");
file.WriteLine("");
file.WriteLine("                              case 8:");
file.WriteLine("                                return \"Portable\";");
file.WriteLine("");
file.WriteLine("                              case 9:");
file.WriteLine("                                return \"Laptop\";");
file.WriteLine("");
file.WriteLine("                              case 10:");
file.WriteLine("                                return \"Notebook\";");
file.WriteLine("");
file.WriteLine("                              case 11:");
file.WriteLine("                                return \"Hand Held\";");
file.WriteLine("");
file.WriteLine("                              case 12:");
file.WriteLine("                                return \"Docking Station\";");
file.WriteLine("");
file.WriteLine("                              case 13:");
file.WriteLine("                                return \"All in One\";");
file.WriteLine("");
file.WriteLine("                              case 14:");
file.WriteLine("                                return \"Sub Notebook\";");
file.WriteLine("");
file.WriteLine("                              case 15:");
file.WriteLine("                                return \"Space-Saving\";");
file.WriteLine("");
file.WriteLine("                              case 16:");
file.WriteLine("                                return \"Lunch Box\";");
file.WriteLine("");
file.WriteLine("                              case 17:");
file.WriteLine("                                return \"Main System Chassis\";");
file.WriteLine("");
file.WriteLine("                              case 18:");
file.WriteLine("                                return \"Expansion Chassis\";");
file.WriteLine("");
file.WriteLine("                              case 19:");
file.WriteLine("                                return \"SubChassis\";");
file.WriteLine("");
file.WriteLine("                              case 20:");
file.WriteLine("                                return \"Bus Expansion Chassis\";");
file.WriteLine("");
file.WriteLine("                              case 21:");
file.WriteLine("                                return \"Peripheral Chassis\";");
file.WriteLine("");
file.WriteLine("                              case 22:");
file.WriteLine("                                return \"Storage Chassis\";");
file.WriteLine("");
file.WriteLine("                              case 23:");
file.WriteLine("                                return \"Rack Mount Chassis\";");
file.WriteLine("");
file.WriteLine("                              case 24:");
file.WriteLine("                                return \"Sealed-Case PC\";");
file.WriteLine("                            }");
file.WriteLine("                            return \"\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                } ]");
file.WriteLine("            },");
file.WriteLine("            \"Power Management\": {");
file.WriteLine("                type: \"object\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                groups: [ {");
file.WriteLine("                    name: \"Power Management Properties\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Current Power Source\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\wmi:BatteryStatus\",");
file.WriteLine("                            fields: [ \"PowerOnline\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref23) {");
file.WriteLine("                            return !1 === _ref23.PowerOnline ? \"Battery\" : \"AC Line\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Battery Status\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Battery\",");
file.WriteLine("                            fields: [ \"EstimatedChargeRemaining\", \"BatteryStatus\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref24) {");
file.WriteLine("                            var EstimatedChargeRemaining = _ref24.EstimatedChargeRemaining, BatteryStatus = _ref24.BatteryStatus, res = EstimatedChargeRemaining + \"%\";");
file.WriteLine("                            switch (BatteryStatus) {");
file.WriteLine("                              case 1:");
file.WriteLine("                                return res + \" (Other)\";");
file.WriteLine("");
file.WriteLine("                              case 2:");
file.WriteLine("                                return res + \" (Unknown)\";");
file.WriteLine("");
file.WriteLine("                              case 3:");
file.WriteLine("                                return res + \" (Fully Charged)\";");
file.WriteLine("");
file.WriteLine("                              case 4:");
file.WriteLine("                                return res + \" (Low)\";");
file.WriteLine("");
file.WriteLine("                              case 5:");
file.WriteLine("                                return res + \" (Critical)\";");
file.WriteLine("");
file.WriteLine("                              case 6:");
file.WriteLine("                                return res + \" (Charging)\";");
file.WriteLine("");
file.WriteLine("                              case 7:");
file.WriteLine("                                return res + \" (Charging and High)\";");
file.WriteLine("");
file.WriteLine("                              case 8:");
file.WriteLine("                                return res + \" (Charging and Low)\";");
file.WriteLine("");
file.WriteLine("                              case 9:");
file.WriteLine("                                return res + \" (Charging and Critical)\";");
file.WriteLine("");
file.WriteLine("                              case 10:");
file.WriteLine("                                return res + \" (Undefined)\";");
file.WriteLine("");
file.WriteLine("                              case 11:");
file.WriteLine("                                return res + \" (Partially Charged)\";");
file.WriteLine("                            }");
file.WriteLine("                            return res;");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Remaining Battery Lifetime\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Battery\",");
file.WriteLine("                            fields: [ \"EstimatedRunTime\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref25) {");
file.WriteLine("                            var EstimatedRunTime = _ref25.EstimatedRunTime;");
file.WriteLine("                            if (parseInt(EstimatedRunTime, 10) > 7200) return \"Unknown\"; else return EstimatedRunTime + \" minutes\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Battery Properties\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Device Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Battery\",");
file.WriteLine("                            fields: [ \"Name\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Manufacturer\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_PortableBattery\",");
file.WriteLine("                            fields: [ \"Manufacturer\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Unique ID\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Battery\",");
file.WriteLine("                            fields: [ \"DeviceID\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Battery Type\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_Battery\",");
file.WriteLine("                            fields: [ \"Chemistry\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref26) {");
file.WriteLine("                            switch (_ref26.Chemistry) {");
file.WriteLine("                              case 1:");
file.WriteLine("                                return \"Other\";");
file.WriteLine("");
file.WriteLine("                              case 2:");
file.WriteLine("                                return \"Unknown\";");
file.WriteLine("");
file.WriteLine("                              case 3:");
file.WriteLine("                                return \"Lead Acid\";");
file.WriteLine("");
file.WriteLine("                              case 4:");
file.WriteLine("                                return \"Nickel Cadmium\";");
file.WriteLine("");
file.WriteLine("                              case 5:");
file.WriteLine("                                return \"Nickel Metal Hydride\";");
file.WriteLine("");
file.WriteLine("                              case 6:");
file.WriteLine("                                return \"Lithium-ion\";");
file.WriteLine("");
file.WriteLine("                              case 7:");
file.WriteLine("                                return \"Zinc air\";");
file.WriteLine("");
file.WriteLine("                              case 8:");
file.WriteLine("                                return \"Lithium Polymer\";");
file.WriteLine("                            }");
file.WriteLine("                            return \"\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Designed Capacity\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\wmi:BatteryStaticData\",");
file.WriteLine("                            fields: [ \"DesignedCapacity\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref27) {");
file.WriteLine("                            return _ref27.DesignedCapacity + \" mWh\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Fully Charged Capacity\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\wmi:BatteryFullChargedCapacity\",");
file.WriteLine("                            fields: [ \"FullChargedCapacity\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref28) {");
file.WriteLine("                            return _ref28.FullChargedCapacity + \" mWh\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Current Capacity\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\wmi:BatteryStatus\",");
file.WriteLine("                            fields: [ \"RemainingCapacity\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref29) {");
file.WriteLine("                            return _ref29.RemainingCapacity + \" mWh\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Battery Voltage\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\wmi:BatteryStatus\",");
file.WriteLine("                            fields: [ \"Voltage\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref30) {");
file.WriteLine("                            var Voltage = _ref30.Voltage;");
file.WriteLine("                            return parseInt(Voltage, 10) / 1e3 + \" V\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Power State\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"ROOT\\\\wmi:BatteryStatus\",");
file.WriteLine("                            fields: [ \"PowerOnline\", \"Charging\", \"Discharging\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref31) {");
file.WriteLine("                            var PowerOnline = _ref31.PowerOnline, Charging = _ref31.Charging, Discharging = _ref31.Discharging, res = [];");
file.WriteLine("                            if (PowerOnline) res.push(\"AC Line\");");
file.WriteLine("                            if (Charging) res.push(\"Charging\");");
file.WriteLine("                            if (Discharging) res.push(\"Discharging\");");
file.WriteLine("                            return res.join(\", \");");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                } ]");
file.WriteLine("            }");
file.WriteLine("        },");
file.WriteLine("        \"Operating System\": {");
file.WriteLine("            \"Operating System\": {");
file.WriteLine("                type: \"object\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                groups: [ {");
file.WriteLine("                    name: \"Operating System Properties\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"OS Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"Caption\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Language\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"MUILanguages\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref32) {");
file.WriteLine("                            return _ref32.MUILanguages.join(\",\");");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Kernel Type\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"BuildType\", \"OSArchitecture\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref33) {");
file.WriteLine("                            return _ref33.BuildType + \" (\" + _ref33.OSArchitecture + \")\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Version\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"Version\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Service Pack\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"CSDVersion\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Installation Date\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"InstallDate\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref34) {");
file.WriteLine("                            var InstallDate = _ref34.InstallDate;");
file.WriteLine("                            return parseWinDate(InstallDate).toString();");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Root\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"WindowsDirectory\" ]");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"License Information\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Registered Owner\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"RegisteredUser\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Registered Organization\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"Organization\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Product ID\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"SerialNumber\" ]");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Current Session\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Computer Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"CSName\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"User Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystem\",");
file.WriteLine("                            fields: [ \"UserName\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Logon Domain\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_ComputerSystem\",");
file.WriteLine("                            fields: [ \"Domain\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"UpTime\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"LastBootUpTime\", \"LocalDateTime\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref35) {");
file.WriteLine("                            var LastBootUpTime = _ref35.LastBootUpTime, LocalDateTime = _ref35.LocalDateTime, total = Math.ceil((parseWinDate(LocalDateTime) - parseWinDate(LastBootUpTime)) / 1e3), days = Math.floor(total / 86400), hours = Math.floor((total - 86400 * days) / 3600), minutes = Math.floor((total - 86400 * days - 3600 * hours) / 60);");
file.WriteLine("                            return total + \" sec (\" + days + \" d, \" + hours + \" h, \" + minutes + \" m, \" + (total - 86400 * days - 3600 * hours - 60 * minutes) + \" s)\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Last Reboot Reason\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: 'Win32_NTLogEvent WHERE Logfile = \"System\" AND (EventCode = 1074 OR EventCode = 1001 OR EventCode = 6008)',");
file.WriteLine("                            fields: [ \"EventCode\", \"Message\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref36) {");
file.WriteLine("                            var EventCode = _ref36.EventCode, Message = _ref36.Message;");
file.WriteLine("                            switch (EventCode) {");
file.WriteLine("                              case 1074:");
file.WriteLine("                                return \"CORRECT: \" + Message;");
file.WriteLine("");
file.WriteLine("                              case 6008:");
file.WriteLine("                                return \"UNEXPECTED: \" + Message;");
file.WriteLine("");
file.WriteLine("                              case 1001:");
file.WriteLine("                                return \"BSOD: \" + Message;");
file.WriteLine("");
file.WriteLine("                              default:");
file.WriteLine("                                return \"UNKNOWN: \" + Message;");
file.WriteLine("                            }");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }, {");
file.WriteLine("                    name: \"Last Boot Speed\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Type\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: 'Win32_NTLogEvent WHERE Logfile = \"Microsoft-Windows-Diagnostics-Performance/Operational\" AND EventCode = 100',");
file.WriteLine("                            fields: [ \"Type\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Boot Time\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: 'Win32_NTLogEvent WHERE Logfile = \"Microsoft-Windows-Diagnostics-Performance/Operational\" AND EventCode = 100',");
file.WriteLine("                            fields: [ \"InsertionStrings\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref37) {");
file.WriteLine("                            return _ref37.InsertionStrings[5];");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Boot User Profile Processing Time\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: 'Win32_NTLogEvent WHERE Logfile = \"Microsoft-Windows-Diagnostics-Performance/Operational\" AND EventCode = 100',");
file.WriteLine("                            fields: [ \"InsertionStrings\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref38) {");
file.WriteLine("                            return _ref38.InsertionStrings[15];");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Boot Post Boot Time\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: 'Win32_NTLogEvent WHERE Logfile = \"Microsoft-Windows-Diagnostics-Performance/Operational\" AND EventCode = 100',");
file.WriteLine("                            fields: [ \"InsertionStrings\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref39) {");
file.WriteLine("                            return _ref39.InsertionStrings[19];");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Main Path Boot Time\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: 'Win32_NTLogEvent WHERE Logfile = \"Microsoft-Windows-Diagnostics-Performance/Operational\" AND EventCode = 100',");
file.WriteLine("                            fields: [ \"InsertionStrings\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref40) {");
file.WriteLine("                            return _ref40.InsertionStrings[6];");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Boot Num Startup Apps\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: 'Win32_NTLogEvent WHERE Logfile = \"Microsoft-Windows-Diagnostics-Performance/Operational\" AND EventCode = 100',");
file.WriteLine("                            fields: [ \"InsertionStrings\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref41) {");
file.WriteLine("                            return _ref41.InsertionStrings[18];");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                } ]");
file.WriteLine("            },");
file.WriteLine("            Processes: {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: \"Win32_Process\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Process Name\",");
file.WriteLine("                        field: \"Caption\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Process File Name\",");
file.WriteLine("                        field: \"ExecutablePath\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Used Memory\",");
file.WriteLine("                        field: \"WorkingSetSize\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            return Math.ceil(parseFloat(v) / 1024) + \" KB\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Used Swap\",");
file.WriteLine("                        field: \"VirtualSize\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            return Math.ceil(parseFloat(v) / 1024) + \" KB\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            },");
file.WriteLine("            Services: {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: \"Win32_Service\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Service Name\",");
file.WriteLine("                        field: \"Name\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Service Description\",");
file.WriteLine("                        field: \"Description\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Path Name\",");
file.WriteLine("                        field: \"PathName\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Type\",");
file.WriteLine("                        field: \"ServiceType\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"State\",");
file.WriteLine("                        field: \"State\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Account\",");
file.WriteLine("                        field: \"StartName\"");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            },");
file.WriteLine("            UpTime: {");
file.WriteLine("                type: \"object\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                groups: [ {");
file.WriteLine("                    name: \"Current Session\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Last Boot Time\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"LastBootUpTime\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref42) {");
file.WriteLine("                            var LastBootUpTime = _ref42.LastBootUpTime;");
file.WriteLine("                            return parseWinDate(LastBootUpTime).toString();");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Current Time\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"LocalDateTime\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref43) {");
file.WriteLine("                            var LocalDateTime = _ref43.LocalDateTime;");
file.WriteLine("                            return parseWinDate(LocalDateTime).toString();");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"UpTime\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"LastBootUpTime\", \"LocalDateTime\" ]");
file.WriteLine("                        },");
file.WriteLine("                        format: function(_ref44) {");
file.WriteLine("                            var LastBootUpTime = _ref44.LastBootUpTime, LocalDateTime = _ref44.LocalDateTime, total = Math.ceil((parseWinDate(LocalDateTime) - parseWinDate(LastBootUpTime)) / 1e3), days = Math.floor(total / 86400), hours = Math.floor((total - 86400 * days) / 3600), minutes = Math.floor((total - 86400 * days - 3600 * hours) / 60);");
file.WriteLine("                            return total + \" sec (\" + days + \" d, \" + hours + \" h, \" + minutes + \" m, \" + (total - 86400 * days - 3600 * hours - 60 * minutes) + \" s)\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                } ]");
file.WriteLine("            },");
file.WriteLine("            \"Weekly Errors\": {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: 'Win32_NTLogEvent WHERE (Type = \"Critical\" OR Type = \"Критический\") AND TimeGenerated > \"' + convertToWinDate(new Date(Date.now() - 6048e5)) + '\"',");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Level\",");
file.WriteLine("                        field: \"LogFile\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Source\",");
file.WriteLine("                        field: \"SourceName\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Code\",");
file.WriteLine("                        field: \"EventCode\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Message\",");
file.WriteLine("                        field: \"Message\"");
file.WriteLine("                    } ]");
file.WriteLine("                },");
file.WriteLine("                format: function(events) {");
file.WriteLine("                    var res = {};");
file.WriteLine("                    events.forEach(function(_ref45) {");
file.WriteLine("                        var Level = _ref45.Level, Source = _ref45.Source, Code = _ref45.Code, Message = _ref45.Message, id = [ Level, Source, Code ].join(\":\");");
file.WriteLine("                        if (res[id]) res[id].Count += 1; else res[id] = {");
file.WriteLine("                            Level: Level,");
file.WriteLine("                            Source: Source,");
file.WriteLine("                            Code: Code,");
file.WriteLine("                            Message: Message,");
file.WriteLine("                            Count: 1");
file.WriteLine("                        };");
file.WriteLine("                    });");
file.WriteLine("                    return Object.values(res);");
file.WriteLine("                }");
file.WriteLine("            },");
file.WriteLine("            \"Daily Errors\": {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: 'Win32_NTLogEvent WHERE (Type = \"Critical\" OR Type = \"Критический\" OR Type = \"Error\" OR Type = \"Ошибка\") AND TimeGenerated > \"' + convertToWinDate(new Date(Date.now() - 864e5)) + '\"',");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Type\",");
file.WriteLine("                        field: \"Type\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Level\",");
file.WriteLine("                        field: \"LogFile\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Source\",");
file.WriteLine("                        field: \"SourceName\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Code\",");
file.WriteLine("                        field: \"EventCode\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Message\",");
file.WriteLine("                        field: \"Message\"");
file.WriteLine("                    } ]");
file.WriteLine("                },");
file.WriteLine("                format: function(events) {");
file.WriteLine("                    var res = {};");
file.WriteLine("                    events.forEach(function(_ref46) {");
file.WriteLine("                        var Type = _ref46.Type, Level = _ref46.Level, Source = _ref46.Source, Code = _ref46.Code, Message = _ref46.Message, id = [ Type, Level, Source, Code ].join(\":\");");
file.WriteLine("                        if (res[id]) res[id].Count += 1; else res[id] = {");
file.WriteLine("                            Type: Type,");
file.WriteLine("                            Level: Level,");
file.WriteLine("                            Source: Source,");
file.WriteLine("                            Code: Code,");
file.WriteLine("                            Message: Message,");
file.WriteLine("                            Count: 1");
file.WriteLine("                        };");
file.WriteLine("                    });");
file.WriteLine("                    return Object.values(res);");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        },");
file.WriteLine("        Display: {");
file.WriteLine("            \"Windows Video\": {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: \"Win32_VideoController\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Description\",");
file.WriteLine("                        field: \"Description\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Memory Size\",");
file.WriteLine("                        field: \"AdapterRAM\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (v >= 0) return Math.ceil(parseFloat(v) / 1024 / 1024) + \" MB\"; else return null;");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Video Mode\",");
file.WriteLine("                        field: \"VideoModeDescription\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Driver Name\",");
file.WriteLine("                        field: \"infSection\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Driver Version\",");
file.WriteLine("                        field: \"DriverVersion\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Driver Date\",");
file.WriteLine("                        field: \"DriverDate\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            return parseWinDate(v).toString();");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Status\",");
file.WriteLine("                        field: \"Status\"");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            },");
file.WriteLine("            Monitor: {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: \"Win32_DesktopMonitor\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Monitor Name\",");
file.WriteLine("                        field: \"Description\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Monitor ID\",");
file.WriteLine("                        field: \"DeviceID\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Manufacturer\",");
file.WriteLine("                        field: \"MonitorManufacturer\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Monitor Type\",");
file.WriteLine("                        field: \"MonitorType\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Status\",");
file.WriteLine("                        field: \"Status\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Screen Height\",");
file.WriteLine("                        field: \"ScreenHeight\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Screen Width\",");
file.WriteLine("                        field: \"ScreenWidth\"");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        },");
file.WriteLine("        Multimedia: {");
file.WriteLine("            \"Windows Audio\": {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: \"Win32_SoundDevice\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Description\",");
file.WriteLine("                        field: \"Description\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Manufacturer\",");
file.WriteLine("                        field: \"Manufacturer\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Status\",");
file.WriteLine("                        field: \"Status\"");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        },");
file.WriteLine("        Software: {");
file.WriteLine("            \"Installed Software\": {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"soft\" ],");
file.WriteLine("                reg: {");
file.WriteLine("                    source: _os.is64 ? [ \"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\", \"HKCU\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\", \"HKLM64\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\", \"HKCU64\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\" ] : [ \"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\", \"HKCU\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\\" ],");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Program\",");
file.WriteLine("                        field: \"DisplayName\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Version\",");
file.WriteLine("                        field: \"DisplayVersion\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Publisher\",");
file.WriteLine("                        field: \"Publisher\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Install Date\",");
file.WriteLine("                        field: \"InstallDate\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Location\",");
file.WriteLine("                        field: \"InstallLocation\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Icon\",");
file.WriteLine("                        field: \"DisplayIcon\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Uninstaller\",");
file.WriteLine("                        field: \"UninstallString\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Registry Path\",");
file.WriteLine("                        field: \"RegPath\"");
file.WriteLine("                    } ],");
file.WriteLine("                    filter: function(_ref47) {");
file.WriteLine("                        return _ref47.Program;");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        },");
file.WriteLine("        Security: {");
file.WriteLine("            \"Windows Security\": {");
file.WriteLine("                type: \"object\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\" ],");
file.WriteLine("                groups: [ {");
file.WriteLine("                    name: \"Operating System Properties\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"OS Name\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"Caption\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"OS Service Pack\",");
file.WriteLine("                        wmi: {");
file.WriteLine("                            source: \"Win32_OperatingSystem\",");
file.WriteLine("                            fields: [ \"CSDVersion\" ]");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Winlogon Shell\",");
file.WriteLine("                        reg: {");
file.WriteLine("                            source: \"HKLM\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\"");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"User Account Control (UAC)\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        reg: {");
file.WriteLine("                            source: \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\EnableLUA\"");
file.WriteLine("                        },");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (0 === v) return \"Disabled\";");
file.WriteLine("                            if (1 === v) return \"Enabled\"; else return \"\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"System Restore\",");
file.WriteLine("                        targets: [ \"temporary\" ],");
file.WriteLine("                        reg: {");
file.WriteLine("                            source: _os.OSVersion < 6 ? \"HKLM\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SystemRestore\\\\DisableSR\" : \"HKLM\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SystemRestore\\\\RPSessionInterval\"");
file.WriteLine("                        },");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (_os.OSVersion < 6) return v ? \"Disabled\" : \"Enabled\"; else return v ? \"Enabled\" : \"Disabled\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                } ]");
file.WriteLine("            },");
file.WriteLine("            \"Anti-Virus\": {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\", \"temporary\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: _os.OSVersion < 6 ? \"ROOT\\\\SecurityCenter:AntiVirusProduct\" : \"ROOT\\\\SecurityCenter2:AntiVirusProduct\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Name\",");
file.WriteLine("                        field: \"displayName\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Active\",");
file.WriteLine("                        field: _os.OSVersion < 6 ? \"onAccessScanningEnabled\" : \"productState\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (_os.OSVersion < 6) return \"false\" !== v;");
file.WriteLine("                            var state = parseInt(v, 10).toString(16);");
file.WriteLine("                            state = state.substring(state.length - 4, state.length - 2);");
file.WriteLine("                            return \"10\" === state || \"11\" === state ? \"Yes\" : \"No\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"UpToDate\",");
file.WriteLine("                        field: _os.OSVersion < 6 ? \"productUptoDate\" : \"productState\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (_os.OSVersion < 6) return \"false\" !== v;");
file.WriteLine("                            var state = parseInt(v, 10).toString(16);");
file.WriteLine("                            state = state.substring(state.length - 2, state.length);");
file.WriteLine("                            return \"00\" === state ? \"Yes\" : \"No\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            },");
file.WriteLine("            Firewall: {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\", \"temporary\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: _os.OSVersion < 6 ? \"ROOT\\\\SecurityCenter:FirewallProduct\" : \"ROOT\\\\SecurityCenter2:FirewallProduct\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Name\",");
file.WriteLine("                        field: \"displayName\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Active\",");
file.WriteLine("                        field: _os.OSVersion < 6 ? \"enabled\" : \"productState\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (_os.OSVersion < 6) return \"false\" !== v;");
file.WriteLine("                            var state = parseInt(v, 10).toString(16);");
file.WriteLine("                            state = state.substring(state.length - 4, state.length - 2);");
file.WriteLine("                            return \"10\" === state || \"11\" === state ? \"Yes\" : \"No\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            },");
file.WriteLine("            \"Anti-Spyware\": {");
file.WriteLine("                type: \"array\",");
file.WriteLine("                targets: [ \"diagnostics\", \"dashboard\", \"temporary\" ],");
file.WriteLine("                wmi: {");
file.WriteLine("                    source: _os.OSVersion < 6 ? \"ROOT\\\\SecurityCenter:AntiSpywareProduct\" : \"ROOT\\\\SecurityCenter2:AntiSpywareProduct\",");
file.WriteLine("                    fields: [ {");
file.WriteLine("                        name: \"Name\",");
file.WriteLine("                        field: \"displayName\"");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"Active\",");
file.WriteLine("                        field: _os.OSVersion < 6 ? \"productEnabled\" : \"productState\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (_os.OSVersion < 6) return \"false\" !== v;");
file.WriteLine("                            var state = parseInt(v, 10).toString(16);");
file.WriteLine("                            state = state.substring(state.length - 4, state.length - 2);");
file.WriteLine("                            return \"10\" === state || \"11\" === state ? \"Yes\" : \"No\";");
file.WriteLine("                        }");
file.WriteLine("                    }, {");
file.WriteLine("                        name: \"UpToDate\",");
file.WriteLine("                        field: _os.OSVersion < 6 ? \"productUptoDate\" : \"productState\",");
file.WriteLine("                        format: function(v) {");
file.WriteLine("                            if (_os.OSVersion < 6) return \"false\" !== v;");
file.WriteLine("                            var state = parseInt(v, 10).toString(16);");
file.WriteLine("                            state = state.substring(state.length - 2, state.length);");
file.WriteLine("                            return \"00\" === state ? \"Yes\" : \"No\";");
file.WriteLine("                        }");
file.WriteLine("                    } ]");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports[\"default\"] = function() {");
file.WriteLine("        var deviceId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";");
file.WriteLine("        if (/FAILURE|UNKNOWN|VID_0000/i.test(deviceId)) return \"usb_connection\"; else if (/ROOT\\\\LEGACY_.+/i.test(deviceId)) return \"root_legacy\"; else if (/TAP.+|PTUN.+|HAMACHI/i.test(deviceId)) return \"vpn_no_need_drivers\"; else if (/\\*6TO4MP|BTH\\\\MS_.+/i.test(deviceId)) return \"damaged_system_driver\"; else if (deviceId.includes(\"WPDBUSENUMROOT\\\\UMB\")) return \"usb_unknown_vendor\"; else if (deviceId.includes(\"HDAUDIO\\\\FUNC_FF&VEN_9FFF&DEV_FFFF&SUBSYS_1FFFFFFF&REV_FFFF\")) return \"sound_card\"; else if (/\\*ISATAP|\\*TEREDO/i.test(deviceId)) return \"unknown_problem\"; else return \"\";");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function getDrivers() {");
file.WriteLine("        var drivers = (0, _wmi.getWMIObjects)([ \"DeviceID\", \"DriverDate\", \"DriverVersion\", \"DeviceName\", \"InfName\", \"Manufacturer\", \"ClassGuid\" ], \"Win32_PnPSignedDriver\"), results = [];");
file.WriteLine("        drivers.forEach(function(driver) {");
file.WriteLine("            if (driver.DeviceID && driver.DriverDate && driver.DriverVersion && driver.DeviceName && driver.InfName) {");
file.WriteLine("                for (var dr = {");
file.WriteLine("                    deviceId: driver.DeviceID,");
file.WriteLine("                    date: [ driver.DriverDate.slice(0, 4), driver.DriverDate.slice(4, 6), driver.DriverDate.slice(6, 8) ].join(\"-\"),");
file.WriteLine("                    version: driver.DriverVersion,");
file.WriteLine("                    name: driver.DeviceName,");
file.WriteLine("                    manufacturer: driver ? driver.Manufacturer : null,");
file.WriteLine("                    inf: driver.InfName");
file.WriteLine("                }, regPath = \"SYSTEM\\\\CurrentControlSet\\\\Control\\\\Class\\\\\" + driver.ClassGuid, regData = _wmiRegistry.wmiRegistry.EnumKey(_wmiRegistry.wmiRegistry.HKLM, regPath), _iterator = regData, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ;) {");
file.WriteLine("                    var _ref;");
file.WriteLine("                    if (_isArray) {");
file.WriteLine("                        if (_i >= _iterator.length) break;");
file.WriteLine("                        _ref = _iterator[_i++];");
file.WriteLine("                    } else {");
file.WriteLine("                        _i = _iterator.next();");
file.WriteLine("                        if (_i.done) break;");
file.WriteLine("                        _ref = _i.value;");
file.WriteLine("                    }");
file.WriteLine("                    var regSection = _ref;");
file.WriteLine("                    if (_wmiRegistry.wmiRegistry.GetStringValue(_wmiRegistry.wmiRegistry.HKLM, regPath + \"\\\\\" + regSection, \"InfPath\") === dr.inf) {");
file.WriteLine("                        var regDate = _wmiRegistry.wmiRegistry.GetStringValue(_wmiRegistry.wmiRegistry.HKLM, regPath + \"\\\\\" + regSection, \"DriverDate\");");
file.WriteLine("                        dr.date = [ regDate.split(\"-\")[2], (\"0\" + regDate.split(\"-\")[0]).slice(-2), (\"0\" + regDate.split(\"-\")[1]).slice(-2) ].join(\"-\");");
file.WriteLine("                        break;");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                results.push(dr);");
file.WriteLine("            }");
file.WriteLine("        });");
file.WriteLine("        return results;");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getDrivers = getDrivers;");
file.WriteLine("    var _wmi = __webpack_require__(3), _wmiRegistry = __webpack_require__(74);");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getDevicesStatus = exports.getDevicesCount = exports.getHardware = undefined;");
file.WriteLine("    var _extends = Object.assign || function(target) {");
file.WriteLine("        for (var i = 1; i < arguments.length; i++) {");
file.WriteLine("            var source = arguments[i];");
file.WriteLine("            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];");
file.WriteLine("        }");
file.WriteLine("        return target;");
file.WriteLine("    }, _wmi = __webpack_require__(3), _iterate = __webpack_require__(30), _iterate2 = _interopRequireDefault(_iterate), _getDeviceProblem = __webpack_require__(247), _getDeviceProblem2 = _interopRequireDefault(_getDeviceProblem), re1 = /^(.*(?:VEN|VID).*(?:DEV|PID).*?)(?=&|\\\\|$).*?(?=\\\\|$)/, re2 = /^((?:ACPI\\\\(?:IO|FUJITSU)|.*?(?!\\\\(?:IO|FUJITSU)\\\\))\\\\.*?)\\\\.*/, remap = function(_ref) {");
file.WriteLine("        return {");
file.WriteLine("            deviceId: _ref.DeviceID,");
file.WriteLine("            status: _ref.Status,");
file.WriteLine("            statusCode: _ref.ConfigManagerErrorCode");
file.WriteLine("        };");
file.WriteLine("    };");
file.WriteLine("    exports.getHardware = function() {");
file.WriteLine("        var DevicecolItems = _wmi.objWMIService.ExecQuery(\"SELECT * FROM  Win32_PnPEntity\", \"WQL\"), DeviceenumItems = new Enumerator(DevicecolItems);");
file.WriteLine("        DeviceenumItems.moveFirst();");
file.WriteLine("        for (var DriverPackInstalled = [], i = 0; !1 === DeviceenumItems.atEnd(); i++) !function(i) {");
file.WriteLine("            var deviceItem = DeviceenumItems.item(), hardwareId = [];");
file.WriteLine("            if (deviceItem.HardWareID !== undefined && null !== deviceItem.HardWareID && deviceItem.HardWareID.toArray) for (var h = 0; h < deviceItem.HardWareID.toArray().length; h++) hardwareId.push(deviceItem.HardWareID.toArray()[h].toString().toUpperCase()); else if (deviceItem.DeviceID) {");
file.WriteLine("                var id = deviceItem.DeviceID.toUpperCase().replace(/^\\*\\s*/, \"ACPI\\\\\").replace(/^ACPI\\\\VEN_([0-9A-Z]+)&DEV_([0-9A-Z]+)/, \"ACPI\\\\$1$2\"), m = re1.exec(id);");
file.WriteLine("                if (m) {");
file.WriteLine("                    for (var parts = m[0].slice(m[1].length + 1).split(\"&\"), hwid = m[1], p = 0; p < parts.length; p++) {");
file.WriteLine("                        hwid += \"&\" + parts[p];");
file.WriteLine("                        hardwareId.push(hwid);");
file.WriteLine("                    }");
file.WriteLine("                    parts.forEach(function(part) {");
file.WriteLine("                        hwid += \"&\" + part;");
file.WriteLine("                        hardwareId.push(hwid);");
file.WriteLine("                    });");
file.WriteLine("                } else hardwareId.push(id.replace(re2, \"$1\"));");
file.WriteLine("            }");
file.WriteLine("            DriverPackInstalled.push(_extends({}, remap(deviceItem), {");
file.WriteLine("                hardwareId: hardwareId");
file.WriteLine("            }));");
file.WriteLine("            DeviceenumItems.moveNext();");
file.WriteLine("        }();");
file.WriteLine("        return DriverPackInstalled;");
file.WriteLine("    }, exports.getDevicesCount = function(_ref2) {");
file.WriteLine("        var status = _ref2.status, errCode = _ref2.errCode, filterBroken = _ref2.filterBroken, query = \"SELECT DeviceID FROM Win32_PnPEntity\", whereParts = [];");
file.WriteLine("        if (status) whereParts.push('Status = \"' + status + '\"');");
file.WriteLine("        if (errCode) {");
file.WriteLine("            if (errCode.min) whereParts.push(\"ConfigManagerErrorCode >= \" + errCode.min);");
file.WriteLine("            if (errCode.max) whereParts.push(\"ConfigManagerErrorCode <= \" + errCode.max);");
file.WriteLine("        }");
file.WriteLine("        if (whereParts.length > 0) query = query + \" WHERE \" + whereParts.join(\" AND \");");
file.WriteLine("        var DevicecolItems = _wmi.objWMIService.ExecQuery(query, \"WQL\");");
file.WriteLine("        if (!filterBroken) return DevicecolItems.Count;");
file.WriteLine("        var res = 0, DeviceenumItems = new Enumerator(DevicecolItems);");
file.WriteLine("        DeviceenumItems.moveFirst();");
file.WriteLine("        for (var i = 0; !1 === DeviceenumItems.atEnd(); i++) {");
file.WriteLine("            var DeviceID = DeviceenumItems.item().DeviceID;");
file.WriteLine("            if (DeviceID && !(0, _getDeviceProblem2[\"default\"])(DeviceID)) res++;");
file.WriteLine("            DeviceenumItems.moveNext();");
file.WriteLine("        }");
file.WriteLine("        return res;");
file.WriteLine("    }, exports.getDevicesStatus = function(hwids) {");
file.WriteLine("        var where = hwids.map(function(deviceId) {");
file.WriteLine("            return \"(DeviceID=\" + JSON.stringify(deviceId) + \")\";");
file.WriteLine("        }).join(\" OR \"), query = \"SELECT * FROM  Win32_PnPEntity\" + (where ? \" WHERE \" + where : \"\"), res = [];");
file.WriteLine("        (0, _iterate2[\"default\"])(_wmi.objWMIService.ExecQuery(query, \"WQL\"), function(item) {");
file.WriteLine("            res.push(_extends({}, remap(item)));");
file.WriteLine("        });");
file.WriteLine("        return res;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function getModel() {");
file.WriteLine("        var _getWMIObjects = (0, _wmi.getWMIObjects)([ \"Manufacturer\", \"Model\", \"Caption\" ], \"Win32_ComputerSystem\"), _getWMIObjects$ = _getWMIObjects[0], pc = _getWMIObjects$ === undefined ? {} : _getWMIObjects$, _getWMIObjects2 = (0, ");
file.WriteLine("        _wmi.getWMIObjects)([ \"Vendor\", \"Name\", \"Version\" ], \"Win32_ComputerSystemProduct\"), _getWMIObjects2$ = _getWMIObjects2[0], csp = _getWMIObjects2$ === undefined ? {} : _getWMIObjects2$, _getWMIObjects3 = (0, ");
file.WriteLine("        _wmi.getWMIObjects)([ \"Product\", \"Version\", \"Manufacturer\" ], \"Win32_BaseBoard\"), _getWMIObjects3$ = _getWMIObjects3[0], bb = _getWMIObjects3$ === undefined ? {} : _getWMIObjects3$, type = (0, ");
file.WriteLine("        _getPCType2[\"default\"])(csp), vendor = \"Notebook\" === type ? (0, _getNotebookVendor2[\"default\"])(csp.Vendor) : (0, ");
file.WriteLine("        _trimVendorName2[\"default\"])(csp.Vendor, \"Noname\", !1);");
file.WriteLine("        return {");
file.WriteLine("            type: type,");
file.WriteLine("            vendor: vendor,");
file.WriteLine("            name: \"Notebook\" === type ? (0, _getNotebookModel2[\"default\"])(Object.assign({}, csp, {");
file.WriteLine("                Vendor: vendor");
file.WriteLine("            })) : pc.Caption,");
file.WriteLine("            info: {");
file.WriteLine("                computerSystem: pc,");
file.WriteLine("                computerSystemProduct: csp,");
file.WriteLine("                baseBoard: bb");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getModel = getModel;");
file.WriteLine("    var _wmi = __webpack_require__(3), _trimVendorName = __webpack_require__(131), _trimVendorName2 = _interopRequireDefault(_trimVendorName), _getPCType = __webpack_require__(251), _getPCType2 = _interopRequireDefault(_getPCType), _getNotebookVendor = __webpack_require__(181), _getNotebookVendor2 = _interopRequireDefault(_getNotebookVendor), _getNotebookModel = __webpack_require__(180), _getNotebookModel2 = _interopRequireDefault(_getNotebookModel);");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _wmi = __webpack_require__(3), _trimVendorName = __webpack_require__(131), _trimVendorName2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_trimVendorName);");
file.WriteLine("    exports[\"default\"] = function(_ref) {");
file.WriteLine("        var _ref$Vendor = _ref.Vendor, Vendor = _ref$Vendor === undefined ? \"Noname\" : _ref$Vendor, _ref$Name = _ref.Name, Name = _ref$Name === undefined ? \"Unknown\" : _ref$Name, chassis = (0, ");
file.WriteLine("        _wmi.getWMIObjects)([ \"ChassisTypes\" ], \"Win32_SystemEnclosure\"), type = void 0;");
file.WriteLine("        if (!(chassis && chassis[0] && chassis[0].ChassisTypes && chassis[0].ChassisTypes[0])) type = \"Other\"; else switch (chassis[0].ChassisTypes[0]) {");
file.WriteLine("          case 3:");
file.WriteLine("          case 4:");
file.WriteLine("          case 5:");
file.WriteLine("          case 6:");
file.WriteLine("          case 7:");
file.WriteLine("          case 13:");
file.WriteLine("          case 15:");
file.WriteLine("          case 16:");
file.WriteLine("            type = \"Desktop\";");
file.WriteLine("            break;");
file.WriteLine("");
file.WriteLine("          case 8:");
file.WriteLine("          case 9:");
file.WriteLine("          case 10:");
file.WriteLine("          case 11:");
file.WriteLine("          case 14:");
file.WriteLine("            return \"Notebook\";");
file.WriteLine("");
file.WriteLine("          default:");
file.WriteLine("            type = \"Other\";");
file.WriteLine("        }");
file.WriteLine("        if ([ /virtualbox/i, /vmware/i ].some(function(reg) {");
file.WriteLine("            return reg.test(Name);");
file.WriteLine("        })) return type;");
file.WriteLine("        if (0 === (0, _wmi.getWMIObjects)([ \"Name\" ], \"Win32_Battery\").length) return type;");
file.WriteLine("        if (\"Other\" === type) return \"Notebook\";");
file.WriteLine("        if (\"Desktop\" === type && \"micro-star\" === (0, _trimVendorName2[\"default\"])(Vendor)) return \"Notebook\"; else return type;");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _fso = __webpack_require__(7), _specialFolders = __webpack_require__(14), _localFiles = __webpack_require__(18), _getDiagnostics = __webpack_require__(69), _getDiagnostics2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_getDiagnostics), analyseSoftChanges = function(prev, cur) {");
file.WriteLine("        var res = {");
file.WriteLine("            installed: [],");
file.WriteLine("            uninstalled: [],");
file.WriteLine("            updated: []");
file.WriteLine("        };");
file.WriteLine("        if (!prev.Software || !prev.Software[\"Installed Software\"]) return res;");
file.WriteLine("        var prevSoft = prev.Software[\"Installed Software\"], curSoft = cur.Software[\"Installed Software\"];");
file.WriteLine("        res.installed = curSoft.filter(function(csoft) {");
file.WriteLine("            return !prevSoft.find(function(psoft) {");
file.WriteLine("                return psoft.Program === csoft.Program;");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        res.uninstalled = prevSoft.filter(function(psoft) {");
file.WriteLine("            return !curSoft.find(function(csoft) {");
file.WriteLine("                return csoft.Program === psoft.Program;");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        res.updated = curSoft.filter(function(csoft) {");
file.WriteLine("            return prevSoft.find(function(psoft) {");
file.WriteLine("                return psoft.Program === csoft.Program && psoft.Version !== csoft.Version;");
file.WriteLine("            });");
file.WriteLine("        });");
file.WriteLine("        return res;");
file.WriteLine("    }, checkPrevSoftFile = function(fullPath) {");
file.WriteLine("        try {");
file.WriteLine("            if (_fso.fso.FileExists(fullPath)) {");
file.WriteLine("                var fileIn = _fso.fso.OpenTextFile(fullPath, 1, !0, -1), prev = JSON.parse(fileIn.ReadAll());");
file.WriteLine("                fileIn.Close();");
file.WriteLine("                return prev;");
file.WriteLine("            }");
file.WriteLine("        } catch (e) {}");
file.WriteLine("        return {};");
file.WriteLine("    };");
file.WriteLine("    exports[\"default\"] = function(cur) {");
file.WriteLine("        var path = _specialFolders.AppData + \"\\\\DRPSu\\\\diagnostics\\\\\", fullPathCur = path + \"newsoft.json\", fullPathPrev = path + \"soft.json\";");
file.WriteLine("        try {");
file.WriteLine("            if (!cur) cur = JSON.parse((0, _localFiles.queryFile)(fullPathCur, 6e4));");
file.WriteLine("        } catch (err) {");
file.WriteLine("            cur = (0, _getDiagnostics2[\"default\"])(\"soft\");");
file.WriteLine("        }");
file.WriteLine("        var prev = checkPrevSoftFile(fullPathPrev), changes = analyseSoftChanges(prev, cur);");
file.WriteLine("        (0, _localFiles.createFile)(path, \"soft.json\", JSON.stringify(cur));");
file.WriteLine("        return changes;");
file.WriteLine("    };");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _fso = __webpack_require__(7), _specialFolders = __webpack_require__(14), _iterate = __webpack_require__(30), _iterate2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_iterate), parseClidsFile = function(filePath, reg) {");
file.WriteLine("        var clids = [];");
file.WriteLine("        try {");
file.WriteLine("            for (var fStream = _fso.fso.OpenTextFile(filePath, 1); !fStream.AtEndOfStream; ) {");
file.WriteLine("                var line = fStream.ReadLine(), parsed = reg.exec(line);");
file.WriteLine("                if (parsed && parsed[1]) clids.push(parsed[1]);");
file.WriteLine("            }");
file.WriteLine("            fStream.Close();");
file.WriteLine("        } catch (e) {");
file.WriteLine("            return clids;");
file.WriteLine("        }");
file.WriteLine("        return clids;");
file.WriteLine("    };");
file.WriteLine("    exports[\"default\"] = [ {");
file.WriteLine("        title: \"Yandex\",");
file.WriteLine("        nameReg: /^Yandex$|YandexBrowser/i,");
file.WriteLine("        getClids: function() {");
file.WriteLine("            var clidsFilePath = _specialFolders.AppData + \"\\\\Yandex\\\\clids-yabrowser.xml\";");
file.WriteLine("            return parseClidsFile(clidsFilePath, /vendor\\s+name=['\"](.*?)['\"]/);");
file.WriteLine("        },");
file.WriteLine("        clidsReg: /drpsu/i");
file.WriteLine("    }, {");
file.WriteLine("        title: \"Opera\",");
file.WriteLine("        nameReg: /Opera/i,");
file.WriteLine("        getClids: function() {");
file.WriteLine("            var clids = [], reg = /['\"]partner_id['\"]\\s*:\\s*['\"](.*?)['\"]/, operaFolder = _specialFolders.ProgramFiles + \"\\\\Opera\";");
file.WriteLine("            if (!_fso.fso.FolderExists(operaFolder)) {");
file.WriteLine("                operaFolder = _specialFolders.AppData + \"\\\\Opera Software\\\\Opera Stable\";");
file.WriteLine("                var clidsFilePath = operaFolder + \"\\\\tracking_user_agent.json\";");
file.WriteLine("                clids = clids.concat(parseClidsFile(clidsFilePath, reg));");
file.WriteLine("            } else try {");
file.WriteLine("                (0, _iterate2[\"default\"])(_fso.fso.GetFolder(operaFolder).SubFolders, function(subFolder) {");
file.WriteLine("                    if (/^\\d+/.test(subFolder.Name)) {");
file.WriteLine("                        var _clidsFilePath = operaFolder + \"\\\\\" + subFolder.Name + \"\\\\resources\\\\tracking_user_agent.json\";");
file.WriteLine("                        clids = clids.concat(parseClidsFile(_clidsFilePath, reg));");
file.WriteLine("                    }");
file.WriteLine("                });");
file.WriteLine("            } catch (e) {");
file.WriteLine("                return clids;");
file.WriteLine("            }");
file.WriteLine("            return clids;");
file.WriteLine("        },");
file.WriteLine("        clidsReg: /Campaign\\s+34/i");
file.WriteLine("    }, {");
file.WriteLine("        title: \"Firefox\",");
file.WriteLine("        nameReg: /Mozilla\\s?Firefox/i");
file.WriteLine("    }, {");
file.WriteLine("        title: \"WinRAR\",");
file.WriteLine("        nameReg: /WinRAR/i");
file.WriteLine("    } ];");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(module, exports) {");
file.WriteLine("    !function(global) {");
file.WriteLine("        \"use strict\";");
file.WriteLine("        function XHRTransport(xhr, onStartCallback, onProgressCallback, onFinishCallback, thisArg) {");
file.WriteLine("            this._internal = new XHRTransportInternal(xhr, onStartCallback, onProgressCallback, onFinishCallback, thisArg);");
file.WriteLine("        }");
file.WriteLine("        function XHRTransportInternal(xhr, onStartCallback, onProgressCallback, onFinishCallback, thisArg) {");
file.WriteLine("            this.onStartCallback = onStartCallback;");
file.WriteLine("            this.onProgressCallback = onProgressCallback;");
file.WriteLine("            this.onFinishCallback = onFinishCallback;");
file.WriteLine("            this.thisArg = thisArg;");
file.WriteLine("            this.xhr = xhr;");
file.WriteLine("            this.state = 0;");
file.WriteLine("            this.charOffset = 0;");
file.WriteLine("            this.offset = 0;");
file.WriteLine("            this.url = \"\";");
file.WriteLine("            this.withCredentials = !1;");
file.WriteLine("            this.timeout = 0;");
file.WriteLine("        }");
file.WriteLine("        function Map() {");
file.WriteLine("            this._data = {};");
file.WriteLine("        }");
file.WriteLine("        function EventTarget() {");
file.WriteLine("            this._listeners = new Map();");
file.WriteLine("        }");
file.WriteLine("        function throwError(e) {");
file.WriteLine("            setTimeout(function() {");
file.WriteLine("                throw e;");
file.WriteLine("            }, 0);");
file.WriteLine("        }");
file.WriteLine("        function Event(type) {");
file.WriteLine("            this.type = type;");
file.WriteLine("            this.target = undefined;");
file.WriteLine("        }");
file.WriteLine("        function MessageEvent(type, options) {");
file.WriteLine("            Event.call(this, type);");
file.WriteLine("            this.data = options.data;");
file.WriteLine("            this.lastEventId = options.lastEventId;");
file.WriteLine("        }");
file.WriteLine("        function EventSource(url, options) {");
file.WriteLine("            EventTarget.call(this);");
file.WriteLine("            this.onopen = undefined;");
file.WriteLine("            this.onmessage = undefined;");
file.WriteLine("            this.onerror = undefined;");
file.WriteLine("            this.url = \"\";");
file.WriteLine("            this.readyState = CONNECTING;");
file.WriteLine("            this.withCredentials = !1;");
file.WriteLine("            this._internal = new EventSourceInternal(this, url, options);");
file.WriteLine("        }");
file.WriteLine("        function EventSourceInternal(es, url, options) {");
file.WriteLine("            this.url = url.toString();");
file.WriteLine("            this.readyState = CONNECTING;");
file.WriteLine("            this.withCredentials = isCORSSupported && options != undefined && Boolean(options.withCredentials);");
file.WriteLine("            this.es = es;");
file.WriteLine("            this.initialRetry = getDuration(1e3, 0);");
file.WriteLine("            this.heartbeatTimeout = getDuration(45e3, 0);");
file.WriteLine("            this.lastEventId = \"\";");
file.WriteLine("            this.retry = this.initialRetry;");
file.WriteLine("            this.wasActivity = !1;");
file.WriteLine("            var CurrentTransport = options != undefined && options.Transport != undefined ? options.Transport : Transport, xhr = new CurrentTransport();");
file.WriteLine("            this.transport = new XHRTransport(xhr, this.onStart, this.onProgress, this.onFinish, this);");
file.WriteLine("            this.timeout = 0;");
file.WriteLine("            this.currentState = WAITING;");
file.WriteLine("            this.dataBuffer = [];");
file.WriteLine("            this.lastEventIdBuffer = \"\";");
file.WriteLine("            this.eventTypeBuffer = \"\";");
file.WriteLine("            this.state = FIELD_START;");
file.WriteLine("            this.fieldStart = 0;");
file.WriteLine("            this.valueStart = 0;");
file.WriteLine("            this.es.url = this.url;");
file.WriteLine("            this.es.readyState = this.readyState;");
file.WriteLine("            this.es.withCredentials = this.withCredentials;");
file.WriteLine("            this.onTimeout();");
file.WriteLine("        }");
file.WriteLine("        function F() {");
file.WriteLine("            this.CONNECTING = CONNECTING;");
file.WriteLine("            this.OPEN = OPEN;");
file.WriteLine("            this.CLOSED = CLOSED;");
file.WriteLine("        }");
file.WriteLine("        var setTimeout = global.setTimeout, clearTimeout = global.clearTimeout, k = function() {};");
file.WriteLine("        XHRTransport.prototype.open = function(url, withCredentials) {");
file.WriteLine("            this._internal.open(url, withCredentials);");
file.WriteLine("        };");
file.WriteLine("        XHRTransport.prototype.cancel = function() {");
file.WriteLine("            this._internal.cancel();");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.onStart = function() {");
file.WriteLine("            if (1 === this.state) {");
file.WriteLine("                this.state = 2;");
file.WriteLine("                var status = 0, statusText = \"\", contentType = undefined;");
file.WriteLine("                if (!(\"contentType\" in this.xhr)) try {");
file.WriteLine("                    status = this.xhr.status;");
file.WriteLine("                    statusText = this.xhr.statusText;");
file.WriteLine("                    contentType = this.xhr.getResponseHeader(\"Content-Type\");");
file.WriteLine("                } catch (error) {");
file.WriteLine("                    status = 0;");
file.WriteLine("                    statusText = \"\";");
file.WriteLine("                    contentType = undefined;");
file.WriteLine("                } else {");
file.WriteLine("                    status = 200;");
file.WriteLine("                    statusText = \"OK\";");
file.WriteLine("                    contentType = this.xhr.contentType;");
file.WriteLine("                }");
file.WriteLine("                if (contentType == undefined) contentType = \"\";");
file.WriteLine("                this.onStartCallback.call(this.thisArg, status, statusText, contentType);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.onProgress = function() {");
file.WriteLine("            this.onStart();");
file.WriteLine("            if (2 === this.state || 3 === this.state) {");
file.WriteLine("                this.state = 3;");
file.WriteLine("                var responseText = \"\";");
file.WriteLine("                try {");
file.WriteLine("                    responseText = this.xhr.responseText;");
file.WriteLine("                } catch (error) {}");
file.WriteLine("                for (var chunkStart = this.charOffset, length = responseText.length, i = this.offset; i < length; i += 1) {");
file.WriteLine("                    var c = responseText.charCodeAt(i);");
file.WriteLine("                    if (c === \"\\n\".charCodeAt(0) || c === \"\\r\".charCodeAt(0)) this.charOffset = i + 1;");
file.WriteLine("                }");
file.WriteLine("                this.offset = length;");
file.WriteLine("                var chunk = responseText.slice(chunkStart, this.charOffset);");
file.WriteLine("                this.onProgressCallback.call(this.thisArg, chunk);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.onFinish = function() {");
file.WriteLine("            this.onProgress();");
file.WriteLine("            if (3 === this.state) {");
file.WriteLine("                this.state = 4;");
file.WriteLine("                if (0 !== this.timeout) {");
file.WriteLine("                    clearTimeout(this.timeout);");
file.WriteLine("                    this.timeout = 0;");
file.WriteLine("                }");
file.WriteLine("                this.onFinishCallback.call(this.thisArg);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.onReadyStateChange = function() {");
file.WriteLine("            if (this.xhr != undefined) if (4 === this.xhr.readyState) if (0 === this.xhr.status) this.onFinish(); else this.onFinish(); else if (3 === this.xhr.readyState) this.onProgress(); else if (2 === this.xhr.readyState) ;");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.onTimeout2 = function() {");
file.WriteLine("            this.timeout = 0;");
file.WriteLine("            var tmp = /^data\\:([^,]*?)(base64)?,([\\S]*)$/.exec(this.url), contentType = tmp[1], data = \"base64\" === tmp[2] ? global.atob(tmp[3]) : decodeURIComponent(tmp[3]);");
file.WriteLine("            if (1 === this.state) {");
file.WriteLine("                this.state = 2;");
file.WriteLine("                this.onStartCallback.call(this.thisArg, 200, \"OK\", contentType);");
file.WriteLine("            }");
file.WriteLine("            if (2 === this.state || 3 === this.state) {");
file.WriteLine("                this.state = 3;");
file.WriteLine("                this.onProgressCallback.call(this.thisArg, data);");
file.WriteLine("            }");
file.WriteLine("            if (3 === this.state) {");
file.WriteLine("                this.state = 4;");
file.WriteLine("                this.onFinishCallback.call(this.thisArg);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.onTimeout1 = function() {");
file.WriteLine("            this.timeout = 0;");
file.WriteLine("            this.open(this.url, this.withCredentials);");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.onTimeout0 = function() {");
file.WriteLine("            var that = this;");
file.WriteLine("            this.timeout = setTimeout(function() {");
file.WriteLine("                that.onTimeout0();");
file.WriteLine("            }, 500);");
file.WriteLine("            if (3 === this.xhr.readyState) this.onProgress();");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.handleEvent = function(event) {");
file.WriteLine("            if (\"load\" === event.type) this.onFinish(); else if (\"error\" === event.type) this.onFinish(); else if (\"abort\" === event.type) this.onFinish(); else if (\"progress\" === event.type) this.onProgress(); else if (\"readystatechange\" === event.type) this.onReadyStateChange();");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.open = function(url, withCredentials) {");
file.WriteLine("            this.cancel();");
file.WriteLine("            this.url = url;");
file.WriteLine("            this.withCredentials = withCredentials;");
file.WriteLine("            this.state = 1;");
file.WriteLine("            this.charOffset = 0;");
file.WriteLine("            this.offset = 0;");
file.WriteLine("            var that = this;");
file.WriteLine("            if (/^data\\:([^,]*?)(?:;base64)?,[\\S]*$/.exec(url) == undefined) if (!(!(\"ontimeout\" in this.xhr) || \"sendAsBinary\" in this.xhr || \"mozAnon\" in this.xhr) || global.document == undefined || global.document.readyState == undefined || \"complete\" === global.document.readyState) {");
file.WriteLine("                this.xhr.onload = function(event) {");
file.WriteLine("                    that.handleEvent({");
file.WriteLine("                        type: \"load\"");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                this.xhr.onerror = function() {");
file.WriteLine("                    that.handleEvent({");
file.WriteLine("                        type: \"error\"");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                this.xhr.onabort = function() {");
file.WriteLine("                    that.handleEvent({");
file.WriteLine("                        type: \"abort\"");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                this.xhr.onprogress = function() {");
file.WriteLine("                    that.handleEvent({");
file.WriteLine("                        type: \"progress\"");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                this.xhr.onreadystatechange = function() {");
file.WriteLine("                    that.handleEvent({");
file.WriteLine("                        type: \"readystatechange\"");
file.WriteLine("                    });");
file.WriteLine("                };");
file.WriteLine("                this.xhr.open(\"GET\", url, !0);");
file.WriteLine("                this.xhr.withCredentials = withCredentials;");
file.WriteLine("                this.xhr.responseType = \"text\";");
file.WriteLine("                if (\"setRequestHeader\" in this.xhr) this.xhr.setRequestHeader(\"Accept\", \"text/event-stream\");");
file.WriteLine("                try {");
file.WriteLine("                    this.xhr.send(undefined);");
file.WriteLine("                } catch (error1) {");
file.WriteLine("                    throw error1;");
file.WriteLine("                }");
file.WriteLine("                if (\"readyState\" in this.xhr && global.opera != undefined) this.timeout = setTimeout(function() {");
file.WriteLine("                    that.onTimeout0();");
file.WriteLine("                }, 0);");
file.WriteLine("            } else this.timeout = setTimeout(function() {");
file.WriteLine("                that.onTimeout1();");
file.WriteLine("            }, 4); else this.timeout = setTimeout(function() {");
file.WriteLine("                that.onTimeout2();");
file.WriteLine("            }, 0);");
file.WriteLine("        };");
file.WriteLine("        XHRTransportInternal.prototype.cancel = function() {");
file.WriteLine("            if (0 !== this.state && 4 !== this.state) {");
file.WriteLine("                this.state = 4;");
file.WriteLine("                this.xhr.onload = k;");
file.WriteLine("                this.xhr.onerror = k;");
file.WriteLine("                this.xhr.onabort = k;");
file.WriteLine("                this.xhr.onprogress = k;");
file.WriteLine("                this.xhr.onreadystatechange = k;");
file.WriteLine("                this.xhr.abort();");
file.WriteLine("                if (0 !== this.timeout) {");
file.WriteLine("                    clearTimeout(this.timeout);");
file.WriteLine("                    this.timeout = 0;");
file.WriteLine("                }");
file.WriteLine("                this.onFinishCallback.call(this.thisArg);");
file.WriteLine("            }");
file.WriteLine("            this.state = 0;");
file.WriteLine("        };");
file.WriteLine("        Map.prototype.get = function(key) {");
file.WriteLine("            return this._data[key + \"~\"];");
file.WriteLine("        };");
file.WriteLine("        Map.prototype.set = function(key, value) {");
file.WriteLine("            this._data[key + \"~\"] = value;");
file.WriteLine("        };");
file.WriteLine("        Map.prototype[\"delete\"] = function(key) {");
file.WriteLine("            delete this._data[key + \"~\"];");
file.WriteLine("        };");
file.WriteLine("        EventTarget.prototype.dispatchEvent = function(event) {");
file.WriteLine("            event.target = this;");
file.WriteLine("            var type = event.type.toString(), listeners = this._listeners, typeListeners = listeners.get(type);");
file.WriteLine("            if (typeListeners != undefined) for (var length = typeListeners.length, listener = undefined, i = 0; i < length; i += 1) {");
file.WriteLine("                listener = typeListeners[i];");
file.WriteLine("                try {");
file.WriteLine("                    if (\"function\" == typeof listener.handleEvent) listener.handleEvent(event); else listener.call(this, event);");
file.WriteLine("                } catch (e) {");
file.WriteLine("                    throwError(e);");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        EventTarget.prototype.addEventListener = function(type, callback) {");
file.WriteLine("            type = type.toString();");
file.WriteLine("            var listeners = this._listeners, typeListeners = listeners.get(type);");
file.WriteLine("            if (typeListeners == undefined) {");
file.WriteLine("                typeListeners = [];");
file.WriteLine("                listeners.set(type, typeListeners);");
file.WriteLine("            }");
file.WriteLine("            for (var i = typeListeners.length; i >= 0; i -= 1) if (typeListeners[i] === callback) return;");
file.WriteLine("            typeListeners.push(callback);");
file.WriteLine("        };");
file.WriteLine("        EventTarget.prototype.removeEventListener = function(type, callback) {");
file.WriteLine("            type = type.toString();");
file.WriteLine("            var listeners = this._listeners, typeListeners = listeners.get(type);");
file.WriteLine("            if (typeListeners != undefined) {");
file.WriteLine("                for (var length = typeListeners.length, filtered = [], i = 0; i < length; i += 1) if (typeListeners[i] !== callback) filtered.push(typeListeners[i]);");
file.WriteLine("                if (0 === filtered.length) listeners[\"delete\"](type); else listeners.set(type, filtered);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        MessageEvent.prototype = Event.prototype;");
file.WriteLine("        var XHR = global.XMLHttpRequest, XDR = global.XDomainRequest, isCORSSupported = XHR != undefined && new XHR().withCredentials != undefined, Transport = isCORSSupported || XHR != undefined && XDR == undefined ? XHR : XDR, WAITING = -1, CONNECTING = 0, OPEN = 1, CLOSED = 2, FIELD_START = 4, contentTypeRegExp = /^text\\/event\\-stream;?(\\s*charset\\=utf\\-8)?$/i, getDuration = function(value, def) {");
file.WriteLine("            var n = value;");
file.WriteLine("            if (n !== n) n = def;");
file.WriteLine("            return n < 1e3 ? 1e3 : n > 18e6 ? 18e6 : n;");
file.WriteLine("        }, fire = function(that, f, event) {");
file.WriteLine("            try {");
file.WriteLine("                if (\"function\" == typeof f) f.call(that, event);");
file.WriteLine("            } catch (e) {");
file.WriteLine("                throwError(e);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        EventSourceInternal.prototype.onStart = function(status, statusText, contentType) {");
file.WriteLine("            if (this.currentState === CONNECTING) {");
file.WriteLine("                if (contentType == undefined) contentType = \"\";");
file.WriteLine("                if (200 === status && contentTypeRegExp.test(contentType)) {");
file.WriteLine("                    this.currentState = OPEN;");
file.WriteLine("                    this.wasActivity = !0;");
file.WriteLine("                    this.retry = this.initialRetry;");
file.WriteLine("                    this.readyState = OPEN;");
file.WriteLine("                    this.es.readyState = OPEN;");
file.WriteLine("                    var event = new Event(\"open\");");
file.WriteLine("                    this.es.dispatchEvent(event);");
file.WriteLine("                    fire(this.es, this.es.onopen, event);");
file.WriteLine("                } else if (0 !== status) {");
file.WriteLine("                    var message = \"\";");
file.WriteLine("                    if (200 !== status) message = \"EventSource's response has a status \" + status + \" \" + statusText.replace(/\\s+/g, \" \") + \" that is not 200. Aborting the connection.\"; else message = \"EventSource's response has a Content-Type specifying an unsupported type: \" + contentType.replace(/\\s+/g, \" \") + \". Aborting the connection.\";");
file.WriteLine("                    throwError(new Error(message));");
file.WriteLine("                    this.close();");
file.WriteLine("                    var event = new Event(\"error\");");
file.WriteLine("                    this.es.dispatchEvent(event);");
file.WriteLine("                    fire(this.es, this.es.onerror, event);");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        EventSourceInternal.prototype.onProgress = function(chunk) {");
file.WriteLine("            if (this.currentState === OPEN) {");
file.WriteLine("                var length = chunk.length;");
file.WriteLine("                if (0 !== length) this.wasActivity = !0;");
file.WriteLine("                for (var position = 0; position < length; position += 1) {");
file.WriteLine("                    var c = chunk.charCodeAt(position);");
file.WriteLine("                    if (3 === this.state && c === \"\\n\".charCodeAt(0)) this.state = FIELD_START; else {");
file.WriteLine("                        if (3 === this.state) this.state = FIELD_START;");
file.WriteLine("                        if (c === \"\\r\".charCodeAt(0) || c === \"\\n\".charCodeAt(0)) {");
file.WriteLine("                            if (this.state !== FIELD_START) {");
file.WriteLine("                                if (5 === this.state) this.valueStart = position + 1;");
file.WriteLine("                                var field = chunk.slice(this.fieldStart, this.valueStart - 1), value = chunk.slice(this.valueStart + (this.valueStart < position && chunk.charCodeAt(this.valueStart) === \" \".charCodeAt(0) ? 1 : 0), position);");
file.WriteLine("                                if (\"data\" === field) this.dataBuffer.push(value); else if (\"id\" === field) this.lastEventIdBuffer = value; else if (\"event\" === field) this.eventTypeBuffer = value; else if (\"retry\" === field) {");
file.WriteLine("                                    this.initialRetry = getDuration(Number(value), this.initialRetry);");
file.WriteLine("                                    this.retry = this.initialRetry;");
file.WriteLine("                                } else if (\"heartbeatTimeout\" === field) {");
file.WriteLine("                                    this.heartbeatTimeout = getDuration(Number(value), this.heartbeatTimeout);");
file.WriteLine("                                    if (0 !== this.timeout) {");
file.WriteLine("                                        clearTimeout(this.timeout);");
file.WriteLine("                                        var that = this;");
file.WriteLine("                                        this.timeout = setTimeout(function() {");
file.WriteLine("                                            that.onTimeout();");
file.WriteLine("                                        }, this.heartbeatTimeout);");
file.WriteLine("                                    }");
file.WriteLine("                                }");
file.WriteLine("                            }");
file.WriteLine("                            if (this.state === FIELD_START) {");
file.WriteLine("                                if (0 !== this.dataBuffer.length) {");
file.WriteLine("                                    this.lastEventId = this.lastEventIdBuffer;");
file.WriteLine("                                    if (\"\" === this.eventTypeBuffer) this.eventTypeBuffer = \"message\";");
file.WriteLine("                                    var event = new MessageEvent(this.eventTypeBuffer, {");
file.WriteLine("                                        data: this.dataBuffer.join(\"\\n\"),");
file.WriteLine("                                        lastEventId: this.lastEventIdBuffer");
file.WriteLine("                                    });");
file.WriteLine("                                    this.es.dispatchEvent(event);");
file.WriteLine("                                    if (\"message\" === this.eventTypeBuffer) fire(this.es, this.es.onmessage, event);");
file.WriteLine("                                    if (this.currentState === CLOSED) return;");
file.WriteLine("                                }");
file.WriteLine("                                this.dataBuffer.length = 0;");
file.WriteLine("                                this.eventTypeBuffer = \"\";");
file.WriteLine("                            }");
file.WriteLine("                            this.state = c === \"\\r\".charCodeAt(0) ? 3 : FIELD_START;");
file.WriteLine("                        } else {");
file.WriteLine("                            if (this.state === FIELD_START) {");
file.WriteLine("                                this.fieldStart = position;");
file.WriteLine("                                this.state = 5;");
file.WriteLine("                            }");
file.WriteLine("                            if (5 === this.state) {");
file.WriteLine("                                if (c === \":\".charCodeAt(0)) {");
file.WriteLine("                                    this.valueStart = position + 1;");
file.WriteLine("                                    this.state = 6;");
file.WriteLine("                                }");
file.WriteLine("                            } else if (6 === this.state) this.state = 7;");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        EventSourceInternal.prototype.onFinish = function() {");
file.WriteLine("            if (this.currentState === OPEN || this.currentState === CONNECTING) {");
file.WriteLine("                this.currentState = WAITING;");
file.WriteLine("                if (0 !== this.timeout) {");
file.WriteLine("                    clearTimeout(this.timeout);");
file.WriteLine("                    this.timeout = 0;");
file.WriteLine("                }");
file.WriteLine("                if (this.retry > 16 * this.initialRetry) this.retry = 16 * this.initialRetry;");
file.WriteLine("                if (this.retry > 18e6) this.retry = 18e6;");
file.WriteLine("                var that = this;");
file.WriteLine("                this.timeout = setTimeout(function() {");
file.WriteLine("                    that.onTimeout();");
file.WriteLine("                }, this.retry);");
file.WriteLine("                this.retry = 2 * this.retry + 1;");
file.WriteLine("                this.readyState = CONNECTING;");
file.WriteLine("                this.es.readyState = CONNECTING;");
file.WriteLine("                var event = new Event(\"error\");");
file.WriteLine("                this.es.dispatchEvent(event);");
file.WriteLine("                fire(this.es, this.es.onerror, event);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        EventSourceInternal.prototype.onTimeout = function() {");
file.WriteLine("            this.timeout = 0;");
file.WriteLine("            if (this.currentState === WAITING) {");
file.WriteLine("                this.wasActivity = !1;");
file.WriteLine("                var that = this;");
file.WriteLine("                this.timeout = setTimeout(function() {");
file.WriteLine("                    that.onTimeout();");
file.WriteLine("                }, this.heartbeatTimeout);");
file.WriteLine("                this.currentState = CONNECTING;");
file.WriteLine("                this.dataBuffer.length = 0;");
file.WriteLine("                this.eventTypeBuffer = \"\";");
file.WriteLine("                this.lastEventIdBuffer = this.lastEventId;");
file.WriteLine("                this.fieldStart = 0;");
file.WriteLine("                this.valueStart = 0;");
file.WriteLine("                this.state = FIELD_START;");
file.WriteLine("                var s = this.url.slice(0, 5);");
file.WriteLine("                if (\"data:\" !== s && \"blob:\" !== s) s = this.url + (-1 === this.url.indexOf(\"?\", 0) ? \"?\" : \"&\") + \"lastEventId=\" + encodeURIComponent(this.lastEventId) + \"&r=\" + (Math.random() + 1).toString().slice(2); else s = this.url;");
file.WriteLine("                try {");
file.WriteLine("                    this.transport.open(s, this.withCredentials);");
file.WriteLine("                } catch (error) {");
file.WriteLine("                    this.close();");
file.WriteLine("                    throw error;");
file.WriteLine("                }");
file.WriteLine("            } else if (!this.wasActivity) {");
file.WriteLine("                throwError(new Error(\"No activity within \" + this.heartbeatTimeout + \" milliseconds. Reconnecting.\"));");
file.WriteLine("                this.transport.cancel();");
file.WriteLine("            } else {");
file.WriteLine("                this.wasActivity = !1;");
file.WriteLine("                var that = this;");
file.WriteLine("                this.timeout = setTimeout(function() {");
file.WriteLine("                    that.onTimeout();");
file.WriteLine("                }, this.heartbeatTimeout);");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        EventSourceInternal.prototype.close = function() {");
file.WriteLine("            this.currentState = CLOSED;");
file.WriteLine("            this.transport.cancel();");
file.WriteLine("            if (0 !== this.timeout) {");
file.WriteLine("                clearTimeout(this.timeout);");
file.WriteLine("                this.timeout = 0;");
file.WriteLine("            }");
file.WriteLine("            this.readyState = CLOSED;");
file.WriteLine("            this.es.readyState = CLOSED;");
file.WriteLine("        };");
file.WriteLine("        F.prototype = EventTarget.prototype;");
file.WriteLine("        EventSource.prototype = new F();");
file.WriteLine("        EventSource.prototype.close = function() {");
file.WriteLine("            this._internal.close();");
file.WriteLine("        };");
file.WriteLine("        F.call(EventSource);");
file.WriteLine("        if (isCORSSupported) EventSource.prototype.withCredentials = undefined;");
file.WriteLine("        if (Transport != undefined && (global.EventSource == undefined || isCORSSupported && !function() {");
file.WriteLine("            return global.EventSource != undefined && \"withCredentials\" in global.EventSource.prototype;");
file.WriteLine("        }())) {");
file.WriteLine("            global.NativeEventSource = global.EventSource;");
file.WriteLine("            global.EventSource = EventSource;");
file.WriteLine("        }");
file.WriteLine("    }(\"undefined\" != typeof window ? window : this);");
file.WriteLine("}, , function(module, exports) {");
file.WriteLine("    function last(array) {");
file.WriteLine("        var length = array ? array.length : 0;");
file.WriteLine("        return length ? array[length - 1] : undefined;");
file.WriteLine("    }");
file.WriteLine("    module.exports = last;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function uniq(array, isSorted, iteratee, thisArg) {");
file.WriteLine("        if (!(array ? array.length : 0)) return [];");
file.WriteLine("        if (null != isSorted && \"boolean\" != typeof isSorted) {");
file.WriteLine("            thisArg = iteratee;");
file.WriteLine("            iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;");
file.WriteLine("            isSorted = !1;");
file.WriteLine("        }");
file.WriteLine("        iteratee = null == iteratee ? iteratee : baseCallback(iteratee, thisArg, 3);");
file.WriteLine("        return isSorted ? sortedUniq(array, iteratee) : baseUniq(array, iteratee);");
file.WriteLine("    }");
file.WriteLine("    var baseCallback = __webpack_require__(432), baseUniq = __webpack_require__(441), isIterateeCall = __webpack_require__(452), sortedUniq = __webpack_require__(454);");
file.WriteLine("    module.exports = uniq;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    (function(global) {");
file.WriteLine("        function SetCache(values) {");
file.WriteLine("            var length = values ? values.length : 0;");
file.WriteLine("            this.data = {");
file.WriteLine("                hash: nativeCreate(null),");
file.WriteLine("                set: new Set()");
file.WriteLine("            };");
file.WriteLine("            for (;length--; ) this.push(values[length]);");
file.WriteLine("        }");
file.WriteLine("        var cachePush = __webpack_require__(444), getNative = __webpack_require__(128), Set = getNative(global, \"Set\"), nativeCreate = getNative(Object, \"create\");");
file.WriteLine("        SetCache.prototype.push = cachePush;");
file.WriteLine("        module.exports = SetCache;");
file.WriteLine("    }).call(exports, __webpack_require__(48));");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function arraySome(array, predicate) {");
file.WriteLine("        for (var index = -1, length = array.length; ++index < length; ) if (predicate(array[index], index, array)) return !0;");
file.WriteLine("        return !1;");
file.WriteLine("    }");
file.WriteLine("    module.exports = arraySome;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseCallback(func, thisArg, argCount) {");
file.WriteLine("        var type = typeof func;");
file.WriteLine("        if (\"function\" == type) return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);");
file.WriteLine("        if (null == func) return identity;");
file.WriteLine("        if (\"object\" == type) return baseMatches(func); else return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);");
file.WriteLine("    }");
file.WriteLine("    var baseMatches = __webpack_require__(436), baseMatchesProperty = __webpack_require__(437), bindCallback = __webpack_require__(442), identity = __webpack_require__(215), property = __webpack_require__(460);");
file.WriteLine("    module.exports = baseCallback;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseIndexOf(array, value, fromIndex) {");
file.WriteLine("        if (value !== value) return indexOfNaN(array, fromIndex);");
file.WriteLine("        for (var index = fromIndex - 1, length = array.length; ++index < length; ) if (array[index] === value) return index;");
file.WriteLine("        return -1;");
file.WriteLine("    }");
file.WriteLine("    var indexOfNaN = __webpack_require__(451);");
file.WriteLine("    module.exports = baseIndexOf;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {");
file.WriteLine("        var objIsArr = isArray(object), othIsArr = isArray(other), objTag = arrayTag, othTag = arrayTag;");
file.WriteLine("        if (!objIsArr) {");
file.WriteLine("            objTag = objToString.call(object);");
file.WriteLine("            if (objTag == argsTag) objTag = objectTag; else if (objTag != objectTag) objIsArr = isTypedArray(object);");
file.WriteLine("        }");
file.WriteLine("        if (!othIsArr) {");
file.WriteLine("            othTag = objToString.call(other);");
file.WriteLine("            if (othTag == argsTag) othTag = objectTag; else if (othTag != objectTag) othIsArr = isTypedArray(other);");
file.WriteLine("        }");
file.WriteLine("        var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;");
file.WriteLine("        if (isSameTag && !objIsArr && !objIsObj) return equalByTag(object, other, objTag);");
file.WriteLine("        if (!isLoose) {");
file.WriteLine("            var objIsWrapped = objIsObj && hasOwnProperty.call(object, \"__wrapped__\"), othIsWrapped = othIsObj && hasOwnProperty.call(other, \"__wrapped__\");");
file.WriteLine("            if (objIsWrapped || othIsWrapped) return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);");
file.WriteLine("        }");
file.WriteLine("        if (!isSameTag) return !1;");
file.WriteLine("        stackA || (stackA = []);");
file.WriteLine("        stackB || (stackB = []);");
file.WriteLine("        for (var length = stackA.length; length--; ) if (stackA[length] == object) return stackB[length] == other;");
file.WriteLine("        stackA.push(object);");
file.WriteLine("        stackB.push(other);");
file.WriteLine("        var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);");
file.WriteLine("        stackA.pop();");
file.WriteLine("        stackB.pop();");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    var equalArrays = __webpack_require__(446), equalByTag = __webpack_require__(447), equalObjects = __webpack_require__(448), isArray = __webpack_require__(68), isTypedArray = __webpack_require__(457), argsTag = \"[object Arguments]\", arrayTag = \"[object Array]\", objectTag = \"[object Object]\", objectProto = Object.prototype, hasOwnProperty = objectProto.hasOwnProperty, objToString = objectProto.toString;");
file.WriteLine("    module.exports = baseIsEqualDeep;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseIsMatch(object, matchData, customizer) {");
file.WriteLine("        var index = matchData.length, length = index, noCustomizer = !customizer;");
file.WriteLine("        if (null == object) return !length;");
file.WriteLine("        object = toObject(object);");
file.WriteLine("        for (;index--; ) {");
file.WriteLine("            var data = matchData[index];");
file.WriteLine("            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return !1;");
file.WriteLine("        }");
file.WriteLine("        for (;++index < length; ) {");
file.WriteLine("            data = matchData[index];");
file.WriteLine("            var key = data[0], objValue = object[key], srcValue = data[1];");
file.WriteLine("            if (noCustomizer && data[2]) {");
file.WriteLine("                if (objValue === undefined && !(key in object)) return !1;");
file.WriteLine("            } else {");
file.WriteLine("                var result = customizer ? customizer(objValue, srcValue, key) : undefined;");
file.WriteLine("                if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, !0) : result)) return !1;");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("        return !0;");
file.WriteLine("    }");
file.WriteLine("    var baseIsEqual = __webpack_require__(208), toObject = __webpack_require__(67);");
file.WriteLine("    module.exports = baseIsMatch;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseMatches(source) {");
file.WriteLine("        var matchData = getMatchData(source);");
file.WriteLine("        if (1 == matchData.length && matchData[0][2]) {");
file.WriteLine("            var key = matchData[0][0], value = matchData[0][1];");
file.WriteLine("            return function(object) {");
file.WriteLine("                if (null == object) return !1; else return object[key] === value && (value !== undefined || key in toObject(object));");
file.WriteLine("            };");
file.WriteLine("        }");
file.WriteLine("        return function(object) {");
file.WriteLine("            return baseIsMatch(object, matchData);");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    var baseIsMatch = __webpack_require__(435), getMatchData = __webpack_require__(450), toObject = __webpack_require__(67);");
file.WriteLine("    module.exports = baseMatches;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseMatchesProperty(path, srcValue) {");
file.WriteLine("        var isArr = isArray(path), isCommon = isKey(path) && isStrictComparable(srcValue), pathKey = path + \"\";");
file.WriteLine("        path = toPath(path);");
file.WriteLine("        return function(object) {");
file.WriteLine("            if (null == object) return !1;");
file.WriteLine("            var key = pathKey;");
file.WriteLine("            object = toObject(object);");
file.WriteLine("            if ((isArr || !isCommon) && !(key in object)) {");
file.WriteLine("                object = 1 == path.length ? object : baseGet(object, baseSlice(path, 0, -1));");
file.WriteLine("                if (null == object) return !1;");
file.WriteLine("                key = last(path);");
file.WriteLine("                object = toObject(object);");
file.WriteLine("            }");
file.WriteLine("            return object[key] === srcValue ? srcValue !== undefined || key in object : baseIsEqual(srcValue, object[key], undefined, !0);");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    var baseGet = __webpack_require__(207), baseIsEqual = __webpack_require__(208), baseSlice = __webpack_require__(439), isArray = __webpack_require__(68), isKey = __webpack_require__(210), isStrictComparable = __webpack_require__(211), last = __webpack_require__(428), toObject = __webpack_require__(67), toPath = __webpack_require__(212);");
file.WriteLine("    module.exports = baseMatchesProperty;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function basePropertyDeep(path) {");
file.WriteLine("        var pathKey = path + \"\";");
file.WriteLine("        path = toPath(path);");
file.WriteLine("        return function(object) {");
file.WriteLine("            return baseGet(object, path, pathKey);");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    var baseGet = __webpack_require__(207), toPath = __webpack_require__(212);");
file.WriteLine("    module.exports = basePropertyDeep;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function baseSlice(array, start, end) {");
file.WriteLine("        var index = -1, length = array.length;");
file.WriteLine("        start = null == start ? 0 : +start || 0;");
file.WriteLine("        if (start < 0) start = -start > length ? 0 : length + start;");
file.WriteLine("        end = end === undefined || end > length ? length : +end || 0;");
file.WriteLine("        if (end < 0) end += length;");
file.WriteLine("        length = start > end ? 0 : end - start >>> 0;");
file.WriteLine("        start >>>= 0;");
file.WriteLine("        for (var result = Array(length); ++index < length; ) result[index] = array[index + start];");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    module.exports = baseSlice;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function baseToString(value) {");
file.WriteLine("        return null == value ? \"\" : value + \"\";");
file.WriteLine("    }");
file.WriteLine("    module.exports = baseToString;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function baseUniq(array, iteratee) {");
file.WriteLine("        var index = -1, indexOf = baseIndexOf, length = array.length, isCommon = !0, isLarge = isCommon && length >= LARGE_ARRAY_SIZE, seen = isLarge ? createCache() : null, result = [];");
file.WriteLine("        if (seen) {");
file.WriteLine("            indexOf = cacheIndexOf;");
file.WriteLine("            isCommon = !1;");
file.WriteLine("        } else {");
file.WriteLine("            isLarge = !1;");
file.WriteLine("            seen = iteratee ? [] : result;");
file.WriteLine("        }");
file.WriteLine("        outer: for (;++index < length; ) {");
file.WriteLine("            var value = array[index], computed = iteratee ? iteratee(value, index, array) : value;");
file.WriteLine("            if (isCommon && value === value) {");
file.WriteLine("                for (var seenIndex = seen.length; seenIndex--; ) if (seen[seenIndex] === computed) continue outer;");
file.WriteLine("                if (iteratee) seen.push(computed);");
file.WriteLine("                result.push(value);");
file.WriteLine("            } else if (indexOf(seen, computed, 0) < 0) {");
file.WriteLine("                if (iteratee || isLarge) seen.push(computed);");
file.WriteLine("                result.push(value);");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    var baseIndexOf = __webpack_require__(433), cacheIndexOf = __webpack_require__(443), createCache = __webpack_require__(445), LARGE_ARRAY_SIZE = 200;");
file.WriteLine("    module.exports = baseUniq;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function bindCallback(func, thisArg, argCount) {");
file.WriteLine("        if (\"function\" != typeof func) return identity;");
file.WriteLine("        if (thisArg === undefined) return func;");
file.WriteLine("        switch (argCount) {");
file.WriteLine("          case 1:");
file.WriteLine("            return function(value) {");
file.WriteLine("                return func.call(thisArg, value);");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case 3:");
file.WriteLine("            return function(value, index, collection) {");
file.WriteLine("                return func.call(thisArg, value, index, collection);");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case 4:");
file.WriteLine("            return function(accumulator, value, index, collection) {");
file.WriteLine("                return func.call(thisArg, accumulator, value, index, collection);");
file.WriteLine("            };");
file.WriteLine("");
file.WriteLine("          case 5:");
file.WriteLine("            return function(value, other, key, object, source) {");
file.WriteLine("                return func.call(thisArg, value, other, key, object, source);");
file.WriteLine("            };");
file.WriteLine("        }");
file.WriteLine("        return function() {");
file.WriteLine("            return func.apply(thisArg, arguments);");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    var identity = __webpack_require__(215);");
file.WriteLine("    module.exports = bindCallback;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function cacheIndexOf(cache, value) {");
file.WriteLine("        var data = cache.data;");
file.WriteLine("        return (\"string\" == typeof value || isObject(value) ? data.set.has(value) : data.hash[value]) ? 0 : -1;");
file.WriteLine("    }");
file.WriteLine("    var isObject = __webpack_require__(42);");
file.WriteLine("    module.exports = cacheIndexOf;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function cachePush(value) {");
file.WriteLine("        var data = this.data;");
file.WriteLine("        if (\"string\" == typeof value || isObject(value)) data.set.add(value); else data.hash[value] = !0;");
file.WriteLine("    }");
file.WriteLine("    var isObject = __webpack_require__(42);");
file.WriteLine("    module.exports = cachePush;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    (function(global) {");
file.WriteLine("        function createCache(values) {");
file.WriteLine("            return nativeCreate && Set ? new SetCache(values) : null;");
file.WriteLine("        }");
file.WriteLine("        var SetCache = __webpack_require__(430), getNative = __webpack_require__(128), Set = getNative(global, \"Set\"), nativeCreate = getNative(Object, \"create\");");
file.WriteLine("        module.exports = createCache;");
file.WriteLine("    }).call(exports, __webpack_require__(48));");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {");
file.WriteLine("        var index = -1, arrLength = array.length, othLength = other.length;");
file.WriteLine("        if (arrLength != othLength && !(isLoose && othLength > arrLength)) return !1;");
file.WriteLine("        for (;++index < arrLength; ) {");
file.WriteLine("            var arrValue = array[index], othValue = other[index], result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;");
file.WriteLine("            if (result !== undefined) {");
file.WriteLine("                if (result) continue;");
file.WriteLine("                return !1;");
file.WriteLine("            }");
file.WriteLine("            if (isLoose) {");
file.WriteLine("                if (!arraySome(other, function(othValue) {");
file.WriteLine("                    return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);");
file.WriteLine("                })) return !1;");
file.WriteLine("            } else if (arrValue !== othValue && !equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB)) return !1;");
file.WriteLine("        }");
file.WriteLine("        return !0;");
file.WriteLine("    }");
file.WriteLine("    var arraySome = __webpack_require__(431);");
file.WriteLine("    module.exports = equalArrays;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function equalByTag(object, other, tag) {");
file.WriteLine("        switch (tag) {");
file.WriteLine("          case boolTag:");
file.WriteLine("          case dateTag:");
file.WriteLine("            return +object == +other;");
file.WriteLine("");
file.WriteLine("          case errorTag:");
file.WriteLine("            return object.name == other.name && object.message == other.message;");
file.WriteLine("");
file.WriteLine("          case numberTag:");
file.WriteLine("            return object != +object ? other != +other : object == +other;");
file.WriteLine("");
file.WriteLine("          case regexpTag:");
file.WriteLine("          case stringTag:");
file.WriteLine("            return object == other + \"\";");
file.WriteLine("        }");
file.WriteLine("        return !1;");
file.WriteLine("    }");
file.WriteLine("    var boolTag = \"[object Boolean]\", dateTag = \"[object Date]\", errorTag = \"[object Error]\", numberTag = \"[object Number]\", regexpTag = \"[object RegExp]\", stringTag = \"[object String]\";");
file.WriteLine("    module.exports = equalByTag;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {");
file.WriteLine("        var objProps = keys(object), objLength = objProps.length;");
file.WriteLine("        if (objLength != keys(other).length && !isLoose) return !1;");
file.WriteLine("        for (var index = objLength; index--; ) {");
file.WriteLine("            var key = objProps[index];");
file.WriteLine("            if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) return !1;");
file.WriteLine("        }");
file.WriteLine("        for (var skipCtor = isLoose; ++index < objLength; ) {");
file.WriteLine("            key = objProps[index];");
file.WriteLine("            var objValue = object[key], othValue = other[key], result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined;");
file.WriteLine("            if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) return !1;");
file.WriteLine("            skipCtor || (skipCtor = \"constructor\" == key);");
file.WriteLine("        }");
file.WriteLine("        if (!skipCtor) {");
file.WriteLine("            var objCtor = object.constructor, othCtor = other.constructor;");
file.WriteLine("            if (objCtor != othCtor && \"constructor\" in object && \"constructor\" in other && !(\"function\" == typeof objCtor && objCtor instanceof objCtor && \"function\" == typeof othCtor && othCtor instanceof othCtor)) return !1;");
file.WriteLine("        }");
file.WriteLine("        return !0;");
file.WriteLine("    }");
file.WriteLine("    var keys = __webpack_require__(214), objectProto = Object.prototype, hasOwnProperty = objectProto.hasOwnProperty;");
file.WriteLine("    module.exports = equalObjects;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    var baseProperty = __webpack_require__(209), getLength = baseProperty(\"length\");");
file.WriteLine("    module.exports = getLength;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function getMatchData(object) {");
file.WriteLine("        for (var result = pairs(object), length = result.length; length--; ) result[length][2] = isStrictComparable(result[length][1]);");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    var isStrictComparable = __webpack_require__(211), pairs = __webpack_require__(459);");
file.WriteLine("    module.exports = getMatchData;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function indexOfNaN(array, fromIndex, fromRight) {");
file.WriteLine("        for (var length = array.length, index = fromIndex + (fromRight ? 0 : -1); fromRight ? index-- : ++index < length; ) {");
file.WriteLine("            var other = array[index];");
file.WriteLine("            if (other !== other) return index;");
file.WriteLine("        }");
file.WriteLine("        return -1;");
file.WriteLine("    }");
file.WriteLine("    module.exports = indexOfNaN;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function isIterateeCall(value, index, object) {");
file.WriteLine("        if (!isObject(object)) return !1;");
file.WriteLine("        var type = typeof index;");
file.WriteLine("        if (\"number\" == type ? isArrayLike(object) && isIndex(index, object.length) : \"string\" == type && index in object) {");
file.WriteLine("            var other = object[index];");
file.WriteLine("            return value === value ? value === other : other !== other;");
file.WriteLine("        }");
file.WriteLine("        return !1;");
file.WriteLine("    }");
file.WriteLine("    var isArrayLike = __webpack_require__(169), isIndex = __webpack_require__(170), isObject = __webpack_require__(42);");
file.WriteLine("    module.exports = isIterateeCall;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function shimKeys(object) {");
file.WriteLine("        for (var props = keysIn(object), propsLength = props.length, length = propsLength && object.length, allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object)), index = -1, result = []; ++index < propsLength; ) {");
file.WriteLine("            var key = props[index];");
file.WriteLine("            if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) result.push(key);");
file.WriteLine("        }");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    var isArguments = __webpack_require__(213), isArray = __webpack_require__(68), isIndex = __webpack_require__(170), isLength = __webpack_require__(78), keysIn = __webpack_require__(458), objectProto = Object.prototype, hasOwnProperty = objectProto.hasOwnProperty;");
file.WriteLine("    module.exports = shimKeys;");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    function sortedUniq(array, iteratee) {");
file.WriteLine("        for (var seen, index = -1, length = array.length, resIndex = -1, result = []; ++index < length; ) {");
file.WriteLine("            var value = array[index], computed = iteratee ? iteratee(value, index, array) : value;");
file.WriteLine("            if (!index || seen !== computed) {");
file.WriteLine("                seen = computed;");
file.WriteLine("                result[++resIndex] = value;");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    module.exports = sortedUniq;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function isFunction(value) {");
file.WriteLine("        return isObject(value) && objToString.call(value) == funcTag;");
file.WriteLine("    }");
file.WriteLine("    var isObject = __webpack_require__(42), funcTag = \"[object Function]\", objectProto = Object.prototype, objToString = objectProto.toString;");
file.WriteLine("    module.exports = isFunction;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function isNative(value) {");
file.WriteLine("        if (null == value) return !1;");
file.WriteLine("        if (isFunction(value)) return reIsNative.test(fnToString.call(value)); else return isObjectLike(value) && reIsHostCtor.test(value);");
file.WriteLine("    }");
file.WriteLine("    var isFunction = __webpack_require__(455), isObjectLike = __webpack_require__(79), reIsHostCtor = /^\\[object .+?Constructor\\]$/, objectProto = Object.prototype, fnToString = Function.prototype.toString, hasOwnProperty = objectProto.hasOwnProperty, reIsNative = RegExp(\"^\" + fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\");");
file.WriteLine("    module.exports = isNative;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function isTypedArray(value) {");
file.WriteLine("        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];");
file.WriteLine("    }");
file.WriteLine("    var isLength = __webpack_require__(78), isObjectLike = __webpack_require__(79), typedArrayTags = {};");
file.WriteLine("    typedArrayTags[\"[object Float32Array]\"] = typedArrayTags[\"[object Float64Array]\"] = typedArrayTags[\"[object Int8Array]\"] = typedArrayTags[\"[object Int16Array]\"] = typedArrayTags[\"[object Int32Array]\"] = typedArrayTags[\"[object Uint8Array]\"] = typedArrayTags[\"[object Uint8ClampedArray]\"] = typedArrayTags[\"[object Uint16Array]\"] = typedArrayTags[\"[object Uint32Array]\"] = !0;");
file.WriteLine("    typedArrayTags[\"[object Arguments]\"] = typedArrayTags[\"[object Array]\"] = typedArrayTags[\"[object ArrayBuffer]\"] = typedArrayTags[\"[object Boolean]\"] = typedArrayTags[\"[object Date]\"] = typedArrayTags[\"[object Error]\"] = typedArrayTags[\"[object Function]\"] = typedArrayTags[\"[object Map]\"] = typedArrayTags[\"[object Number]\"] = typedArrayTags[\"[object Object]\"] = typedArrayTags[\"[object RegExp]\"] = typedArrayTags[\"[object Set]\"] = typedArrayTags[\"[object String]\"] = typedArrayTags[\"[object WeakMap]\"] = !1;");
file.WriteLine("    var objectProto = Object.prototype, objToString = objectProto.toString;");
file.WriteLine("    module.exports = isTypedArray;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function keysIn(object) {");
file.WriteLine("        if (null == object) return [];");
file.WriteLine("        if (!isObject(object)) object = Object(object);");
file.WriteLine("        var length = object.length;");
file.WriteLine("        length = length && isLength(length) && (isArray(object) || isArguments(object)) && length || 0;");
file.WriteLine("        for (var Ctor = object.constructor, index = -1, isProto = \"function\" == typeof Ctor && Ctor.prototype === object, result = Array(length), skipIndexes = length > 0; ++index < length; ) result[index] = index + \"\";");
file.WriteLine("        for (var key in object) if ((!skipIndexes || !isIndex(key, length)) && (\"constructor\" != key || !isProto && hasOwnProperty.call(object, key))) result.push(key);");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    var isArguments = __webpack_require__(213), isArray = __webpack_require__(68), isIndex = __webpack_require__(170), isLength = __webpack_require__(78), isObject = __webpack_require__(42), objectProto = Object.prototype, hasOwnProperty = objectProto.hasOwnProperty;");
file.WriteLine("    module.exports = keysIn;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function pairs(object) {");
file.WriteLine("        object = toObject(object);");
file.WriteLine("        for (var index = -1, props = keys(object), length = props.length, result = Array(length); ++index < length; ) {");
file.WriteLine("            var key = props[index];");
file.WriteLine("            result[index] = [ key, object[key] ];");
file.WriteLine("        }");
file.WriteLine("        return result;");
file.WriteLine("    }");
file.WriteLine("    var keys = __webpack_require__(214), toObject = __webpack_require__(67);");
file.WriteLine("    module.exports = pairs;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    function property(path) {");
file.WriteLine("        return isKey(path) ? baseProperty(path) : basePropertyDeep(path);");
file.WriteLine("    }");
file.WriteLine("    var baseProperty = __webpack_require__(209), basePropertyDeep = __webpack_require__(438), isKey = __webpack_require__(210);");
file.WriteLine("    module.exports = property;");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getSampling = undefined;");
file.WriteLine("    var _registry = __webpack_require__(27), samplingPath = \"HKCU\\\\SOFTWARE\\\\drpsu\\\\sampling\", getSampling = exports.getSampling = function() {");
file.WriteLine("        if ((0, _registry.RegExists)(samplingPath)) return parseFloat((0, _registry.RegRead)(samplingPath)); else {");
file.WriteLine("            var sampling = Math.random();");
file.WriteLine("            (0, _registry.RegWrite)(samplingPath, sampling.toString(), \"REG_SZ\");");
file.WriteLine("            return sampling;");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    exports[\"default\"] = function(percent) {");
file.WriteLine("        var starting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0, seed = getSampling();");
file.WriteLine("        return seed >= starting && seed < percent + starting;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.getDiag = undefined;");
file.WriteLine("    var _wmi = __webpack_require__(3), _utils = __webpack_require__(2), isSecurityCenterServiceRunning = function() {");
file.WriteLine("        var service = (0, _wmi.getWMIObjects)([ \"State\", \"Name\" ], \"Win32_Service\", 'Name=\"wscsvc\"')[0];");
file.WriteLine("        return service && \"Running\" === service.State;");
file.WriteLine("    }, getAntivirusStatus = function(antivirus) {");
file.WriteLine("        if (!_utils.isOldOS) {");
file.WriteLine("            var productState = parseInt(antivirus.productState, 10).toString(16), upToDateState = productState.substring(productState.length - 2, productState.length), avActiveState = productState.substring(productState.length - 4, productState.length - 2);");
file.WriteLine("            return {");
file.WriteLine("                upToDate: \"00\" === upToDateState,");
file.WriteLine("                active: \"10\" === avActiveState || \"11\" === avActiveState");
file.WriteLine("            };");
file.WriteLine("        } else {");
file.WriteLine("            return {");
file.WriteLine("                upToDate: \"false\" !== antivirus.productUptoDate,");
file.WriteLine("                active: \"false\" !== antivirus.onAccessScanningEnabled");
file.WriteLine("            };");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    exports.getDiag = function() {");
file.WriteLine("        var _getWMIObjects$ = (0, _wmi.getWMIObjects)([ \"Caption\", \"Manufacturer\", \"Model\", \"TotalPhysicalMemory\" ], \"Win32_ComputerSystem\")[0], Caption = _getWMIObjects$.Caption, Manufacturer = _getWMIObjects$.Manufacturer, Model = _getWMIObjects$.Model, TotalPhysicalMemory = _getWMIObjects$.TotalPhysicalMemory, _getWMIObjects$2 = (0, ");
file.WriteLine("        _wmi.getWMIObjects)([ \"Manufacturer\", \"SMBIOSBIOSVersion\", \"ReleaseDate\" ], \"Win32_BIOS\")[0], BIOSManufacturer = _getWMIObjects$2.Manufacturer, SMBIOSBIOSVersion = _getWMIObjects$2.SMBIOSBIOSVersion, BIOSDate = _getWMIObjects$2.ReleaseDate, _getWMIObjects$3 = (0, ");
file.WriteLine("        _wmi.getWMIObjects)([ \"Caption\", \"CSDVersion\", \"OSArchitecture\" ], \"Win32_OperatingSystem\")[0], OSCaption = _getWMIObjects$3.Caption, CSDVersion = _getWMIObjects$3.CSDVersion, OSArchitecture = _getWMIObjects$3.OSArchitecture, videoAdapters = (0, ");
file.WriteLine("        _wmi.getWMIObjects)([ \"Caption\", \"AdapterRAM\" ], \"Win32_VideoController\"), diskDrives = (0, ");
file.WriteLine("        _wmi.getWMIObjects)([ \"Model\", \"Status\" ], \"Win32_DiskDrive\"), diag = {");
file.WriteLine("            caption: Caption,");
file.WriteLine("            model: Manufacturer + \" \" + Model,");
file.WriteLine("            processor: (0, _wmi.getWMIObjects)([ \"Name\" ], \"Win32_Processor\")[0].Name.trim(),");
file.WriteLine("            ram: Math.floor(TotalPhysicalMemory / 1024 / 1024) + \" MB\",");
file.WriteLine("            bios: BIOSManufacturer + \" \" + SMBIOSBIOSVersion + \", \" + [ BIOSDate.slice(0, 4), BIOSDate.slice(4, 6), BIOSDate.slice(6, 8) ].join(\".\")");
file.WriteLine("        };");
file.WriteLine("        diag.system = OSCaption.trim();");
file.WriteLine("        if (CSDVersion) diag.system += \" \" + CSDVersion;");
file.WriteLine("        if (OSArchitecture) diag.system += \" \" + OSArchitecture;");
file.WriteLine("        diag.videos = videoAdapters.map(function(adapter) {");
file.WriteLine("            var res = {");
file.WriteLine("                model: adapter.Caption");
file.WriteLine("            };");
file.WriteLine("            if (adapter.AdapterRAM) res.ram = Math.floor(adapter.AdapterRAM / 1024 / 1024) + \" MB\";");
file.WriteLine("            return res;");
file.WriteLine("        });");
file.WriteLine("        diag.disks = diskDrives.map(function(disk) {");
file.WriteLine("            return {");
file.WriteLine("                model: disk.Model,");
file.WriteLine("                status: disk.Status");
file.WriteLine("            };");
file.WriteLine("        });");
file.WriteLine("        diag.antiviruses = [];");
file.WriteLine("        try {");
file.WriteLine("            if (isSecurityCenterServiceRunning()) {");
file.WriteLine("                var antiviruses = (0, _wmi.getWMIObjects)([ \"displayName\", \"productState\", \"productUptoDate\", \"onAccessScanningEnabled\" ], \"AntiVirusProduct\", null, _utils.objWMIServiceSC);");
file.WriteLine("                diag.antiviruses = antiviruses.map(function(antivirus) {");
file.WriteLine("                    var _getAntivirusStatus = getAntivirusStatus(antivirus), upToDate = _getAntivirusStatus.upToDate, active = _getAntivirusStatus.active;");
file.WriteLine("                    return {");
file.WriteLine("                        name: antivirus.displayName,");
file.WriteLine("                        active: active,");
file.WriteLine("                        uptodate: upToDate");
file.WriteLine("                    };");
file.WriteLine("                });");
file.WriteLine("            }");
file.WriteLine("        } catch (e) {");
file.WriteLine("            diag.antiviruses = [];");
file.WriteLine("        }");
file.WriteLine("        return diag;");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _logs = __webpack_require__(16), _config = __webpack_require__(6), _system = __webpack_require__(1), _wmi = __webpack_require__(3), _utils = __webpack_require__(2), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), AppName = _config.application.AppName, DisplayName = _config.application.DisplayName, DisplayVersion = _config.application.DisplayVersion, AppExecutable = _config.application.AppExecutable, Uninstall = _config.application.Uninstall, DisplayIcon = _config.application.DisplayIcon, Publisher = _config.application.Publisher, REG_CV = \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", Watcher = function() {");
file.WriteLine("        function Watcher() {");
file.WriteLine("            _classCallCheck(this, Watcher);");
file.WriteLine("        }");
file.WriteLine("        Watcher.prototype.install = function() {");
file.WriteLine("            (0, _utils.fixUninstallRegistryKey)();");
file.WriteLine("            var app = _utils.AppPathRoot + \"\\\\\" + AppExecutable;");
file.WriteLine("            this.addToStartup({");
file.WriteLine("                AppName: AppName,");
file.WriteLine("                app: app");
file.WriteLine("            });");
file.WriteLine("            this.removeTask({");
file.WriteLine("                AppName: AppName");
file.WriteLine("            });");
file.WriteLine("            var d = new Date();");
file.WriteLine("            d.setMinutes(d.getMinutes() + 1);");
file.WriteLine("            var startTime = (0, _utils.getTimeFromDate)(d);");
file.WriteLine("            this.createTask({");
file.WriteLine("                startTime: startTime,");
file.WriteLine("                app: app,");
file.WriteLine("                args: \"\",");
file.WriteLine("                AppName: AppName");
file.WriteLine("            });");
file.WriteLine("            this.addToUninstallList({");
file.WriteLine("                AppName: AppName,");
file.WriteLine("                DisplayName: DisplayName,");
file.WriteLine("                UninstallString: '\"' + _utils.AppPathRoot + \"\\\\\" + Uninstall.cmd + '\" ' + Uninstall.arguments,");
file.WriteLine("                DisplayVersion: DisplayVersion,");
file.WriteLine("                DisplayIcon: _utils.AppPathRoot + \"\\\\\" + DisplayIcon,");
file.WriteLine("                Publisher: Publisher");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.getNotificationLang = function() {");
file.WriteLine("            var countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("            if (\"ru\" === window.lang || \"ru\" === countryCode.toLowerCase()) return \"ru\"; else return \"en\";");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.showUninstallConfirm = function() {");
file.WriteLine("            function showUninstallConfirm() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var result, experiment, lang, notification, notificationResult;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        result = void 0;");
file.WriteLine("                        experiment = _statistics2[\"default\"].experiment;");
file.WriteLine("                        if (\"control\" !== experiment) {");
file.WriteLine("                            _context.next = 6;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        result = window.confirm(_config.application.UninstallConfirm);");
file.WriteLine("                        _context.next = 12;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        lang = this.getNotificationLang();");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"uninstall\", {");
file.WriteLine("                            lang: lang,");
file.WriteLine("                            experiment: experiment");
file.WriteLine("                        });");
file.WriteLine("                        _context.next = 10;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        notificationResult = _context.sent;");
file.WriteLine("                        result = \"unsubscribe\" === notificationResult;");
file.WriteLine("");
file.WriteLine("                      case 12:");
file.WriteLine("                        return _context.abrupt(\"return\", result);");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return showUninstallConfirm;");
file.WriteLine("        }();");
file.WriteLine("        Watcher.prototype._uninstall = function() {");
file.WriteLine("            this.removeTask({");
file.WriteLine("                AppName: AppName");
file.WriteLine("            });");
file.WriteLine("            this.removeFromStartup({");
file.WriteLine("                AppName: AppName,");
file.WriteLine("                app: _utils.AppPathRoot + \"\\\\\" + AppExecutable");
file.WriteLine("            });");
file.WriteLine("            this.removeFromUninstallList({");
file.WriteLine("                AppName: AppName,");
file.WriteLine("                DisplayName: DisplayName,");
file.WriteLine("                UninstallString: '\"Path to the uninstaller .exe\"'");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.uninstall = function() {");
file.WriteLine("            function uninstall(_x) {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(isSilent) {");
file.WriteLine("                var confirmResult;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context2.t0 = isSilent;");
file.WriteLine("                        if (_context2.t0) {");
file.WriteLine("                            _context2.next = 5;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context2.next = 4;");
file.WriteLine("                        return this.showUninstallConfirm();");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        _context2.t0 = _context2.sent;");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        confirmResult = _context2.t0;");
file.WriteLine("                        if (confirmResult) {");
file.WriteLine("                            _statistics2[\"default\"].event({");
file.WriteLine("                                action: \"application uninstalled\"");
file.WriteLine("                            }, [], !0);");
file.WriteLine("                            this._uninstall();");
file.WriteLine("                            (0, _utils.removeAppFolder)();");
file.WriteLine("                            try {");
file.WriteLine("                                (0, _system.killProcess)(\"%DriverPack Notifier%relaunch%\");");
file.WriteLine("                            } catch (e) {}");
file.WriteLine("                        }");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return uninstall;");
file.WriteLine("        }();");
file.WriteLine("        Watcher.prototype.upgrade = function(installer) {");
file.WriteLine("            this._uninstall();");
file.WriteLine("            (0, _utils.startCommand)(installer + \" /S /channel=Notifier\");");
file.WriteLine("            (0, _utils.removeAppFolder)();");
file.WriteLine("            try {");
file.WriteLine("                (0, _system.killProcess)(\"%DriverPack Notifier%relaunch%\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.addToStartup = function(a) {");
file.WriteLine("            (0, _logs.log)(\"Adding \" + a.app + \" to Startup\");");
file.WriteLine("            (0, _system.RegWrite)(REG_CV + \"\\\\Run\\\\\" + a.AppName, a.app + \" --run startup\");");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.removeFromStartup = function(a) {");
file.WriteLine("            (0, _logs.log)(\"Removing \" + a.app + \" from Startup\");");
file.WriteLine("            (0, _system.RegDelete)(REG_CV + \"\\\\Run\\\\\" + a.AppName);");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.addToUninstallList = function(a) {");
file.WriteLine("            (0, _logs.log)(\"Adding \" + a.DisplayName + \" to Uninstall list\");");
file.WriteLine("            var reg = REG_CV + \"\\\\Uninstall\\\\\" + a.AppName;");
file.WriteLine("            (0, _system.RegWrite)(reg + \"\\\\DisplayName\", a.DisplayName);");
file.WriteLine("            (0, _system.RegWrite)(reg + \"\\\\UninstallString\", a.UninstallString);");
file.WriteLine("            (0, _system.RegWrite)(reg + \"\\\\DisplayVersion\", a.DisplayVersion);");
file.WriteLine("            (0, _system.RegWrite)(reg + \"\\\\DisplayIcon\", a.DisplayIcon);");
file.WriteLine("            (0, _system.RegWrite)(reg + \"\\\\Publisher\", a.Publisher);");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.removeFromUninstallList = function(a) {");
file.WriteLine("            (0, _logs.log)(\"Removing \" + a.DisplayName + \" from Uninstall list\");");
file.WriteLine("            (0, _system.RegDelete)(REG_CV + \"\\\\Uninstall\\\\\" + a.AppName + \"\\\\\");");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.createTask = function(a) {");
file.WriteLine("            (0, _logs.log)(\"Creating scheduled task. Run at \" + a.startTime);");
file.WriteLine("            try {");
file.WriteLine("                if (_utils.isOldOS) {");
file.WriteLine("                    a.command = '\"' + a.app + '\"';");
file.WriteLine("                    _wmi.objWMIService.Get(\"Win32_ScheduledJob\").Create(a.command, (0, _utils.formatTime)(a.startTime), !0, 127, 0, !0, \"\");");
file.WriteLine("                } else {");
file.WriteLine("                    a.command = \"\\\"'\" + a.app + \"'\\\"\";");
file.WriteLine("                    var creatCmd = 'schtasks /Create /TN \"' + a.AppName + '\" /SC DAILY /ST ' + a.startTime + \" /TR \" + a.command;");
file.WriteLine("                    _system.WshShell.Run(creatCmd, 0);");
file.WriteLine("                }");
file.WriteLine("            } catch (err) {}");
file.WriteLine("        };");
file.WriteLine("        Watcher.prototype.removeTask = function(a) {");
file.WriteLine("            (0, _logs.log)(\"Removing scheduled task. Run at \" + a.startTime);");
file.WriteLine("            try {");
file.WriteLine("                if (_utils.isOldOS) {");
file.WriteLine("                    var colItems = _wmi.objWMIService.ExecQuery('SELECT * FROM Win32_ScheduledJob WHERE Command LIKE \"%DriverPack Notifier\\\\%DriverPackNotifier.exe%\"');");
file.WriteLine("                    (0, _system.iterate)(colItems, function(item) {");
file.WriteLine("                        return item.Delete();");
file.WriteLine("                    });");
file.WriteLine("                } else {");
file.WriteLine("                    var creatCmd = 'schtasks /Delete /TN \"' + a.AppName + '\" /F';");
file.WriteLine("                    _system.WshShell.Run(creatCmd, 0, !0);");
file.WriteLine("                }");
file.WriteLine("            } catch (err) {}");
file.WriteLine("        };");
file.WriteLine("        return Watcher;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = new Watcher();");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _Notification = __webpack_require__(21), _Notification2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_Notification), _system = __webpack_require__(1), _utils = __webpack_require__(2), cmdXP = 'cscript %systemroot%/system32/eventquery.vbs  /l system /r 1 /fi \"Source eq Save Dump\" /fo LIST /v', cmd6 = \"wevtutil qe System /q:\\\"Event/System[(Level=2 and Provider/@EventSourceName='BugCheck')]\\\" /rd:true /c:1 /f:Text\", tempFile = _system.WshShell.ExpandEnvironmentStrings(\"%temp%\\\\lastbsod.txt\"), BSOD = function() {");
file.WriteLine("        function BSOD() {");
file.WriteLine("            _classCallCheck(this, BSOD);");
file.WriteLine("            try {");
file.WriteLine("                var command = _utils.isOldOS ? cmdXP : cmd6;");
file.WriteLine("                command = 'cmd /c \"' + command + ' > \"' + tempFile + '\"\"';");
file.WriteLine("                _system.WshShell.Run(command, 0, !0);");
file.WriteLine("                this.data = this.parseFile();");
file.WriteLine("                _system.fso.DeleteFile(tempFile);");
file.WriteLine("            } catch (e) {}");
file.WriteLine("        }");
file.WriteLine("        BSOD.prototype.parseFile = function() {");
file.WriteLine("            try {");
file.WriteLine("                for (var res = {}, file = _system.fso.OpenTextFile(tempFile, 1, !0); !file.AtEndOfStream; ) {");
file.WriteLine("                    var line = file.ReadLine();");
file.WriteLine("                    switch (line.split(\":\")[0].trim()) {");
file.WriteLine("                      case \"Date Time\":");
file.WriteLine("                      case \"Date\":");
file.WriteLine("                        res.date = new Date(line.split(\":\").slice(1).join(\":\").trim());");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case \"Description\":");
file.WriteLine("                        if (_utils.isOldOS) res.errCode = line.split(\":\").slice(1).join(\":\").split(\"was: \")[1].split(\" \")[0]; else {");
file.WriteLine("                            line = file.ReadLine();");
file.WriteLine("                            res.errCode = line.split(\"was: \")[1].split(\" \")[0];");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                file.close();");
file.WriteLine("                return res;");
file.WriteLine("            } catch (e) {");
file.WriteLine("                return null;");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        BSOD.prototype.checkNewBSOD = function() {");
file.WriteLine("            function checkNewBSOD() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context.prev = 0;");
file.WriteLine("                        if (this.data && this.data.date) {");
file.WriteLine("                            _context.next = 3;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        if (!(new Date() - this.data.date > 2592e5)) {");
file.WriteLine("                            _context.next = 5;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"newbsod\", this.data);");
file.WriteLine("                        if (!notification.get(\"date\") || this.data.date > new Date(notification.get(\"date\"))) {");
file.WriteLine("                            _context.next = 8;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                        _context.next = 10;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        status = _context.sent;");
file.WriteLine("                        if (\"ok\" === status) {");
file.WriteLine("                            notification.set(\"date\", this.data.date);");
file.WriteLine("                            notification.save();");
file.WriteLine("                            (0, _utils.goToUrl)(notification.config.problemUrl);");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 16;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 14:");
file.WriteLine("                        _context.prev = 14;");
file.WriteLine("                        _context.t0 = _context[\"catch\"](0);");
file.WriteLine("");
file.WriteLine("                      case 16:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this, [ [ 0, 14 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return checkNewBSOD;");
file.WriteLine("        }();");
file.WriteLine("        return BSOD;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = BSOD;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _config = __webpack_require__(6), _config2 = _interopRequireDefault(_config), _wmi = __webpack_require__(3), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _utils = __webpack_require__(2), objWMIServiceWMI = _wmi.locator.ConnectServer(null, \"root\\\\wmi\"), PoorConditionThreshold = _config2[\"default\"].monitoring.Battery.PoorConditionThreshold, Battery = function() {");
file.WriteLine("        function Battery() {");
file.WriteLine("            _classCallCheck(this, Battery);");
file.WriteLine("        }");
file.WriteLine("        Battery.prototype.checkBattery = function() {");
file.WriteLine("            function checkBattery() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (!this.isPoorCondition()) {");
file.WriteLine("                            _context.next = 3;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 3;");
file.WriteLine("                        return this.showNotification(\"batterypoorcondition\", {});");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkBattery;");
file.WriteLine("        }();");
file.WriteLine("        Battery.prototype.isPoorCondition = function() {");
file.WriteLine("            var result = !1;");
file.WriteLine("            try {");
file.WriteLine("                var fullChargedCapacity = this.getBatteryFullChargedCapacity(), designedCapacity = this.getBatteryDesignedCapacity();");
file.WriteLine("                if (fullChargedCapacity && designedCapacity) {");
file.WriteLine("                    result = 100 - 100 * fullChargedCapacity / designedCapacity >= PoorConditionThreshold;");
file.WriteLine("                }");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            return result;");
file.WriteLine("        };");
file.WriteLine("        Battery.prototype.getBatteryFullChargedCapacity = function() {");
file.WriteLine("            var result = null, colItems = objWMIServiceWMI.ExecQuery(\"SELECT * FROM BatteryFullChargedCapacity\", \"WQL\");");
file.WriteLine("            if (colItems.Count) {");
file.WriteLine("                result = new Enumerator(colItems).item().FullChargedCapacity;");
file.WriteLine("            }");
file.WriteLine("            return result;");
file.WriteLine("        };");
file.WriteLine("        Battery.prototype.getBatteryDesignedCapacity = function() {");
file.WriteLine("            var result = null, colItems = objWMIServiceWMI.ExecQuery(\"SELECT * FROM BatteryStaticData\", \"WQL\");");
file.WriteLine("            if (colItems.Count) {");
file.WriteLine("                result = new Enumerator(colItems).item().DesignedCapacity;");
file.WriteLine("            }");
file.WriteLine("            return result;");
file.WriteLine("        };");
file.WriteLine("        Battery.prototype.showNotification = function() {");
file.WriteLine("            function showNotification(_x, _x2) {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(type, args) {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        notification = new _Notification2[\"default\"](type, args);");
file.WriteLine("                        _context2.next = 3;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        status = _context2.sent;");
file.WriteLine("                        if (\"ok\" === status) (0, _utils.goToUrl)(notification.config.problemUrl);");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return showNotification;");
file.WriteLine("        }();");
file.WriteLine("        return Battery;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Battery;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    function _possibleConstructorReturn(self, call) {");
file.WriteLine("        if (!self) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");");
file.WriteLine("        return call && (\"object\" == typeof call || \"function\" == typeof call) ? call : self;");
file.WriteLine("    }");
file.WriteLine("    function _inherits(subClass, superClass) {");
file.WriteLine("        if (\"function\" != typeof superClass && null !== superClass) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);");
file.WriteLine("        subClass.prototype = Object.create(superClass && superClass.prototype, {");
file.WriteLine("            constructor: {");
file.WriteLine("                value: subClass,");
file.WriteLine("                enumerable: !1,");
file.WriteLine("                writable: !0,");
file.WriteLine("                configurable: !0");
file.WriteLine("            }");
file.WriteLine("        });");
file.WriteLine("        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _wget = __webpack_require__(22), _wget2 = _interopRequireDefault(_wget), _system = __webpack_require__(1), _CustDev2 = __webpack_require__(218), _CustDev3 = _interopRequireDefault(_CustDev2), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _sample = __webpack_require__(461), _sample2 = _interopRequireDefault(_sample), _utils = __webpack_require__(2), filename = !0 ? \"DriverPack-Cloud-New.exe\" : \"DriverPack-Cloud-New-test.exe\", dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\"), CloudUpdate = function(_CustDev) {");
file.WriteLine("        function CloudUpdate() {");
file.WriteLine("            _classCallCheck(this, CloudUpdate);");
file.WriteLine("            return _possibleConstructorReturn(this, _CustDev.apply(this, arguments));");
file.WriteLine("        }");
file.WriteLine("        _inherits(CloudUpdate, _CustDev);");
file.WriteLine("        CloudUpdate.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        console.log(\"monitoring/CloudUpdate run\");");
file.WriteLine("                        if (!this.checkTargeting()) {");
file.WriteLine("                            _context.next = 4;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 4;");
file.WriteLine("                        return this.showNotification();");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        CloudUpdate.prototype.checkTargeting = function() {");
file.WriteLine("            return \"favorite\" === this.getLabel() && (0, _sample2[\"default\"])(.5);");
file.WriteLine("        };");
file.WriteLine("        CloudUpdate.prototype.showNotification = function() {");
file.WriteLine("            function showNotification(_x) {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(label) {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context2.next = 2;");
file.WriteLine("                        return this.downloadInstaller();");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"cloud-update\", {});");
file.WriteLine("                        _context2.next = 5;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        status = _context2.sent;");
file.WriteLine("                        if (\"ok\" === status) this.updateToCloud();");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return showNotification;");
file.WriteLine("        }();");
file.WriteLine("        CloudUpdate.prototype.downloadInstaller = function() {");
file.WriteLine("            function downloadInstaller() {");
file.WriteLine("                return _ref3.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {");
file.WriteLine("                var events;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        events = {");
file.WriteLine("                            beforeDownloading: function() {},");
file.WriteLine("                            afterDownloading: function() {}");
file.WriteLine("                        };");
file.WriteLine("                        _context3.next = 3;");
file.WriteLine("                        return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                            link: \"http://download.drp.su/soft/DriverPack-Cloud-New.exe\"");
file.WriteLine("                        } ]);");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return downloadInstaller;");
file.WriteLine("        }();");
file.WriteLine("        CloudUpdate.prototype.updateToCloud = function() {");
file.WriteLine("            var args = '--upgrade --installer \"' + dirPath + \"\\\\\" + filename + '\"';");
file.WriteLine("            _system.WshShell.Run('\"' + _utils.AppPath + '\\\\Uninstall.exe\" ' + args, 3, !1);");
file.WriteLine("        };");
file.WriteLine("        return CloudUpdate;");
file.WriteLine("    }(_CustDev3[\"default\"]);");
file.WriteLine("    exports[\"default\"] = CloudUpdate;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _Notification = __webpack_require__(21), _Notification2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_Notification), _system = __webpack_require__(1), _wmi = __webpack_require__(3), _utils = __webpack_require__(2), HDD = function() {");
file.WriteLine("        function HDD() {");
file.WriteLine("            var _this = this;");
file.WriteLine("            _classCallCheck(this, HDD);");
file.WriteLine("            this.drives = [];");
file.WriteLine("            try {");
file.WriteLine("                var colItems = _wmi.objWMIService.ExecQuery(\"SELECT * FROM Win32_LogicalDisk\", \"WQL\");");
file.WriteLine("                (0, _system.iterate)(colItems, function(_ref) {");
file.WriteLine("                    var Name = _ref.Name, DriveType = _ref.DriveType, Size = _ref.Size, FreeSpace = _ref.FreeSpace;");
file.WriteLine("                    if (3 === DriveType && Size && FreeSpace) _this.drives.push({");
file.WriteLine("                        Name: Name,");
file.WriteLine("                        Size: Size,");
file.WriteLine("                        FreeSpace: FreeSpace");
file.WriteLine("                    });");
file.WriteLine("                });");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            try {");
file.WriteLine("                this.systemDriveName = _system.WshShell.ExpandEnvironmentStrings(\"%SYSTEMDRIVE%\");");
file.WriteLine("            } catch (e) {}");
file.WriteLine("            this.disks = [];");
file.WriteLine("            try {");
file.WriteLine("                var _colItems = _wmi.objWMIService.ExecQuery(\"SELECT * FROM Win32_DiskDrive\", \"WQL\");");
file.WriteLine("                (0, _system.iterate)(_colItems, function(_ref2) {");
file.WriteLine("                    var Model = _ref2.Model, Status = _ref2.Status;");
file.WriteLine("                    _this.disks.push({");
file.WriteLine("                        Model: Model,");
file.WriteLine("                        Status: Status");
file.WriteLine("                    });");
file.WriteLine("                });");
file.WriteLine("            } catch (e) {}");
file.WriteLine("        }");
file.WriteLine("        HDD.prototype.checkSystemDriveFreeSpace = function() {");
file.WriteLine("            function checkSystemDriveFreeSpace() {");
file.WriteLine("                return _ref3.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (this.systemDriveHasFreeSpace()) {");
file.WriteLine("                            _context.next = 3;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 3;");
file.WriteLine("                        return this.showNotification(\"systemdrivefreespace\", {");
file.WriteLine("                            systemdrive: _system.WshShell.ExpandEnvironmentStrings(\"%SYSTEMDRIVE%\").replace(\":\", \"\")");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkSystemDriveFreeSpace;");
file.WriteLine("        }();");
file.WriteLine("        HDD.prototype.systemDriveHasFreeSpace = function() {");
file.WriteLine("            var _this2 = this;");
file.WriteLine("            if (this.systemDriveName) return !this.drives.some(function(_ref4) {");
file.WriteLine("                var Name = _ref4.Name, Size = _ref4.Size, FreeSpace = _ref4.FreeSpace;");
file.WriteLine("                if (Name === _this2.systemDriveName) {");
file.WriteLine("                    window.metric.send(\"hdd\", 100 * (Size - FreeSpace) / Size);");
file.WriteLine("                    return FreeSpace < 3221225472;");
file.WriteLine("                }");
file.WriteLine("            }); else return !0;");
file.WriteLine("        };");
file.WriteLine("        HDD.prototype.checkOtherDrivesFreeSpace = function() {");
file.WriteLine("            function checkOtherDrivesFreeSpace() {");
file.WriteLine("                return _ref5.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                var fullDrives;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        fullDrives = this.getFullOtherDrives();");
file.WriteLine("                        if (!fullDrives.length) {");
file.WriteLine("                            _context2.next = 4;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context2.next = 4;");
file.WriteLine("                        return this.showNotification(\"otherdrivesfreespace\", {");
file.WriteLine("                            fulldrives: fullDrives.join(\", \")");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkOtherDrivesFreeSpace;");
file.WriteLine("        }();");
file.WriteLine("        HDD.prototype.getFullOtherDrives = function() {");
file.WriteLine("            var _this3 = this;");
file.WriteLine("            return this.drives.filter(function(_ref6) {");
file.WriteLine("                var Name = _ref6.Name, Size = _ref6.Size, FreeSpace = _ref6.FreeSpace;");
file.WriteLine("                return Name !== _this3.systemDriveName && 100 * FreeSpace / Size <= 3;");
file.WriteLine("            }).map(function(_ref7) {");
file.WriteLine("                return \"[\" + _ref7.Name.replace(\":\", \"\") + \"]\";");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        HDD.prototype.checkSmart = function() {");
file.WriteLine("            var failedDisks = this.getSmartFails();");
file.WriteLine("            if (failedDisks.length) this.showNotification(\"smartfailed\", {");
file.WriteLine("                disks: failedDisks.join(\", \")");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        HDD.prototype.getSmartFails = function() {");
file.WriteLine("            return this.disks.filter(function(_ref8) {");
file.WriteLine("                _ref8.Model;");
file.WriteLine("                return \"OK\" !== _ref8.Status;");
file.WriteLine("            }).map(function(_ref9) {");
file.WriteLine("                return _ref9.Model;");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("        HDD.prototype.showNotification = function() {");
file.WriteLine("            function showNotification(_x, _x2) {");
file.WriteLine("                return _ref10.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(type, args) {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        notification = new _Notification2[\"default\"](type, args);");
file.WriteLine("                        _context3.next = 3;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        status = _context3.sent;");
file.WriteLine("                        if (\"ok\" === status) (0, _utils.goToUrl)(notification.config.problemUrl);");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return showNotification;");
file.WriteLine("        }();");
file.WriteLine("        return HDD;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = HDD;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _config = __webpack_require__(6), _config2 = _interopRequireDefault(_config), _logs = __webpack_require__(16), _logs2 = _interopRequireDefault(_logs), _CloudUpdate = __webpack_require__(466), _CloudUpdate2 = _interopRequireDefault(_CloudUpdate), _DriverPack = __webpack_require__(219), _DriverPack2 = _interopRequireDefault(_DriverPack), _Antivirus = __webpack_require__(178), _Antivirus2 = _interopRequireDefault(_Antivirus), _Scheduler = __webpack_require__(221), _Scheduler2 = _interopRequireDefault(_Scheduler), _HDD = __webpack_require__(467), _HDD2 = _interopRequireDefault(_HDD), _Battery = __webpack_require__(465), _Battery2 = _interopRequireDefault(_Battery), _BSOD = __webpack_require__(464), _BSOD2 = _interopRequireDefault(_BSOD), _Soft = __webpack_require__(222), _Soft2 = _interopRequireDefault(_Soft), _CustDev = __webpack_require__(218), _CustDev2 = _interopRequireDefault(_CustDev), _Retention = __webpack_require__(470), _Retention2 = _interopRequireDefault(_Retention), _Opera = __webpack_require__(469), _Opera2 = _interopRequireDefault(_Opera), _SearcherBar = __webpack_require__(471), _SearcherBar2 = _interopRequireDefault(_SearcherBar), _FileAssociationsManager = __webpack_require__(220), _FileAssociationsManager2 = _interopRequireDefault(_FileAssociationsManager), _utils = __webpack_require__(2), _lang = __webpack_require__(217), _lang2 = _interopRequireDefault(_lang), MonitoringCheckDelay = _config2[\"default\"].monitoring.MonitoringCheckDelay, Monitoring = function() {");
file.WriteLine("        function Monitoring() {");
file.WriteLine("            _classCallCheck(this, Monitoring);");
file.WriteLine("        }");
file.WriteLine("        Monitoring.prototype.checkIfRuLocale = function() {");
file.WriteLine("            var countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("            return \"ru\" === _lang2[\"default\"] || \"ru\" === countryCode.toLowerCase();");
file.WriteLine("        };");
file.WriteLine("        Monitoring.prototype.runCloudUpdate = function() {");
file.WriteLine("            function runCloudUpdate() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var countryCode, runCondition;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("                        runCondition = !_utils.isOldOS && \"RU\" === countryCode.toUpperCase();");
file.WriteLine("                        if (!runCondition) {");
file.WriteLine("                            _context.next = 5;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 5;");
file.WriteLine("                        return new _CloudUpdate2[\"default\"]().run();");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return runCloudUpdate;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.checkPartnerSoft = function() {");
file.WriteLine("            function checkPartnerSoft() {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                var soft;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        soft = new _Soft2[\"default\"]();");
file.WriteLine("                        _context2.next = 3;");
file.WriteLine("                        return soft.run();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkPartnerSoft;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.checkFileAssociations = function() {");
file.WriteLine("            function checkFileAssociations() {");
file.WriteLine("                return _ref3.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {");
file.WriteLine("                var fam;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        fam = new _FileAssociationsManager2[\"default\"]();");
file.WriteLine("                        _context3.next = 3;");
file.WriteLine("                        return fam.run();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkFileAssociations;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.checkAntivirus = function() {");
file.WriteLine("            function checkAntivirus() {");
file.WriteLine("                return _ref4.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {");
file.WriteLine("                var targetCountryCodes, countryCode, runCondition, _countryCode, antivirus;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context4) {");
file.WriteLine("                    for (;;) switch (_context4.prev = _context4.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _logs2[\"default\"].info(\"monitoring check antiviruses run\", {}, \"monitoring:check:antiviruses:run\");");
file.WriteLine("                        targetCountryCodes = [ \"SE\", \"JP\", \"CH\", \"DK\", \"NO\", \"FI\", \"CA\", \"BE\", \"AT\", \"KR\", \"SG\", \"AE\", \"TW\", \"IE\", \"LT\", \"HR\", \"EE\", \"MK\", \"HU\", \"CN\", \"SV\", \"US\", \"DE\", \"GB\", \"AU\", \"NL\", \"FR\", \"IT\", \"IL\", \"ES\", \"PT\", \"CZ\", \"PL\", \"GR\", \"SA\", \"LV\", \"BA\", \"BG\", \"AR\", \"BR\", \"PE\", \"MY\", \"RS\", \"MX\", \"RU\" ];");
file.WriteLine("                        countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("                        runCondition = !_utils.isOldOS && targetCountryCodes.includes(countryCode.toUpperCase());");
file.WriteLine("                        _logs2[\"default\"].info(\"monitoring check antiviruses run condition computed\", {");
file.WriteLine("                            runCondition: runCondition,");
file.WriteLine("                            countryCode: countryCode,");
file.WriteLine("                            isOldOS: _utils.isOldOS,");
file.WriteLine("                            targetCountryCodes: targetCountryCodes");
file.WriteLine("                        }, \"monitoring:check:antiviruses:run:condition:computed\");");
file.WriteLine("                        if (!runCondition) {");
file.WriteLine("                            _context4.next = 10;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("                        antivirus = new _Antivirus2[\"default\"]({");
file.WriteLine("                            lang: _lang2[\"default\"],");
file.WriteLine("                            countryCode: _countryCode");
file.WriteLine("                        });");
file.WriteLine("                        _context4.next = 10;");
file.WriteLine("                        return antivirus.run();");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context4.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee4, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkAntivirus;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.checkHDD = function() {");
file.WriteLine("            function checkHDD() {");
file.WriteLine("                return _ref5.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {");
file.WriteLine("                var hdd;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context5) {");
file.WriteLine("                    for (;;) switch (_context5.prev = _context5.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        hdd = new _HDD2[\"default\"]();");
file.WriteLine("                        _context5.next = 3;");
file.WriteLine("                        return hdd.checkSmart();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        _context5.next = 5;");
file.WriteLine("                        return (0, _utils.timeout)(MonitoringCheckDelay);");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        _context5.next = 7;");
file.WriteLine("                        return hdd.checkSystemDriveFreeSpace();");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        _context5.next = 9;");
file.WriteLine("                        return (0, _utils.timeout)(MonitoringCheckDelay);");
file.WriteLine("");
file.WriteLine("                      case 9:");
file.WriteLine("                        _context5.next = 11;");
file.WriteLine("                        return hdd.checkOtherDrivesFreeSpace();");
file.WriteLine("");
file.WriteLine("                      case 11:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context5.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee5, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkHDD;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.checkBattery = function() {");
file.WriteLine("            function checkBattery() {");
file.WriteLine("                return _ref6.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {");
file.WriteLine("                var battery;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context6) {");
file.WriteLine("                    for (;;) switch (_context6.prev = _context6.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (_utils.isOldOS) {");
file.WriteLine("                            _context6.next = 4;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        battery = new _Battery2[\"default\"]();");
file.WriteLine("                        _context6.next = 4;");
file.WriteLine("                        return battery.checkBattery();");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context6.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee6, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkBattery;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.checkBSOD = function() {");
file.WriteLine("            function checkBSOD() {");
file.WriteLine("                return _ref7.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {");
file.WriteLine("                var bsod;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context7) {");
file.WriteLine("                    for (;;) switch (_context7.prev = _context7.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        bsod = new _BSOD2[\"default\"]();");
file.WriteLine("                        _context7.next = 3;");
file.WriteLine("                        return bsod.checkNewBSOD();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context7.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee7, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkBSOD;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.checkDriverPack = function() {");
file.WriteLine("            new _DriverPack2[\"default\"]().run();");
file.WriteLine("        };");
file.WriteLine("        Monitoring.prototype.checkCustDev = function() {");
file.WriteLine("            function checkCustDev() {");
file.WriteLine("                return _ref8.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {");
file.WriteLine("                var countryCode, runCondition;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context8) {");
file.WriteLine("                    for (;;) switch (_context8.prev = _context8.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("                        runCondition = \"RU\" === countryCode.toUpperCase();");
file.WriteLine("                        if (!runCondition) {");
file.WriteLine("                            _context8.next = 5;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context8.next = 5;");
file.WriteLine("                        return new _CustDev2[\"default\"]().run();");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context8.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee8, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkCustDev;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.runScheduler = function() {");
file.WriteLine("            new _Scheduler2[\"default\"]().run();");
file.WriteLine("        };");
file.WriteLine("        Monitoring.prototype.checkRetention = function() {");
file.WriteLine("            new _Retention2[\"default\"]().run();");
file.WriteLine("        };");
file.WriteLine("        Monitoring.prototype.checkOpera = function() {");
file.WriteLine("            var countryCode = window.geoip && window.geoip.geoip_country_code || \"\", _window = window, lang = _window.lang, hours = new Date().getHours();");
file.WriteLine("            if (hours >= 8 && hours < 23 && !_utils.isOldOS && ([ \"ru\", \"en\" ].includes(lang) || \"ru\" === countryCode.toLowerCase())) new _Opera2[\"default\"]().run();");
file.WriteLine("        };");
file.WriteLine("        Monitoring.prototype.checkSearcherBar = function() {");
file.WriteLine("            function checkSearcherBar() {");
file.WriteLine("                return _ref9.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context9) {");
file.WriteLine("                    for (;;) switch (_context9.prev = _context9.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context9.next = 2;");
file.WriteLine("                        return new _SearcherBar2[\"default\"]().run();");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context9.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee9, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkSearcherBar;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref10.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context10) {");
file.WriteLine("                    for (;;) switch (_context10.prev = _context10.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (!0) {");
file.WriteLine("                            _context10.next = 11;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context10.prev = 1;");
file.WriteLine("                        _context10.next = 4;");
file.WriteLine("                        return this._run();");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        _context10.next = 9;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        _context10.prev = 6;");
file.WriteLine("                        _context10.t0 = _context10[\"catch\"](1);");
file.WriteLine("                        alert(\"Monitoring error: \" + _context10.t0.message);");
file.WriteLine("");
file.WriteLine("                      case 9:");
file.WriteLine("                        _context10.next = 13;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 11:");
file.WriteLine("                        _context10.next = 13;");
file.WriteLine("                        return this._run();");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context10.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee10, this, [ [ 1, 6 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        Monitoring.prototype._run = function() {");
file.WriteLine("            function _run() {");
file.WriteLine("                return _ref11.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {");
file.WriteLine("                var today, installationDate, installationCondition;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context11) {");
file.WriteLine("                    for (;;) switch (_context11.prev = _context11.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _logs2[\"default\"].info(\"monitoring run\", {");
file.WriteLine("                            geoip: window.geoip");
file.WriteLine("                        }, \"monitoring:run\");");
file.WriteLine("                        _context11.next = 3;");
file.WriteLine("                        return this.checkSearcherBar();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        today = new Date();");
file.WriteLine("                        installationDate = (0, _utils.getInstallationDate)();");
file.WriteLine("                        installationCondition = today.getDate() === installationDate.getDate();");
file.WriteLine("                        if (!installationCondition) {");
file.WriteLine("                            _context11.next = 9;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context11.next = 9;");
file.WriteLine("                        return this.checkOpera();");
file.WriteLine("");
file.WriteLine("                      case 9:");
file.WriteLine("                        if (!this.checkIfRuLocale()) {");
file.WriteLine("                            _context11.next = 15;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        if (!installationCondition) {");
file.WriteLine("                            _context11.next = 13;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context11.next = 13;");
file.WriteLine("                        return this.checkRetention();");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        _logs2[\"default\"].info(\"monitoring RU user detected\", {}, \"monitoring:ru:user:detected\");");
file.WriteLine("                        this.runScheduler();");
file.WriteLine("");
file.WriteLine("                      case 15:");
file.WriteLine("                        this.checkFileAssociations();");
file.WriteLine("");
file.WriteLine("                      case 16:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context11.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee11, this);");
file.WriteLine("            }));");
file.WriteLine("            return _run;");
file.WriteLine("        }();");
file.WriteLine("        return Monitoring;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Monitoring;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _config = __webpack_require__(6), _config2 = _interopRequireDefault(_config), _wget = __webpack_require__(22), _wget2 = _interopRequireDefault(_wget), _system = __webpack_require__(1), _os = __webpack_require__(15), _utils = __webpack_require__(2), _getInstalledOperaInfo = __webpack_require__(492), _getInstalledOperaInfo2 = _interopRequireDefault(_getInstalledOperaInfo), _Notification = __webpack_require__(21), _Notification2 = _interopRequireDefault(_Notification), _require = __webpack_require__(59), runCommandAsync = _require.runCommandAsync, _config$monitoring$Op = _config2[\"default\"].monitoring.Opera, CheckTimeout = _config$monitoring$Op.CheckTimeout, UnusedThreshold = _config$monitoring$Op.UnusedThreshold, cisLocales = [ \"RU\", \"AZ\", \"AM\", \"BY\", \"KZ\", \"KG\", \"MD\", \"TJ\", \"TM\", \"UZ\", \"GE\", \"AB\", \"OS\" ], Opera = function() {");
file.WriteLine("        function Opera() {");
file.WriteLine("            _classCallCheck(this, Opera);");
file.WriteLine("            this.chromeCommand = 'chcp 65001 & tasklist /fi \"IMAGENAME eq chrome.exe\" /fi \"STATUS eq running\" /fo list /v';");
file.WriteLine("            this.chromeOutputFile = (0, _system.ensurePath)(_utils.AppPath + \"\\\\temp\") + \"\\\\log_monitoring_chrome_output_file.txt\";");
file.WriteLine("            this.tempChromeOutputFile = (0, _system.ensurePath)(_utils.AppPath + \"\\\\temp\") + \"\\\\log_monitoring_temp_chrome_output_file.txt\";");
file.WriteLine("            this.youtubeIsOpened = !1;");
file.WriteLine("            this.installedOperaInfo = {};");
file.WriteLine("        }");
file.WriteLine("        Opera.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context.next = 2;");
file.WriteLine("                        return this.updateInstalleOperaInfo();");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                        if (!window.RunningOpera) {");
file.WriteLine("                            _context.next = 4;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        window.RunningOpera = !0;");
file.WriteLine("                        _context.prev = 5;");
file.WriteLine("                        _context.next = 8;");
file.WriteLine("                        return this.check();");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                        _context.next = 13;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        _context.prev = 10;");
file.WriteLine("                        _context.t0 = _context[\"catch\"](5);");
file.WriteLine("                        window.RunningOpera = !1;");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this, [ [ 5, 10 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.updateInstalleOperaInfo = function() {");
file.WriteLine("            function updateInstalleOperaInfo() {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context2.prev = 0;");
file.WriteLine("                        _context2.next = 3;");
file.WriteLine("                        return (0, _getInstalledOperaInfo2[\"default\"])();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        this.installedOperaInfo = _context2.sent;");
file.WriteLine("                        _context2.next = 8;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                        _context2.prev = 6;");
file.WriteLine("                        _context2.t0 = _context2[\"catch\"](0);");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this, [ [ 0, 6 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return updateInstalleOperaInfo;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.check = function() {");
file.WriteLine("            function check() {");
file.WriteLine("                return _ref3.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context3) {");
file.WriteLine("                    for (;;) switch (_context3.prev = _context3.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _context3.next = 2;");
file.WriteLine("                        return this.checkUnused();");
file.WriteLine("");
file.WriteLine("                      case 2:");
file.WriteLine("                        _context3.next = 4;");
file.WriteLine("                        return this.checkChrome();");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context3.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee3, this);");
file.WriteLine("            }));");
file.WriteLine("            return check;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.checkUnused = function() {");
file.WriteLine("            function checkUnused() {");
file.WriteLine("                return _ref4.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {");
file.WriteLine("                var _installedOperaInfo, version, lastUsageTime, error, now, importCounter, type;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context4) {");
file.WriteLine("                    for (;;) switch (_context4.prev = _context4.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        _installedOperaInfo = this.installedOperaInfo, version = _installedOperaInfo.version, ");
file.WriteLine("                        lastUsageTime = _installedOperaInfo.lastUsageTime, error = _installedOperaInfo.error;");
file.WriteLine("                        if (!error && version) {");
file.WriteLine("                            _context4.next = 3;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context4.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        now = Date.now();");
file.WriteLine("                        if (!(now - lastUsageTime > UnusedThreshold)) {");
file.WriteLine("                            _context4.next = 9;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        importCounter = new _Notification2[\"default\"](\"opera-import\").get(\"counter\");");
file.WriteLine("                        type = importCounter ? \"opera-unused\" : \"opera-import\";");
file.WriteLine("                        _context4.next = 9;");
file.WriteLine("                        return this.showNotification(type);");
file.WriteLine("");
file.WriteLine("                      case 9:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context4.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee4, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkUnused;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.checkChrome = function() {");
file.WriteLine("            function checkChrome() {");
file.WriteLine("                return _ref5.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {");
file.WriteLine("                var counter, _installedOperaInfo2, version, error, chromeTextStream, chromeOutputText, youtubeWasOpened, _this = this;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context5) {");
file.WriteLine("                    for (;;) switch (_context5.prev = _context5.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        counter = new _Notification2[\"default\"](\"opera-youtube\").get(\"counter\");");
file.WriteLine("                        _installedOperaInfo2 = this.installedOperaInfo, version = _installedOperaInfo2.version, ");
file.WriteLine("                        error = _installedOperaInfo2.error;");
file.WriteLine("                        if (!(error || version || counter)) {");
file.WriteLine("                            _context5.next = 4;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        return _context5.abrupt(\"return\");");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        this.updateChromeOutputFile();");
file.WriteLine("                        if (!_system.fso.FileExists(this.chromeOutputFile)) {");
file.WriteLine("                            _context5.next = 17;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        chromeTextStream = _system.fso.OpenTextFile(this.chromeOutputFile, 1, !1, -1);");
file.WriteLine("                        if (chromeTextStream.AtEndOfStream) {");
file.WriteLine("                            _context5.next = 16;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        chromeOutputText = chromeTextStream.ReadAll();");
file.WriteLine("                        if (!this.checkTasklistOutput(chromeOutputText, \"chrome.exe\", \"- Google Chrome\")) {");
file.WriteLine("                            _context5.next = 16;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        if (_utils.isOldOS) {");
file.WriteLine("                            _context5.next = 16;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        youtubeWasOpened = this.youtubeIsOpened;");
file.WriteLine("                        this.youtubeIsOpened = this.checkYoutubeIsOpened(chromeOutputText);");
file.WriteLine("                        if (youtubeWasOpened || !this.youtubeIsOpened) {");
file.WriteLine("                            _context5.next = 16;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context5.next = 16;");
file.WriteLine("                        return this.showNotification(\"opera-youtube\");");
file.WriteLine("");
file.WriteLine("                      case 16:");
file.WriteLine("                        chromeTextStream.Close();");
file.WriteLine("");
file.WriteLine("                      case 17:");
file.WriteLine("                        setTimeout(function() {");
file.WriteLine("                            return _this.checkChrome();");
file.WriteLine("                        }, CheckTimeout);");
file.WriteLine("");
file.WriteLine("                      case 18:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context5.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee5, this);");
file.WriteLine("            }));");
file.WriteLine("            return checkChrome;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.updateChromeOutputFile = function() {");
file.WriteLine("            var chromeOutputCommand = \"cmd /c \" + this.chromeCommand + ' > \"' + this.tempChromeOutputFile + '\" && cmd /u /c type \"' + this.tempChromeOutputFile + '\" > \"' + this.chromeOutputFile + '\" && timeout 1';");
file.WriteLine("            _system.WshShell.Run(chromeOutputCommand, 0, !0);");
file.WriteLine("        };");
file.WriteLine("        Opera.prototype.checkTasklistOutput = function(text, checkImageNameString, checkWindowTitleString) {");
file.WriteLine("            return !(-1 !== text.indexOf(checkImageNameString) && -1 === text.indexOf(checkWindowTitleString));");
file.WriteLine("        };");
file.WriteLine("        Opera.prototype.checkYoutubeIsOpened = function(text) {");
file.WriteLine("            return /youtube/i.test(text);");
file.WriteLine("        };");
file.WriteLine("        Opera.prototype.showNotification = function() {");
file.WriteLine("            function showNotification(_x) {");
file.WriteLine("                return _ref6.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(type) {");
file.WriteLine("                var lang, notification, status;");
file.WriteLine("                arguments.length > 1 && arguments[1] !== undefined && arguments[1];");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context6) {");
file.WriteLine("                    for (;;) switch (_context6.prev = _context6.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        lang = this.getNotificationLang();");
file.WriteLine("                        notification = new _Notification2[\"default\"](type, {");
file.WriteLine("                            lang: lang");
file.WriteLine("                        });");
file.WriteLine("                        _context6.next = 4;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                        status = _context6.sent;");
file.WriteLine("                        if (\"ok\" === status) this.runAction(type);");
file.WriteLine("");
file.WriteLine("                      case 6:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context6.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee6, this);");
file.WriteLine("            }));");
file.WriteLine("            return showNotification;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.getNotificationLang = function() {");
file.WriteLine("            var countryCode = window.geoip && window.geoip.geoip_country_code || \"\";");
file.WriteLine("            if (\"ru\" === window.lang || \"ru\" === countryCode.toLowerCase()) return \"ru\"; else return \"en\";");
file.WriteLine("        };");
file.WriteLine("        Opera.prototype.runAction = function(type) {");
file.WriteLine("            switch (type) {");
file.WriteLine("              case \"opera-unused\":");
file.WriteLine("                this.openOpera(\"https://www.opera.com/\");");
file.WriteLine("                break;");
file.WriteLine("");
file.WriteLine("              case \"opera-youtube\":");
file.WriteLine("                this.installOpera({");
file.WriteLine("                    openUrl: \"https://youtube.com\"");
file.WriteLine("                });");
file.WriteLine("                break;");
file.WriteLine("");
file.WriteLine("              case \"opera-import\":");
file.WriteLine("                this.importChromeSetting();");
file.WriteLine("            }");
file.WriteLine("        };");
file.WriteLine("        Opera.prototype.installOpera = function() {");
file.WriteLine("            function installOpera(_x3) {");
file.WriteLine("                return _ref7.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(_ref8) {");
file.WriteLine("                var link, keys, fileName, targetFolder, openUrl = _ref8.openUrl;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context7) {");
file.WriteLine("                    for (;;) switch (_context7.prev = _context7.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        link = this.getInstallerLink();");
file.WriteLine("                        keys = \"-install -silent -launchopera=1 -setdefaultbrowser=1\";");
file.WriteLine("                        fileName = link.split(\"/\").slice(-1);");
file.WriteLine("                        targetFolder = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                        if (!_system.fso.FileExists(_utils.WgetPath)) {");
file.WriteLine("                            _context7.next = 15;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context7.prev = 5;");
file.WriteLine("                        _context7.next = 8;");
file.WriteLine("                        return this.downloadInstaller(link);");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                        _context7.next = 10;");
file.WriteLine("                        return runCommandAsync({");
file.WriteLine("                            command: '\"' + targetFolder + \"\\\\\" + fileName + '\" ' + keys,");
file.WriteLine("                            checkInterval: 2e3");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        this.openOpera(openUrl);");
file.WriteLine("                        _context7.next = 15;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        _context7.prev = 13;");
file.WriteLine("                        _context7.t0 = _context7[\"catch\"](5);");
file.WriteLine("");
file.WriteLine("                      case 15:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context7.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee7, this, [ [ 5, 13 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return installOpera;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.getInstallerLink = function() {");
file.WriteLine("            var countryCode = window.geoip && window.geoip.geoip_country_code || \"\", isCis = cisLocales.includes(countryCode.toUpperCase()), fileName = void 0;");
file.WriteLine("            if (isCis) fileName = _os.is64 ? \"Opera64cis_woGoogle.exe\" : \"Opera86cis_woGoogle.exe\"; else fileName = _os.is64 ? \"OperaBlink64.exe\" : \"OperaBlink.exe\";");
file.WriteLine("            return \"http://dl.drp.su/soft/\" + fileName;");
file.WriteLine("        };");
file.WriteLine("        Opera.prototype.downloadInstaller = function() {");
file.WriteLine("            function downloadInstaller(_x4) {");
file.WriteLine("                return _ref9.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(link) {");
file.WriteLine("                var events, dirPath;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context8) {");
file.WriteLine("                    for (;;) switch (_context8.prev = _context8.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        events = {");
file.WriteLine("                            beforeDownloading: function() {},");
file.WriteLine("                            afterDownloading: function() {}");
file.WriteLine("                        };");
file.WriteLine("                        dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                        _context8.next = 4;");
file.WriteLine("                        return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                            link: link");
file.WriteLine("                        } ]);");
file.WriteLine("");
file.WriteLine("                      case 4:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context8.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee8, this);");
file.WriteLine("            }));");
file.WriteLine("            return downloadInstaller;");
file.WriteLine("        }();");
file.WriteLine("        Opera.prototype.openOpera = function(openUrl) {");
file.WriteLine("            (0, _utils.startCommand)('start opera.exe \"' + openUrl + '\"');");
file.WriteLine("        };");
file.WriteLine("        Opera.prototype.importChromeSetting = function() {");
file.WriteLine("            setTimeout(function() {");
file.WriteLine("                try {");
file.WriteLine("                    _system.WshShell.Run(\"cmd /C echo opera://settings/importData | CLIP & start opera.exe about:blank\", 0, !1);");
file.WriteLine("                } catch (dismiss) {}");
file.WriteLine("                setTimeout(function() {");
file.WriteLine("                    _system.WshShell.SendKeys(\"{ESCAPE}\");");
file.WriteLine("                }, 3e3);");
file.WriteLine("                setTimeout(function() {");
file.WriteLine("                    _system.WshShell.AppActivate(\" - Opera\");");
file.WriteLine("                }, 8e3);");
file.WriteLine("                setTimeout(function() {");
file.WriteLine("                    _system.WshShell.AppActivate(\" - Opera\");");
file.WriteLine("                    _system.WshShell.SendKeys(\"^T\");");
file.WriteLine("                }, 11e3);");
file.WriteLine("                setTimeout(function() {");
file.WriteLine("                    _system.WshShell.AppActivate(\" - Opera\");");
file.WriteLine("                    _system.WshShell.SendKeys(\"^V{ENTER}\");");
file.WriteLine("                    _system.WshShell.AppActivate(\" - Opera\");");
file.WriteLine("                }, 14e3);");
file.WriteLine("                setTimeout(function() {");
file.WriteLine("                    _system.WshShell.AppActivate(\" - Opera\");");
file.WriteLine("                    _system.WshShell.SendKeys(\"{ENTER}\");");
file.WriteLine("                }, 17e3);");
file.WriteLine("            }, 0);");
file.WriteLine("        };");
file.WriteLine("        return Opera;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Opera;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _Notification = __webpack_require__(21), _Notification2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_Notification), _utils = __webpack_require__(2), Retention = function() {");
file.WriteLine("        function Retention() {");
file.WriteLine("            _classCallCheck(this, Retention);");
file.WriteLine("        }");
file.WriteLine("        Retention.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        if (!this.checkCondition()) {");
file.WriteLine("                            _context.next = 3;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _context.next = 3;");
file.WriteLine("                        return this.showNotification();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        Retention.prototype.checkCondition = function() {");
file.WriteLine("            var notification = new _Notification2[\"default\"](\"retention\"), showedAt = notification.get(\"showedAt\");");
file.WriteLine("            if (showedAt) {");
file.WriteLine("                var showedDate = new Date(showedAt), monthAgo = new Date();");
file.WriteLine("                monthAgo.setMonth(monthAgo.getMonth() - 1);");
file.WriteLine("                return showedDate < monthAgo;");
file.WriteLine("            } else return !0;");
file.WriteLine("        };");
file.WriteLine("        Retention.prototype.showNotification = function() {");
file.WriteLine("            function showNotification() {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                var notification, status;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        notification = new _Notification2[\"default\"](\"retention\");");
file.WriteLine("                        _context2.next = 3;");
file.WriteLine("                        return notification.show();");
file.WriteLine("");
file.WriteLine("                      case 3:");
file.WriteLine("                        status = _context2.sent;");
file.WriteLine("                        if (\"ok\" === status) (0, _utils.startDriverPack)();");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this);");
file.WriteLine("            }));");
file.WriteLine("            return showNotification;");
file.WriteLine("        }();");
file.WriteLine("        return Retention;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = Retention;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _interopRequireDefault(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    function _classCallCheck(instance, Constructor) {");
file.WriteLine("        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _statistics = __webpack_require__(20), _statistics2 = _interopRequireDefault(_statistics), _system = __webpack_require__(1), _runCommandAsync = __webpack_require__(59), _wget = __webpack_require__(22), _wget2 = _interopRequireDefault(_wget), _utils = __webpack_require__(2), statisticsLabel = _statistics2[\"default\"].drpVersion + \" searcher bar\", REG_FLAG = \"HKCU\\\\SOFTWARE\\\\drpsu\\\\NotifierSearcherBar\", DOWNLOAD_LINK = \"http://dl.drp.su/updates/searcherbar/SearcherBarN.exe\", TARGET_LANGS = [ \"ru\", \"en\", \"ar\", \"de\", \"fa\", \"fr\", \"es\", \"hi\", \"id\", \"pt\", \"tr\", \"ur\" ], SearcherBar = function() {");
file.WriteLine("        function SearcherBar() {");
file.WriteLine("            _classCallCheck(this, SearcherBar);");
file.WriteLine("        }");
file.WriteLine("        SearcherBar.prototype.run = function() {");
file.WriteLine("            function run() {");
file.WriteLine("                return _ref.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("                var regValue;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                    for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        regValue = (0, _system.RegRead)(\"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\SearcherBar\\\\DisplayName\");");
file.WriteLine("                        if (regValue || !this.checkTargeting()) {");
file.WriteLine("                            _context.next = 7;");
file.WriteLine("                            break;");
file.WriteLine("                        }");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar detected target\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                        _context.next = 5;");
file.WriteLine("                        return this.install();");
file.WriteLine("");
file.WriteLine("                      case 5:");
file.WriteLine("                        _context.next = 8;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        if (regValue) _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar detected installed\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 8:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee, this);");
file.WriteLine("            }));");
file.WriteLine("            return run;");
file.WriteLine("        }();");
file.WriteLine("        SearcherBar.prototype.checkTargeting = function() {");
file.WriteLine("            var _window = window, lang = _window.lang;");
file.WriteLine("            return !_utils.isOldOS && TARGET_LANGS.includes(lang) && !(0, _system.RegRead)(REG_FLAG);");
file.WriteLine("        };");
file.WriteLine("        SearcherBar.prototype.install = function() {");
file.WriteLine("            function install() {");
file.WriteLine("                return _ref2.apply(this, arguments);");
file.WriteLine("            }");
file.WriteLine("            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("                var events, dirPath, filename, exitCode, success;");
file.WriteLine("                return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("                    for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("                      case 0:");
file.WriteLine("                        events = {");
file.WriteLine("                            beforeDownloading: function() {},");
file.WriteLine("                            afterDownloading: function() {}");
file.WriteLine("                        };");
file.WriteLine("                        dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                        filename = DOWNLOAD_LINK.split(\"/\").pop();");
file.WriteLine("                        _context2.prev = 3;");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar download started\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                        _context2.next = 7;");
file.WriteLine("                        return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                            link: DOWNLOAD_LINK");
file.WriteLine("                        } ]);");
file.WriteLine("");
file.WriteLine("                      case 7:");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar download completed\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                        _context2.next = 13;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 10:");
file.WriteLine("                        _context2.prev = 10;");
file.WriteLine("                        _context2.t0 = _context2[\"catch\"](3);");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar download failed\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 13:");
file.WriteLine("                        _context2.prev = 13;");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar installation started\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                        _context2.next = 17;");
file.WriteLine("                        return (0, _runCommandAsync.runCommandAsync)({");
file.WriteLine("                            command: '\"' + dirPath + \"\\\\\" + filename + '\"',");
file.WriteLine("                            checkInterval: 2e3");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 17:");
file.WriteLine("                        exitCode = _context2.sent;");
file.WriteLine("                        success = 0 === exitCode;");
file.WriteLine("                        success ? _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar installation completed\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        }) : _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar installation failed\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("                        if (success) (0, _system.RegWrite)(REG_FLAG, \"installed\");");
file.WriteLine("                        _context2.next = 26;");
file.WriteLine("                        break;");
file.WriteLine("");
file.WriteLine("                      case 23:");
file.WriteLine("                        _context2.prev = 23;");
file.WriteLine("                        _context2.t1 = _context2[\"catch\"](13);");
file.WriteLine("                        _statistics2[\"default\"].event({");
file.WriteLine("                            action: \"searcher bar installation failed\",");
file.WriteLine("                            label: statisticsLabel,");
file.WriteLine("                            counters: {");
file.WriteLine("                                yandex: !0");
file.WriteLine("                            }");
file.WriteLine("                        });");
file.WriteLine("");
file.WriteLine("                      case 26:");
file.WriteLine("                      case \"end\":");
file.WriteLine("                        return _context2.stop();");
file.WriteLine("                    }");
file.WriteLine("                }, _callee2, this, [ [ 3, 10 ], [ 13, 23 ] ]);");
file.WriteLine("            }));");
file.WriteLine("            return install;");
file.WriteLine("        }();");
file.WriteLine("        return SearcherBar;");
file.WriteLine("    }();");
file.WriteLine("    exports[\"default\"] = SearcherBar;");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2), modes = (exports.requireAdminRights = !1, {");
file.WriteLine("        min: \"SCHEME_MIN\",");
file.WriteLine("        max: \"SCHEME_MAX\",");
file.WriteLine("        balanced: \"SCHEME_BALANCED\"");
file.WriteLine("    });");
file.WriteLine("    exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    if (argument in modes) {");
file.WriteLine("                        _context.next = 2;");
file.WriteLine("                        break;");
file.WriteLine("                    }");
file.WriteLine("                    throw new Error('Invalid power scheme \"' + argument + '\"');");
file.WriteLine("");
file.WriteLine("                  case 2:");
file.WriteLine("                    (0, _utils.startCommand)(\"powercfg -s \" + modes[argument]);");
file.WriteLine("");
file.WriteLine("                  case 3:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _system = __webpack_require__(1), _utils = __webpack_require__(2), commands = (exports.requireAdminRights = !1, ");
file.WriteLine("    [ \"shutdown /s\", \"shutdown /r\", \"tasklist\", \"ver\", \"ping ya.ru\", \"ping drp.su\", \"ping 8.8.8.8\", \"tracert ya.ru\", \"tracert drp.su\", \"tracert 8.8.8.8\", \"nslookup ya.ru\", \"nslookup drp.su\", \"nslookup 8.8.8.8\", \"whoami\", \"ipconfig\", \"ipconfig /all\", \"netstat -an\", \"hostname\", \"vol\" ]), eof = \"=====EOF=====\", deleteFile = function(filepath) {");
file.WriteLine("        if (_system.fso.FileExists(filepath)) _system.fso.DeleteFile(filepath);");
file.WriteLine("    }, readFile = function(filepath) {");
file.WriteLine("        if (_system.fso.FileExists(filepath)) {");
file.WriteLine("            var file = _system.fso.OpenTextFile(filepath, 1, !1, 0);");
file.WriteLine("            if (!file.AtEndOfStream) {");
file.WriteLine("                var content = file.readAll();");
file.WriteLine("                file.Close();");
file.WriteLine("                var end = content.indexOf(eof), done = -1 !== end;");
file.WriteLine("                return {");
file.WriteLine("                    done: done,");
file.WriteLine("                    content: done ? content.slice(0, end) : content");
file.WriteLine("                };");
file.WriteLine("            }");
file.WriteLine("        }");
file.WriteLine("    };");
file.WriteLine("    exports.handler = function(argument, onProgress) {");
file.WriteLine("        return new Promise(function(resolve, reject) {");
file.WriteLine("            if (-1 === commands.indexOf(argument)) throw new Error('Invalid command \"' + argument + '\"');");
file.WriteLine("            var output = (0, _system.ensurePath)(_utils.AppPath + \"\\\\temp\") + \"\\\\scheduler_cmd_output_\" + Date.now() + \".txt\";");
file.WriteLine("            (0, _utils.startCommand)(\"(\" + argument + \" && echo \" + eof + ') > \"' + output + '\"');");
file.WriteLine("            var checkOutputFile = function checkOutputFile() {");
file.WriteLine("                try {");
file.WriteLine("                    var res = readFile(output);");
file.WriteLine("                    if (res) {");
file.WriteLine("                        var done = res.done, content = res.content;");
file.WriteLine("                        if (done) {");
file.WriteLine("                            deleteFile(output);");
file.WriteLine("                            return resolve(content);");
file.WriteLine("                        } else if (onProgress) onProgress(content);");
file.WriteLine("                    }");
file.WriteLine("                    setTimeout(checkOutputFile, 1e3);");
file.WriteLine("                } catch (err) {");
file.WriteLine("                    reject(err);");
file.WriteLine("                }");
file.WriteLine("            };");
file.WriteLine("            setTimeout(checkOutputFile, 1e3);");
file.WriteLine("        });");
file.WriteLine("    };");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _system = __webpack_require__(1), _wmi = __webpack_require__(3);");
file.WriteLine("    exports.requireAdminRights = !0, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    if (\"1\" !== (0, _system.RegRead)(\"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SystemRestore\\\\DisableSR\")) {");
file.WriteLine("                        _context.next = 4;");
file.WriteLine("                        break;");
file.WriteLine("                    }");
file.WriteLine("                    throw new Error(\"System Restore disabled\");");
file.WriteLine("");
file.WriteLine("                  case 4:");
file.WriteLine("                    _wmi.locator.ConnectServer(null, \"root\\\\default\").Get(\"SystemRestore\").CreateRestorePoint(\"DriverPack Cloud\", 0, 100);");
file.WriteLine("");
file.WriteLine("                  case 5:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function() {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2), _system = __webpack_require__(1), _wget = __webpack_require__(22), _wget2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_wget);");
file.WriteLine("    exports.requireAdminRights = !0, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            var events, link, dirPath;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    events = {");
file.WriteLine("                        beforeDownloading: function() {},");
file.WriteLine("                        afterDownloading: function() {}");
file.WriteLine("                    };");
file.WriteLine("                    link = \"http://download.drp.su/soft/360tsRU.exe\";");
file.WriteLine("                    dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                    _context.next = 5;");
file.WriteLine("                    return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                        link: link");
file.WriteLine("                    } ]);");
file.WriteLine("");
file.WriteLine("                  case 5:");
file.WriteLine("                    (0, _utils.startCommand)(dirPath + \"\\\\360tsRU.exe /S\");");
file.WriteLine("");
file.WriteLine("                  case 6:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2), _system = __webpack_require__(1), _wget = __webpack_require__(22), _wget2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_wget);");
file.WriteLine("    exports.requireAdminRights = !0, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            var events, link, dirPath;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    events = {");
file.WriteLine("                        beforeDownloading: function() {},");
file.WriteLine("                        afterDownloading: function() {}");
file.WriteLine("                    };");
file.WriteLine("                    link = \"http://download0.drp.su/DriverPack-17-Online-autoinstall.exe\";");
file.WriteLine("                    dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                    _context.next = 5;");
file.WriteLine("                    return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                        link: link");
file.WriteLine("                    } ]);");
file.WriteLine("");
file.WriteLine("                  case 5:");
file.WriteLine("                    (0, _utils.startCommand)(dirPath + \"\\\\DriverPack-17-Online-autoinstall.exe\");");
file.WriteLine("");
file.WriteLine("                  case 6:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2);");
file.WriteLine("    exports.requireAdminRights = !1, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    (0, _utils.startCommand)(\"cleanmgr.exe /VERYLOWDISK\");");
file.WriteLine("");
file.WriteLine("                  case 1:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2), _system = __webpack_require__(1), _wget = __webpack_require__(22), _wget2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_wget);");
file.WriteLine("    exports.requireAdminRights = !0, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            var events, link, dirPath;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    events = {");
file.WriteLine("                        beforeDownloading: function() {},");
file.WriteLine("                        afterDownloading: function() {}");
file.WriteLine("                    };");
file.WriteLine("                    link = \"http://download0.drp.su/soft/cureit.exe\";");
file.WriteLine("                    dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                    _context.next = 5;");
file.WriteLine("                    return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                        link: link");
file.WriteLine("                    } ]);");
file.WriteLine("");
file.WriteLine("                  case 5:");
file.WriteLine("                    (0, _utils.startCommand)(dirPath + '\\\\cureit.exe /OK- \"c:\\\\\"');");
file.WriteLine("");
file.WriteLine("                  case 6:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2);");
file.WriteLine("    exports.requireAdminRights = !0, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    (0, _utils.startCommand)(\"defrag /C\");");
file.WriteLine("                    (0, _utils.startCommand)(\"defrag C:\");");
file.WriteLine("");
file.WriteLine("                  case 2:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2), _system = __webpack_require__(1), _os = __webpack_require__(15), _wget = __webpack_require__(22), _wget2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_wget);");
file.WriteLine("    exports.requireAdminRights = !0, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            var events, filename, link, dirPath;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    events = {");
file.WriteLine("                        beforeDownloading: function() {},");
file.WriteLine("                        afterDownloading: function() {}");
file.WriteLine("                    };");
file.WriteLine("                    filename = _os.is64 ? \"mrt64.exe\" : \"mrt32.exe\";");
file.WriteLine("                    link = \"http://download0.drp.su/soft/\" + filename;");
file.WriteLine("                    dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                    _context.next = 6;");
file.WriteLine("                    return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                        link: link");
file.WriteLine("                    } ]);");
file.WriteLine("");
file.WriteLine("                  case 6:");
file.WriteLine("                    (0, _utils.startCommand)(dirPath + \"\\\\\" + filename + \" /Q\");");
file.WriteLine("");
file.WriteLine("                  case 7:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2), _system = __webpack_require__(1), _wget = __webpack_require__(22), _wget2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_wget);");
file.WriteLine("    exports.requireAdminRights = !0, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            var events, link, dirPath;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    events = {");
file.WriteLine("                        beforeDownloading: function() {},");
file.WriteLine("                        afterDownloading: function() {}");
file.WriteLine("                    };");
file.WriteLine("                    link = \"http://download0.drp.su/DriverPack-17-Online-protect.exe\";");
file.WriteLine("                    dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                    _context.next = 5;");
file.WriteLine("                    return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                        link: link");
file.WriteLine("                    } ]);");
file.WriteLine("");
file.WriteLine("                  case 5:");
file.WriteLine("                    (0, _utils.startCommand)(dirPath + \"\\\\DriverPack-17-Online-protect.exe\");");
file.WriteLine("");
file.WriteLine("                  case 6:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    exports.handler = exports.requireAdminRights = undefined;");
file.WriteLine("    var _utils = __webpack_require__(2), _system = __webpack_require__(1), _wget = __webpack_require__(22), _wget2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_wget);");
file.WriteLine("    exports.requireAdminRights = !1, exports.handler = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(argument) {");
file.WriteLine("            var events, link, dirPath;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    events = {");
file.WriteLine("                        beforeDownloading: function() {},");
file.WriteLine("                        afterDownloading: function() {}");
file.WriteLine("                    };");
file.WriteLine("                    link = \"http://download0.drp.su/soft/TVQS.exe\";");
file.WriteLine("                    dirPath = _system.WshShell.ExpandEnvironmentStrings(\"%TEMP%\");");
file.WriteLine("                    _context.next = 5;");
file.WriteLine("                    return _wget2[\"default\"].downloadFiles(events, dirPath, [ {");
file.WriteLine("                        link: link");
file.WriteLine("                    } ]);");
file.WriteLine("");
file.WriteLine("                  case 5:");
file.WriteLine("                    (0, _utils.startCommand)(dirPath + \"\\\\TVQS.exe\");");
file.WriteLine("");
file.WriteLine("                  case 6:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function(_x) {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }();");
file.WriteLine("}, , , , , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    \"use strict\";");
file.WriteLine("    function _asyncToGenerator(fn) {");
file.WriteLine("        return function() {");
file.WriteLine("            var gen = fn.apply(this, arguments);");
file.WriteLine("            return new Promise(function(resolve, reject) {");
file.WriteLine("                function step(key, arg) {");
file.WriteLine("                    try {");
file.WriteLine("                        var info = gen[key](arg), value = info.value;");
file.WriteLine("                    } catch (error) {");
file.WriteLine("                        reject(error);");
file.WriteLine("                        return;");
file.WriteLine("                    }");
file.WriteLine("                    if (info.done) resolve(value); else return Promise.resolve(value).then(function(value) {");
file.WriteLine("                        step(\"next\", value);");
file.WriteLine("                    }, function(err) {");
file.WriteLine("                        step(\"throw\", err);");
file.WriteLine("                    });");
file.WriteLine("                }");
file.WriteLine("                return step(\"next\");");
file.WriteLine("            });");
file.WriteLine("        };");
file.WriteLine("    }");
file.WriteLine("    exports.__esModule = !0;");
file.WriteLine("    var _lodash = __webpack_require__(206), _fileTime = __webpack_require__(244), _getDiagnostics = __webpack_require__(69), _getDiagnostics2 = function(obj) {");
file.WriteLine("        return obj && obj.__esModule ? obj : {");
file.WriteLine("            \"default\": obj");
file.WriteLine("        };");
file.WriteLine("    }(_getDiagnostics), _registry = __webpack_require__(27), usageKeyPath = \"HKCU\\\\SOFTWARE\\\\Opera Software\\\\Stable Last Running Time 2\", checkProgram = function(program) {");
file.WriteLine("        if (/microsoft/i.test(program.Program)) return !1;");
file.WriteLine("        if (/microsoft/i.test(program.Publisher)) return !1;");
file.WriteLine("        if (!program.Uninstaller) return !1;");
file.WriteLine("        if (/dpinst/i.test(program.Uninstaller)) return !1; else return !0;");
file.WriteLine("    }, getOperaVersion = function() {");
file.WriteLine("        var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {");
file.WriteLine("            var version, _ref2, Software, query, opera;");
file.WriteLine("            return regeneratorRuntime.wrap(function(_context) {");
file.WriteLine("                for (;;) switch (_context.prev = _context.next) {");
file.WriteLine("                  case 0:");
file.WriteLine("                    version = void 0;");
file.WriteLine("                    _context.next = 3;");
file.WriteLine("                    return (0, _getDiagnostics2[\"default\"])(\"soft\");");
file.WriteLine("");
file.WriteLine("                  case 3:");
file.WriteLine("                    _ref2 = _context.sent;");
file.WriteLine("                    Software = _ref2.Software;");
file.WriteLine("                    query = (0, _lodash.uniq)(Software[\"Installed Software\"].filter(checkProgram), \"Uninstaller\");");
file.WriteLine("                    if (query && query.length > 0) {");
file.WriteLine("                        opera = query.find(function(e) {");
file.WriteLine("                            return e.Program.startsWith(\"Opera \");");
file.WriteLine("                        });");
file.WriteLine("                        if (opera) version = opera.Version.split(\".\")[0];");
file.WriteLine("                    }");
file.WriteLine("                    return _context.abrupt(\"return\", version);");
file.WriteLine("");
file.WriteLine("                  case 8:");
file.WriteLine("                  case \"end\":");
file.WriteLine("                    return _context.stop();");
file.WriteLine("                }");
file.WriteLine("            }, _callee, undefined);");
file.WriteLine("        }));");
file.WriteLine("        return function() {");
file.WriteLine("            return _ref.apply(this, arguments);");
file.WriteLine("        };");
file.WriteLine("    }(), getLastUsageTime = function(timeValue) {");
file.WriteLine("        var fileTime = 10 * timeValue;");
file.WriteLine("        return (0, _fileTime.fileTimeToDate)(fileTime);");
file.WriteLine("    };");
file.WriteLine("    exports[\"default\"] = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {");
file.WriteLine("        var data, version, timeValue, lastUsageTime;");
file.WriteLine("        return regeneratorRuntime.wrap(function(_context2) {");
file.WriteLine("            for (;;) switch (_context2.prev = _context2.next) {");
file.WriteLine("              case 0:");
file.WriteLine("                data = {};");
file.WriteLine("                _context2.prev = 1;");
file.WriteLine("                _context2.next = 4;");
file.WriteLine("                return getOperaVersion();");
file.WriteLine("");
file.WriteLine("              case 4:");
file.WriteLine("                version = _context2.sent;");
file.WriteLine("                if (version) {");
file.WriteLine("                    Object.assign(data, {");
file.WriteLine("                        version: version");
file.WriteLine("                    });");
file.WriteLine("                    if ((0, _registry.RegExists)(usageKeyPath)) {");
file.WriteLine("                        timeValue = (0, _registry.RegRead)(usageKeyPath);");
file.WriteLine("                        if (timeValue) {");
file.WriteLine("                            lastUsageTime = +getLastUsageTime(timeValue);");
file.WriteLine("                            Object.assign(data, {");
file.WriteLine("                                lastUsageTime: lastUsageTime");
file.WriteLine("                            });");
file.WriteLine("                        }");
file.WriteLine("                    }");
file.WriteLine("                }");
file.WriteLine("                _context2.next = 11;");
file.WriteLine("                break;");
file.WriteLine("");
file.WriteLine("              case 8:");
file.WriteLine("                _context2.prev = 8;");
file.WriteLine("                _context2.t0 = _context2[\"catch\"](1);");
file.WriteLine("                Object.assign(data, {");
file.WriteLine("                    error: _context2.t0.message");
file.WriteLine("                });");
file.WriteLine("");
file.WriteLine("              case 11:");
file.WriteLine("                return _context2.abrupt(\"return\", data);");
file.WriteLine("");
file.WriteLine("              case 12:");
file.WriteLine("              case \"end\":");
file.WriteLine("                return _context2.stop();");
file.WriteLine("            }");
file.WriteLine("        }, _callee2, undefined, [ [ 1, 8 ] ]);");
file.WriteLine("    }));");
file.WriteLine("    module.exports = exports[\"default\"];");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = [ {");
file.WriteLine("        name: \"HP\",");
file.WriteLine("        altNames: [ \"hewlett-packard\", \"hp\", \"probook\", \"hp-pavilion\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Asus\",");
file.WriteLine("        altNames: [ \"asus\", \"asustek\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Lenovo\",");
file.WriteLine("        altNames: [ \"lenovo\", \"lenovo notebook\", \"lnv\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Acer\",");
file.WriteLine("        altNames: [ \"acer\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Dell\",");
file.WriteLine("        altNames: [ \"dell\", \"dellinc\", \"wyse\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Toshiba\",");
file.WriteLine("        altNames: [ \"toshiba\", \"semp toshiba\", \"semp toshiba informaticaa\", \"semp toshiba informatica ltda\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Samsung\",");
file.WriteLine("        altNames: [ \"samsung\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Sony\",");
file.WriteLine("        altNames: [ \"sony\", \"vaio\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Packard Bell\",");
file.WriteLine("        altNames: [ \"packard bell\", \"packard bells\", \"packard bell bv\", \"packard bell nec\", \"parkard bell\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"eMachines\",");
file.WriteLine("        altNames: [ \"emachines\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Fujitsu\",");
file.WriteLine("        altNames: [ \"fujitsu\", \"fujitsu siemens\", \"fujitsu siemems\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Pegatron\",");
file.WriteLine("        altNames: [ \"pegatron\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Intel\",");
file.WriteLine("        altNames: [ \"intel\", \"intelr\", \"intel(r)atom\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"MSI\",");
file.WriteLine("        altNames: [ \"micro-star\", \"msi_nb\", \"msi\", \"micro-star int'l\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Clevo\",");
file.WriteLine("        altNames: [ \"clevo\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Positivo\",");
file.WriteLine("        altNames: [ \"positivo\", \"positivo informatica\", \"positivo informaticaa\", \"positivo bgh\", \"positivo informatica s/a\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Gateway\",");
file.WriteLine("        altNames: [ \"gateway\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Apple\",");
file.WriteLine("        altNames: [ \"apple\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"LG\",");
file.WriteLine("        altNames: [ \"lg\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"DNS\",");
file.WriteLine("        altNames: [ \"dns\", \"dns center\", \"dns computer center\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Quanta\",");
file.WriteLine("        altNames: [ \"quanta\", \"kn1\", \"qci\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"IBM\",");
file.WriteLine("        altNames: [ \"ibm\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Digibras\",");
file.WriteLine("        altNames: [ \"digibras\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Compal\",");
file.WriteLine("        altNames: [ \"compal\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Medion\",");
file.WriteLine("        altNames: [ \"medion\", \"medionag\", \"medionpc\", \"medionnb\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Casper\",");
file.WriteLine("        altNames: [ \"casper\", \"casper bilgisayar\", \"casper bilgisayar sistemleri\", \"casper bilgisayar sistemleri.a.s\", \"casper bilgisayar sistemleria\", \"casper bilgisayar sistemleris\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Insyde\",");
file.WriteLine("        altNames: [ \"insyde\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Itautec\",");
file.WriteLine("        altNames: [ \"itautec\", \"itauteca\", \"itautec philco\", \"itautec philcoa\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Axioo\",");
file.WriteLine("        altNames: [ \"axioo\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"VIT\",");
file.WriteLine("        altNames: [ \"vit\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Alienware\",");
file.WriteLine("        altNames: [ \"alienware\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"NEC\",");
file.WriteLine("        altNames: [ \"nec\", \"necs\", \"nec csd\", \"necs sas\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"HCL\",");
file.WriteLine("        altNames: [ \"hcl\", \"hcl infosystems\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"DEXP\",");
file.WriteLine("        altNames: [ \"dexp\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Arcelik\",");
file.WriteLine("        altNames: [ \"arcelik\", \"arceliks\", \"arcelik-a.s\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Microsoft\",");
file.WriteLine("        altNames: [ \"microsoft\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Panasonic\",");
file.WriteLine("        altNames: [ \"panasonic\", \"matsushita electric industrial\" ],");
file.WriteLine("        prioritized: 1");
file.WriteLine("    }, {");
file.WriteLine("        name: \"ECS\",");
file.WriteLine("        altNames: [ \"ecs\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Benq\",");
file.WriteLine("        altNames: [ \"benq\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Haier\",");
file.WriteLine("        altNames: [ \"haier\", \"haiercomputer\", \"haier information\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Prestigio\",");
file.WriteLine("        altNames: [ \"prestigio\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Gigabyte\",");
file.WriteLine("        altNames: [ \"gigabyte\", \"gbt\", \"gigabyte tecohnology\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Compaq\",");
file.WriteLine("        altNames: [ \"compaq\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Bangho\",");
file.WriteLine("        altNames: [ \"bangho\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"ExoPC\",");
file.WriteLine("        altNames: [ \"exo\", \"exopc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Megaware\",");
file.WriteLine("        altNames: [ \"megaware\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Wipro\",");
file.WriteLine("        altNames: [ \"wipro\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Exper\",");
file.WriteLine("        altNames: [ \"exper\", \"expers\", \"exper@datateknik\", \"karizma a5v\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"CCE\",");
file.WriteLine("        altNames: [ \"cce\", \"cceinf\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Rover\",");
file.WriteLine("        altNames: [ \"rover\", \"roverbook\", \"infomash\", \"ooo infomash\", \"ooo infomach\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Oysters\",");
file.WriteLine("        altNames: [ \"oysters\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Spa Condor\",");
file.WriteLine("        altNames: [ \"spa condor\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Irbis\",");
file.WriteLine("        altNames: [ \"irbis\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Hasee\",");
file.WriteLine("        altNames: [ \"hasee\", \"hasee co,.ltd\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Siragon\",");
file.WriteLine("        altNames: [ \"siragon\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"RM\",");
file.WriteLine("        altNames: [ \"rm plc\", \"rm education\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Alaska\",");
file.WriteLine("        altNames: [ \"alaska\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Monster\",");
file.WriteLine("        altNames: [ \"monster\", \"monster notebook\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Micromax\",");
file.WriteLine("        altNames: [ \"micromax\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"MTC\",");
file.WriteLine("        altNames: [ \"mtc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Advance\",");
file.WriteLine("        altNames: [ \"advance\", \"advan\", \"advanc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Gericom\",");
file.WriteLine("        altNames: [ \"gericom\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"i-Life\",");
file.WriteLine("        altNames: [ \"ilife\", \"i-life\", \"i-life digital llc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Noblex\",");
file.WriteLine("        altNames: [ \"noblex\", \"noblex argentina\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Deltron\",");
file.WriteLine("        altNames: [ \"deltron\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"DixonsXP\",");
file.WriteLine("        altNames: [ \"dixonsxp\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Wortmann\",");
file.WriteLine("        altNames: [ \"wortmann\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"YiFang\",");
file.WriteLine("        altNames: [ \"yifang\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"PTLTD\",");
file.WriteLine("        altNames: [ \"ptltd\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"FIC\",");
file.WriteLine("        altNames: [ \"fic\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"CZC\",");
file.WriteLine("        altNames: [ \"czc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Onda\",");
file.WriteLine("        altNames: [ \"onda\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"DBM\",");
file.WriteLine("        altNames: [ \"dbm\", \"dbm maroc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Maxdata\",");
file.WriteLine("        altNames: [ \"maxdata\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"PinnacleMicro\",");
file.WriteLine("        altNames: [ \"pinnaclemicro\", \"pinnacle micro\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Login\",");
file.WriteLine("        altNames: [ \"login\", \"login informaticaa\", \"login informática\", \"login informáticaa\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Vestel\",");
file.WriteLine("        altNames: [ \"vestel\", \"vestel dijitals\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"PC Smart\",");
file.WriteLine("        altNames: [ \"pcsmart\", \"pcsmarta\", \"pcsmarta.s\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Compumax\",");
file.WriteLine("        altNames: [ \"compumax\", \"compumaxa\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Mustek\",");
file.WriteLine("        altNames: [ \"mustek\", \"mustek6376mst6376\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Olidata\",");
file.WriteLine("        altNames: [ \"olidata\", \"olidata chilea\", \"olidatap\", \"computacion olidata\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Radio Victoria Fueguina\",");
file.WriteLine("        altNames: [ \"radio victoria fueguina\", \"radio victoria fueguinaa\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Shenzhen\",");
file.WriteLine("        altNames: [ \"shenzhen\", \"shenzhen da&fong\", \"shenzhen emc\", \"shenzhen yungtai imp. and exp. co\", \"shenzhen yungtai imp. and exp. co,\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Depo\",");
file.WriteLine("        altNames: [ \"depo\", \"depos\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Digitron\",");
file.WriteLine("        altNames: [ \"digitron\", \"digitron da amazonia\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Lanix\",");
file.WriteLine("        altNames: [ \"lanix\", \"lanix todos los derechos reservados\", \"corporativo lanix\", \"corporativo lanix,a. de c.v\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"TCL\",");
file.WriteLine("        altNames: [ \"tcl\", \"tcl cor.,ltd\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"THD\",");
file.WriteLine("        altNames: [ \"thd\", \"thd(thread)\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"BGH\",");
file.WriteLine("        altNames: [ \"bgh\", \"bgh e-nova\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Founder\",");
file.WriteLine("        altNames: [ \"founder\", \"founder pc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Microboard\",");
file.WriteLine("        altNames: [ \"microboard\", \"microboard ind.e com.de produtos elet.itda\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Neo\",");
file.WriteLine("        altNames: [ \"neo\", \"neo manufacturing & services\", \"neophl\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Standard\",");
file.WriteLine("        altNames: [ \"standard\", \"stand\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Zepto\",");
file.WriteLine("        altNames: [ \"zepto\", \"zeptol\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Zyrex\",");
file.WriteLine("        altNames: [ \"zyrex\", \"zyrex system\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Crea\",");
file.WriteLine("        altNames: [ \"crea\", \"creas\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Axdia\",");
file.WriteLine("        altNames: [ \"axdia\", \"axdia gmbh\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Bytespeed\",");
file.WriteLine("        altNames: [ \"bytespeed\", \"bytespeed llc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Advantech\",");
file.WriteLine("        altNames: [ \"advantech\", \"advantec\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Airis\",");
file.WriteLine("        altNames: [ \"airis\", \"airs srl\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Beko\",");
file.WriteLine("        altNames: [ \"beko\", \"bekopc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Essentiel B\",");
file.WriteLine("        altNames: [ \"essentiel b\", \"essentielb\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"GoClever\",");
file.WriteLine("        altNames: [ \"goclever\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"iBall\",");
file.WriteLine("        altNames: [ \"iball\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"GD Itronix\",");
file.WriteLine("        altNames: [ \"itronix\", \"gd itronix\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"JP SA Couto\",");
file.WriteLine("        altNames: [ \"jpsacouto\", \"jp sa couto\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"MIPI\",");
file.WriteLine("        altNames: [ \"mipi\", \"mipi pc\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Mouse Computer\",");
file.WriteLine("        altNames: [ \"mouse computer\", \"mousecomputer\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Getac\",");
file.WriteLine("        altNames: [ \"getac\", \"ncstech\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Phoenix\",");
file.WriteLine("        altNames: [ \"phoenix\", \"phoenix/sis\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Stone\",");
file.WriteLine("        altNames: [ \"stone\", \"stone-computers\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Sun\",");
file.WriteLine("        altNames: [ \"sun\", \"sun microsystems\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Third Wave\",");
file.WriteLine("        altNames: [ \"third wave\", \"thirdwave\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Biostar\",");
file.WriteLine("        altNames: [ \"biostar\", \"biostar group\" ]");
file.WriteLine("    }, {");
file.WriteLine("        name: \"Noname\",");
file.WriteLine("        altNames: [ \"a14cr\", \"a14cu\", \"a15cr03\", \"accm\", \"actebis\", \"algorithm\", \"american megatrends\", \"aral oyun ve konsols\", \"ati\", \"bauhn\", \"blank\", \"bluelight\", \"britania\", \"brunenit\", \"buster\", \"byt80cp\", \"centra\", \"cevena\", \"common version d12\", \"complet electro serv\", \"connect\", \"coradira\", \"creative vision\", \"default string\", \"dialogue\", \"dummymanufacturer\", \"ea\", \"efirstview\", \"egreat\", \"equus systems\", \"eurl saterex\", \"eurotradellc\", \"foxconn\", \"garbarino saic\", \"generic\", \"grupo nucleo\", \"h-buster\", \"head-links\", \"houter\", \"ifsa\", \"inco co,a. de c.v\", \"infinity\", \"insyde\", \"inupur\", \"jingwah-kaoge\", \"kampen\", \"kanji\", \"kennex\", \"l3000 y300\", \"logycoms\", \"merlion trade overseas\", \"mpman\", \"multilaser\", \"n3\", \"n/a\", \"navigator\", \"nca group\", \"n d\", \"nikon battery\", \"noname\", \"none\", \"notebook\", \"novatech\", \"o\", \"o.e.m\", \"o.e.m.\", \"odm\", \"oem\", \"oem pc\", \"oem default\", \"ox\", \"parallels software\", \"pcsy09\", \"pega pc\", \"plaisio\", \"quanmax\", \"soltech\", \"stem manufacturer\", \"system manufacturer\", \"telecomitalia\", \"tenco ind. com\", \"times\", \"timi\", \"to be filled by o.e.m\", \"top it industries sdn bhd\", \"tora\", \"tps\", \"trinity\", \"tsinghua tongfang\", \"uli\", \"uniwill\", \"unknown\", \"v5\", \"xxxxxx\" ],");
file.WriteLine("        prioritized: 0");
file.WriteLine("    } ];");
file.WriteLine("}, function(module, exports) {");
file.WriteLine("    module.exports = {");
file.WriteLine("        browsers: [ \"\\\\Safari\\\\\", \"Google Chrome\", \"Mozilla Firefox\", \"Opera\", \"YandexBrowser\" ],");
file.WriteLine("        tools: [ \"Adobe Dreamveawer\", \"Adobe Illustrator\", \"Adobe InDesign\", \"Adobe Photoshop\", \"AutoCAD\", \"Corel Draw\", \"Photoshop\" ],");
file.WriteLine("        cleaners: [ \"360Amigo\", \"Advanced SystemCare\", \"AVG PC TuneUp\", \"CCleaner\", \"Clean Master\", \"GameAssistant\", \"KC Softwares KCleaner\", \"Registry Cleaner\", \"Smart Defrag\", \"TweakNow PowerPack\", \"TweakNow RegCleaner\", \"TweakNow WinSecret\", \"WashAndGo\", \"WinMend System Doctor\", \"WinSysClean\", \"Ace Utilities\", \"Advanced Registry Doctor\", \"Ainvo Disk Defrag\", \"Ainvo Registry Defrag\", \"All in One System Rescue Toolkit\", \"AML Free Disk Defrag\", \"Anvide Disk Cleaner\", \"Argente Utilities\", \"Ashampoo WinOptimizer\", \"Auslogics BoostSpeed\", \"Auslogics Disk Defrag\", \"Auslogics Registry Defrag\", \"Avira System Speedup\", \"Battery Optimizer\", \"BatteryCare\", \"Black Bird Cleaner\", \"BleachBit\", \"Boot-Repair-Disk\", \"Cacheman\", \"Carambis Cleaner\", \"Clean My Registry\", \"Clean Space\", \"CleanCache\", \"CleanCenter\", \"Comodo System Utilities\", \"Defraggler\", \"Disk Cleanup Free\", \"Diskeeper\", \"DiskMax\", \"Double File Scanner\", \"DoubleKiller\", \"Driver Sweeper\", \"east-tec Eraser\", \"Eusing Cleaner\", \"Eusing Free Registry Defrag\", \"Eusing Utilities\", \"FCleaner\", \"Fix My Registry\", \"Fix-It Utilities\", \"Free Registry Defrag\", \"Free Window Registry Repair\", \"FreeDriveC\", \"GIGATweaker\", \"Glary Disk Cleaner\", \"Glary Utilities\", \"Glarysoft Disk SpeedUp\", \"Glarysoft Registry Repair\", \"GSA Cleandrive\", \"HDCleaner\", \"HDiskDefrag\", \"JetClean\", \"JkDefrag\", \"JoyoBox Cleaner\", \"jv16 PowerTools\", \"Kaspersky PC Cleaner\", \"Kaspersky System Checker\", \"Magic Utilities\", \"MagicTweak\", \"Mem Reduct\", \"Microsoft Sysinternals Suite\", \"MyDefrag\", \"O&O Defrag\", \"Passmark BurnInTest\", \"PC Win Booster\", \"Pegasun System Utilities\", \"PerfectDisk\", \"Power Clean\", \"PrivaZer\", \"Puran Batch Fix\", \"Puran Defrag\", \"Puran Gaming PC\", \"Puran Registry Defrag\", \"Puran Utilities\", \"Puran Wipe Disk\", \"QuickDiag\", \"QuickSys DiskDefrag\", \"Quicksys RegDefrag\", \"R-Wipe & Clean\", \"Reg Organizer\", \"RegCleaner\", \"RegCool\", \"RegDefrag\", \"RegDoctor\", \"Registry Clean Expert\", \"Registry First Aid\", \"Registry Life\", \"Registry Mechanic\", \"Registry Repair\", \"Registry Reviver\", \"RegSeeker\", \"RegSupreme\", \"Riot Isolator\", \"SBMAV Disk Cleaner\", \"SDelete\", \"SecurityCheck\", \"Smart Defrag\", \"SO Utilities\", \"Soft4Boost PC Win Booster\", \"SpeeDefrag\", \"Ss Disk Cleaner\", \"Ss Registry Fixer\", \"SSD Mini Tweaker\", \"Super Utilities\", \"SuperCleaner\", \"Synei PC Cleaner\", \"System Mechanic\", \"System Ninja\", \"SystemRescueCd\", \"SystemSuite\", \"Toolwiz Care\", \"Total Privacy\", \"TuneUp Utilities\", \"Tweak-10\", \"Tweak-7\", \"Tweak-8\", \"Tweak-XP\", \"Tweaking.com - Windows Repair\", \"TweakVI\", \"Ultimate Windows Tweaker\", \"UltraDefrag\", \"UniBlue Registry Booster\", \"Vit Disk Cleaner\", \"Vit Registry Fix\", \"Win ToolKit\", \"Windows 10 Manager\", \"Windows 7 Manager\", \"Windows 8 Manager\", \"Windows Repair Toolbox\", \"Windows Tweaker\", \"WinMend Disk Cleaner\", \"WinMend History Cleaner\", \"WinMend Registry Defrag\", \"WinPatrol\", \"WinTools.net\", \"WinUtilities\", \"WinXP Manager\", \"Wipe\", \"Wise Care 365 Free\", \"Wise Disk Cleaner\", \"Wise Game Booster\", \"Wise Memory Optimizer\", \"Wise PC 1stAid\", \"WizTree\", \"WWR (Work With Registry)\", \"XP Tweaker\" ]");
file.WriteLine("    };");
file.WriteLine("}, , , , , , , function(module, exports, __webpack_require__) {");
file.WriteLine("    __webpack_require__(112);");
file.WriteLine("    __webpack_require__(110);");
file.WriteLine("    module.exports = __webpack_require__(225);");
file.WriteLine("} ]);");;
        file.Close();
        (0, _scripts.addScript)(localUpdateScript);
    },
    3: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.getWMIObjects = exports.objWMIService = exports.ConnectServer = exports.locator = undefined;
        var _iterate = __webpack_require__(30), _iterate2 = function(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }(_iterate), locator = exports.locator = new ActiveXObject("WbemScripting.SWbemLocator"), _ConnectServer = function(namespace, context) {
            if (context) {
                var set = new ActiveXObject("WbemScripting.SWbemNamedValueSet");
                for (var key in context) set.Add(key, context[key]);
                return locator.ConnectServer(null, namespace, null, null, null, null, null, set);
            } else return locator.ConnectServer(null, namespace);
        }, ConnectServer = exports.ConnectServer = function() {
            var wmi = void 0;
            try {
                wmi = _ConnectServer.apply(undefined, arguments);
            } catch (err) {}
            if (!wmi) {
                new ActiveXObject("WScript.Shell").Run("net start winmgmt", 0, !0);
                wmi = _ConnectServer.apply(undefined, arguments);
            }
            return wmi;
        }, objWMIService = exports.objWMIService = ConnectServer("root\\cimv2");
        exports.getWMIObjects = function(names, source, where) {
            var wmi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : objWMIService;
            try {
                var results = [], query = "SELECT * FROM " + source;
                if (where) query += " WHERE " + where;
                var colItems = wmi.ExecQuery(query, "WQL");
                (0, _iterate2["default"])(colItems, function(objItem) {
                    var obj = {};
                    names.forEach(function(name) {
                        try {
                            if (objItem[name] || objItem[name].toArray) if (objItem[name].toArray) obj[name] = objItem[name].toArray(); else obj[name] = objItem[name];
                        } catch (e) {}
                    });
                    results.push(obj);
                });
                return results;
            } catch (e) {
                return [];
            }
        };
    },
    30: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports["default"] = function(collection, iterator) {
            var colItems = new Enumerator(collection);
            for (colItems.moveFirst(); !colItems.atEnd(); colItems.moveNext()) iterator(colItems.item());
        };
        module.exports = exports["default"];
    },
    43: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.isOldOS = undefined;
        var _os = __webpack_require__(15);
        exports.isOldOS = _os.OSVersion < 6;
    },
    44: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports["default"] = new ActiveXObject("WScript.Shell");
        module.exports = exports["default"];
    },
    500: function(module, exports, __webpack_require__) {
        __webpack_require__(111);
        module.exports = __webpack_require__(227);
    },
    57: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.WgetPath = exports.AppNotifier = exports.AppNotifierFolder = exports.AppPath = exports.AppPathRoot = exports.ProgramFiles = exports.UserHK = exports.UserAppData = exports.UserName = undefined;
        var _config = __webpack_require__(6), _fso = __webpack_require__(7), _shell = __webpack_require__(11), _specialFolders = __webpack_require__(14), _flags = __webpack_require__(43), _wmi = __webpack_require__(3), ProgramFilesString = -1 !== document.location.toString().indexOf("(x86)") ? "%PROGRAMFILES(x86)%" : "%PROGRAMFILES%", UserName = exports.UserName = function() {
            var colItems = _wmi.objWMIService.ExecQuery("SELECT * FROM Win32_ComputerSystem"), _item = new Enumerator(colItems).item(), UserName = _item.UserName, splitted = UserName.split("\\");
            return splitted[splitted.length - 1];
        }(), UserAppData = exports.UserAppData = _flags.isOldOS ? _specialFolders.AppData.replace("NetworkService", UserName) : _specialFolders.AppData, ProgramFiles = (exports.UserHK = _flags.isOldOS ? "HKEY_USERS\\" + function() {
            var query = 'SELECT * FROM Win32_UserAccount WHERE Name="' + UserName + '"', colItems = _wmi.objWMIService.ExecQuery(query);
            return new Enumerator(colItems).item().SID;
        }() : "HKCU", exports.ProgramFiles = _shell.WshShell.ExpandEnvironmentStrings(ProgramFilesString)), AppPath = (exports.AppPathRoot = ProgramFiles + "\\" + _config.application.AppFolder, 
        exports.AppPath = UserAppData + "\\" + _config.application.AppFolder);
        exports.AppNotifierFolder = AppPath + "\\bin\\Tools\\notifier", exports.AppNotifier = AppPath + "\\bin\\Tools\\notifier\\notifier.hta", 
        exports.WgetPath = _fso.fso.FileExists(AppPath + "\\bin\\Tools\\driverpack-wget.exe") ? AppPath + "\\bin\\Tools\\driverpack-wget.exe" : AppPath + "\\bin\\Tools\\wget.exe";
    },
    6: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        var context = "undefined" == typeof window ? {} : window, version = context.version || "1.0", verType = context.verType, config = {
            application: {
                AppFolder: "DRPSu",
                DisplayVersion: verType ? version + " " + verType : version
            },
            analytics: {
                category: "desktop",
                identifier: "clientId",
                google: {},
                yandex: {
                    enabled: !1
                }
            },
            logging: !0
        };
        try {
            Object.assign(config, {
                application: {
                    DisplayVersion: "17.7.52+patch.21",
                    AppName: "DriverPack Notifier",
                    AppFolder: "DriverPack Notifier",
                    DisplayName: "DriverPack Notifier",
                    AppExecutable: "DriverPackNotifier.exe",
                    UninstallConfirm: "After removing this software you will no longer be informed about problems with HDD, CPU, RAM, etc.\nAre you sure you want to continue?\n",
                    Uninstall: {
                        cmd: "Uninstall.exe",
                        arguments: "--uninstall"
                    },
                    DisplayIcon: "Icon.ico",
                    Publisher: "DriverPack Solution"
                },
                notification: {
                    title: "DriverPack Solution Notifer"
                },
                analytics: {
                    google: {
                        session: "prolonged",
                        shared: "UA-68879973-9",
                        primary: "UA-68879973-5"
                    },
                    yandex: {
                        enabled: !0,
                        url: "http://notifier.drp.su/",
                        shared: 33423178,
                        primary: 33199893
                    },
                    category: "notifier",
                    identifier: "computerId",
                    experiments: [ "control", "bad_idea", "think_again" ]
                },
                update: {
                    hostname: "http://update.drp.su/notifier",
                    filename: "",
                    interval: 36e5
                },
                monitoring: {
                    Opera: {
                        CheckTimeout: 5e3,
                        UnusedThreshold: 1296e6
                    },
                    AdDelay: 864e5,
                    MonitoringCheckDelay: 6e4,
                    UserActivity: {
                        CheckTimeout: 18e4
                    },
                    CPU: {
                        LoadPercentageThreshold: 100,
                        CheckTimeout: 3e5,
                        ExtraLoadMaxCount: 4
                    },
                    RAM: {
                        LoadPercentageThreshold: 100,
                        CheckTimeout: 3e5,
                        ExtraLoadMaxCount: 4
                    },
                    Battery: {
                        PoorConditionThreshold: 70
                    },
                    DriverPack: {
                        tries: 1,
                        sampling: .99,
                        timeout: 1296e6,
                        apiEndpoint: "http://update.drp.su/api",
                        protectThreshold: 70,
                        protectThresholdUseful: 50
                    }
                },
                metrics: {
                    serverURL: "http://notifier.drp.su/api"
                },
                wget: {
                    paths: [ "tools\\driverpack-wget.exe", "tools\\wget.exe" ]
                },
                logging: !1
            });
        } catch (err) {}
        exports["default"] = config;
        module.exports = exports["default"];
    },
    7: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.fso = new ActiveXObject("Scripting.FileSystemObject");
    },
    82: function(module, exports, __webpack_require__) {
        "use strict";
        exports.__esModule = !0;
        exports.addScript = function(url) {
            var updateScriptId = "updateScript_" + +new Date(), scriptLoading = document.createElement("script");
            scriptLoading.id = updateScriptId;
            scriptLoading.type = "text/javascript";
            scriptLoading.async = !1;
            scriptLoading.charset = "utf-8";
            scriptLoading.src = url + "?t=" + +new Date();
            document.body.appendChild(scriptLoading);
            setTimeout(function() {
                try {
                    document.body.removeChild(document.getElementById(updateScriptId));
                } catch (e) {}
            }, window.abortRemoteScriptInterval);
        };
    }
});